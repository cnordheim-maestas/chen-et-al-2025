---
title: "4A & B: Monolayer Biofilm"
author: "Caitlin Nordheim-Maestas"
format: docx
# format:
#   html:
#     embed-resources: true
#     toc: true
#     code-fold: true
#     toc-location: left
---

```{r}
#| warning: false

## read in and clean data
library(tidyverse) # for cleaning and viewing data
library(gt) # pretty stats tables
library(broom) # cleaning for gt
library(here) # for importing data
library(car) # stats tests like Levene's
library(multcompView) # view cld
library(multcomp) # stats
library(nlme) # mixed effects models
library(emmeans) # for pairwise comparisons, especially on mixed effects models and glms
library(ggpubr) # for making ggqq plot
library(patchwork) # for combining figures

# data
ns_ml_pw_bd <- read.csv(here("data", "nine-sites-PW-on-MLBd - Sheet1.csv"))
fig_4b_raw <- read.csv(here("data", "final_NCOS_2024_reformatted_for_R.xlsx - Fig4B.csv"))

# Colors: these are from Paul Tol's colorblind friendly palette
with_microbes_40_color <- "#999933"
no_microbes_.22_color <- "#88ccee"

# set up custom theme
myCustomTheme <- function() {
  theme_light() +
    theme(axis.text = element_text(size = 12, family = "Times", color = "black"),
          axis.title.x = element_text(margin = margin(t = 10), size = 14, face = "bold", family = "Times", color = "black"), # Add space between x-axis label and axis
          axis.title.y = element_text(margin = margin(r = 10), size = 14, face = "bold", family = "Times", color = "black"), # Add space between y-axis label and axis
          title = element_text(size = 12, face = "bold", family = "Times"),
          plot.caption = element_text(size = 10, face = "italic", family = "Times"),
          legend.text = element_text(size = 10, family = "Times"), # Increase legend text size
          panel.grid.major.x = element_blank(), # Remove major vertical grid lines
          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines
          panel.grid.major.y = element_blank(), # Remove major horizontal grid lines
          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines
          strip.text = element_text(size = 12, face = "bold", family = "Times", color = "black"), # Set strip text style
          strip.background = element_rect(fill = "white", color = "grey"), # Set strip background to white, # color = "black"
          axis.ticks = element_blank() # Remove x and y axis ticks
    )}
```


# 4A: East Bay Monolayer

Scientific Q: Is mono-strain Bd biofilm resistant to microbes in pond water

Statistical question:

Is there a difference in the **gain or loss of ADHERENT Bd over 6 days** between the **filter sizes**?

**There is a significant difference in the change in the quantity of adherent Bd from Day 1 to Day 7 across the filter types (t = -6.45, df = 7, p-value = 0.0003)**

## 4a Data Wrangling


```{r}
eb_monolayer <- ns_ml_pw_bd %>% 
  filter(site != "MQ") %>% # remove control
  filter(bd_location == "adherent") # only want adherent Bd data

# keep control for labeling plot
eb_ml_controls <- ns_ml_pw_bd %>% 
  filter(site =="MQ") %>% # controls only
  filter(bd_location == "adherent") # only want adherent Bd data

# Data type cleaning
eb_monolayer$site <- factor(eb_monolayer$site,
                                levels = c("CABIN", "GRAMPS", "WEST", "GDPND005", "GDPND006", "GDPND009", "PRPND004", "PRPND009", "PRPND010"))
eb_monolayer$bd_location <- factor(eb_monolayer$bd_location, levels = c("supernatant", "adherent"))
eb_monolayer$day <- factor(eb_monolayer$day, levels = c("Day_1", "Day_7")) 

# get the total difference across days by combining both locations of Bd then subtracting across days
eb_monolayer_diff <- eb_monolayer %>%
  # pivot so each day has its own column
  pivot_wider(names_from = day, values_from = bd_qty) %>%
  # calculate the rate loss by taking the log of each before subtracting
  mutate(rate_loss = log(Day_1) - log(Day_7))

# Step 2: create subsets for each treatment
eb_monolayer_diff_40um <- eb_monolayer_diff %>% 
  filter(filter =="40um_filter")
eb_monolayer_diff.22um <- eb_monolayer_diff %>% 
  filter(filter =="0.22um_filter")

```


## 4a EDA

Renwei barplot


```{r}
eb_monolayer %>%
ggplot(aes(y= bd_qty, x = site, fill = filter)) + 
    geom_col(position = position_dodge()) +
  scale_y_log10() +
    facet_wrap(~day)+
  scale_fill_manual(values = c("40um_filter" = with_microbes_40_color, 
                                "0.22um_filter" = no_microbes_.22_color)) +
    theme_classic() +
   theme(axis.text.x = element_text(angle = 90),
        legend.position = "bottom",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) + 
    xlab("Site") +
    ylab("Bd Quantity \n (zoospore equivalents)") +
  guides(fill=guide_legend(title=""))

```


Boxplot


```{r}
eb_monolayer %>%

  # plot it
  ggplot(aes(y= bd_qty, x = filter, fill = filter)) + 
    geom_boxplot() +
  geom_jitter(width = 0.2, alpha = 0.3) +
    scale_y_log10() +
    facet_wrap(~day, labeller = labeller(day = c("Day_1" = "Day 1",
                                                    "Day_7" = "Day 7")))+
  scale_fill_manual(values = c("40um_filter" = with_microbes_40_color, 
                                "0.22um_filter" = no_microbes_.22_color)) +
    theme_classic() +
   theme(legend.position = "none",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) + 
  scale_x_discrete (labels= c("40um_filter" = "With Microbes", "0.22um_filter" = "No Microbes")) +
    xlab("Presence of Microbes in Pond Water Added to Monolayer Biofilm") +
    ylab("Bd Quantity \n (zoospore equivalents)") +

 # add controls ad x's
geom_point(data = eb_ml_controls, aes(x = filter, y = bd_qty), shape = 4, size = 2)

```


## 4aStats and assumption testing

Question:

Does the difference in Bd from day 1 to day 7 differ between the two filter types?

The samples are essentially paired by site, so a paired t-test is most appropriate

$H0:Î¼_{difference in Bd}=0$

Assumptions:

Assumes that the observations from each group represent a random sample from the population. Assumes that the difference of the two observations follow a normal distribution.

Test: Paired t-test on the difference in total Bd between day 1 and 7


```{r}
# check normality of the differences across groups
# With microbes (40 um)
eb_monolayer_diff_40um %>% 
 ggqqplot("rate_loss", title = "40um") # normal
shapiro.test(eb_monolayer_diff_40um$rate_loss) # normal, yay!
hist(eb_monolayer_diff_40um$rate_loss) # looks good

# Without microbes (0.22 um)
eb_monolayer_diff.22um%>% 
 ggqqplot("rate_loss", title = "0.22um") # looks good
shapiro.test(eb_monolayer_diff.22um$rate_loss) # normal, yay!
hist(eb_monolayer_diff$rate_loss) # looks good

# visualize the comparison I am making
eb_monolayer_diff %>%
ggplot(aes(y= rate_loss, x = filter)) + 
    geom_boxplot() +
  geom_jitter() +
  ggtitle("Visualizing comparison for paired t-test on the rate_loss")
```

```{r}
# Step 3: run the paired t-test on the difference
t.test(eb_monolayer_diff_40um$rate_loss, eb_monolayer_diff.22um$rate_loss, paired = TRUE)
```


### Stats results:

When monolayer Bd biofilm is exposed to pond water without microbes has a significantly greater loss of Bd between day 1 to day 7 than pond water with microbes (t = -5.4, df = 8, p = 0.0006772). The t-value is negative, which shows that the first item entered (with microbes) has a smaller loss of Bd than the second item entered (no microbes).

## 4a Second stats: planned comparison

Q: qty \~ factor(day) + microbe_treatment, random = \~1\|factor(site)

Question: does the quantity of Bd differ across days and treatment while controlling for the paired site?

This will be a lme since it is a mixed effects model!

Data wrangling


```{r}
eb_monolayer <- eb_monolayer %>% 
  mutate(log_bd = log(bd_qty))

# Exploration: normality of transformed data
eb_monolayer %>% 
 ggqqplot("log_bd") # gorgeous
```


Assumptions testing


```{r}
par(mfrow = c(2,2))
# build model
mod6 <- lme(log_bd~day*factor(filter), random = ~1|site, data=eb_monolayer)
# model assumptions
plot(mod6) # passes homogeneity of variances
qqPlot(resid(mod6), main="QQ Plot of Residuals") # passes normality of resids
```


Interpret


```{r}
summary(mod6)
anova(mod6)

emmeans::emmeans(mod6, pairwise ~ day * filter) # pairwise comparisons
```


# 4b: NCOS

Add in NCOS now

## 4b Data Wrangling


```{r}
## Monolayer
# add column for microbes or no
monolayer <- fig_4b_raw %>% 
  rename(sample_ID = sample.ID) %>% 
  rename(adh_plus_sup = ahd_plus_sup) %>% 
  # rename sample_id to only include treatment, not day
  mutate(sample_ID = str_replace(sample_ID, "-D[0-9]+$", "")) %>% 

  # add columns for components y/n
  mutate(microbes = case_when(
    str_detect(sample_ID, "\\+microbes") ~ "y",
    TRUE ~ "n"
  )) %>% 
  # add column for TB or no
  mutate(TB = case_when(
    str_detect(sample_ID, "TB") ~ "y",
    TRUE ~ "n"
  )) %>% 
  # add column for PW or no
  mutate(PW = case_when(
    str_detect(sample_ID, "PW") ~ "y",
    TRUE ~ "n"
  )) %>%
    mutate(day = case_when(
    day == 1 ~ "Day_1",
    day == 3 ~ "Day_3",
    day == 5 ~ "Day_5",
    day == 7 ~ "Day_7",
    day == 0 ~ "Day_0"  # In case you want to include Day_0 as well
  )) %>% 
  mutate(day = factor(day)) %>% 
  # add numeric for plotting
  mutate(day_numeric = as.numeric(gsub("Day_", "", as.character(day))))

monolayer_summary <- monolayer %>% 
  group_by(day, sample_ID) %>% 
  reframe(mean_adh = mean(adh), # calculate the mean
            n = length(adh), # count the number of observations
            df = n - 1, # calculate the degrees of freedom
            sd = sd(adh), # calculate the standard deviation
            se = sd/sqrt(n), # calculate the standard error
          ) %>% 
  mutate(microbes = case_when(
    str_detect(sample_ID, "\\+microbes") ~ "y",TRUE ~ "n")) %>% 
  # add column for TB or no
  mutate(TB = case_when(str_detect(sample_ID, "TB") ~ "y", TRUE ~ "n")) %>% 
  # add column for PW or no
  mutate(PW = case_when(str_detect(sample_ID, "PW") ~ "y", TRUE ~ "n")) %>% 
  mutate(day_numeric = as.numeric(gsub("Day_", "", as.character(day))))

ml_noday0 <- monolayer %>%
  filter(day != "Day_0") %>%
  mutate(log_adh = log(adh)) %>% 
# quick check: we want day as a FACTOR
  mutate(day = as.factor(day))
str(ml_noday0$day)

# set PW-microbes as reference (no milliQ here)
ml_noday0$sample_ID <- factor(ml_noday0$sample_ID)
ml_noday0$sample_ID <- relevel(ml_noday0$sample_ID, ref = "PW-microbes")

# change the names in microbes and tb so there arent 2 levels with y and n
ml_noday0 <- ml_noday0 %>% 
  mutate(
    microbes = case_when(
      microbes == "y" ~ "MO present",
      microbes == "n" ~ "MO absent"),
    TB = case_when(
      TB == "y" ~ "TB present",
      TB == "n" ~ "TB absent"))
```



## 4b EDA

Note: only the ADHERENT Bd here!

### Renwei's figure

![](data/4b_monolayer.jpg){width="4in"}

### ggplot version: replicating Renwei's ML


```{r}
rc <- monolayer_summary %>% 
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID, 
                            levels = c("TB+PW+microbes","PW+microbes",
                                        "TB+PW-microbes", "PW-microbes"))) %>% 
  ggplot(aes(x = day_numeric, 
           y = mean_adh, 
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean_adh - se, # plot the standard error
                    ymax = mean_adh + se),
                width = 0.1) +
    geom_line(aes(linetype = microbes)) + 
  scale_y_log10(limits = c(1e4, 1e8), 
                breaks = c(1e4, 1e5, 1e6, 1e7, 1e8)) +
  # vibes
  labs(x = "Day",
       y = "Bd Quantity per sample (ZE/well)",
       title = "Monolayer",
       caption = "supernatant plus adherent visualized here") +
  scale_color_manual(values = c("TB+PW+microbes" = "palegreen4", 
                                "PW+microbes" = "magenta", 
                                "TB+PW-microbes" = "chocolate4", 
                                "PW-microbes" = "purple")) + # Assign specific colors to match RC's plot
  scale_linetype_manual(values = c("n" = "dashed", 
                                   "y" = "solid")) +
  theme_minimal() +
  theme(
    panel.grid.major.x = element_blank(), # Remove major vertical grid lines
    panel.grid.minor.x = element_blank()) + # Remove minor vertical grid lines
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7))
```


## Caitlin's version ML


```{r}
cnm <- monolayer_summary %>% 
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID, 
                            levels = c("TB+PW+microbes","PW+microbes",
                                        "TB+PW-microbes", "PW-microbes"))) %>% 
  ggplot(aes(x = day_numeric, 
           y = mean_adh, 
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean_adh - se, # plot the standard error
                    ymax = mean_adh + se),
                width = 0.1) +
    geom_line(aes(linetype = microbes)) + 
  scale_y_log10(limits = c(1e4, 1e8), 
                breaks = c(1e4, 1e5, 1e6, 1e7, 1e8)) +
  
  # vibes
  labs(x = "Day",
       y = "Bd in mono-Bd biofilm (ZE/well)",
       color = "Medium",       # Title for color legend
       linetype = "Microbes Present") +
  scale_color_manual(values = c("TB+PW+microbes" = "#4477AA", 
                                "PW+microbes" = "#EE6677", 
                                "TB+PW-microbes" = "#66CCEE", 
                                "PW-microbes" = "#AA3377"), 
                    
                     labels = c("TB+PW+microbes" = "TB + PW + MO",
                               "PW+microbes" = "PW + MO",
                               "TB+PW-microbes" = "TB + PW - MO",
                                "PW-microbes" = "PW - MO")) + # Custom labels
 myCustomTheme()+
 scale_linetype_manual(values = c("n" = "dashed", 
                                   "y" = "solid"),
                        labels = c("n" = "N", "y" = "Y")) +  # Change labels to uppercase N and Y
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7),
                   labels = c("Initial\nBd", "1", "3", "5", "7"))
```


visualize y var: bd load

Commented out to save space, log transformed is better


```{r}
# # untransformed
# ml_noday0 <- monolayer %>%
#   filter(day != 0) %>%
#   mutate(log_adh = log(adh)) # note: no zeroes so not log + 1
# ggqqplot(ml_noday0, "adh", title = "untransformed")
# shapiro.test(ml_noday0$adh) # nope
# hist(ml_noday0$adh) # note
# 
# # transformed
# ggqqplot(ml_noday0, "log_adh", title = "log transformed") # gorgeous
# hist(ml_noday0$log_adh) # better
```


## 4b Stats

y var: amount of Bd

x vars: day, treatment, microbes y/n, pw y/n, tb y/n

Best model: Bd \~ day\*microbes\*TB

Question: Does the amount of Bd in the sample differ across the treatments of presence of microbes, TB, and day?

Model: 3-way ANOVA

**results**

Results summary

-   day (p\<0.05)

    -   All differ from each other except 5 and 7 (Tukey)

        -   Day 1 \> Day 3 \> Day 5 = Day 7

-   microbes (p\<0.05)

    -   presence microbes has less Bd (Tukey)

-   TB (NOT SIG)

-   day:microbes (p\<0.05)

-   day:TB (NOT SIG)

-   microbes:TB (p\<0.05)

-   day:microbes:TB (NOT SIG)

## null


```{r}
null <- lm(log_adh ~ 1,
  data = ml_noday0)
AIC(null) #205.4965
```


## Bd \~ day\*microbes\*TB


```{r}
# build model
aov_4b <- aov(log_adh ~ day*microbes*TB,
  data = ml_noday0)

# diagnostic plot
par(mfrow = c(2,2))
plot(aov_4b) # looks good

# look at results
summary(aov_4b)
AIC(aov_4b) # 132.8989 better than null
```


Post hoc


```{r}
TukeyHSD(aov_4b)

# posthoc using emmeans
# use emmeans package to get the t value
# Perform pairwise comparisons for 'day'
f4b_em_day <- emmeans(aov_4b, ~ day)
f4b_tukey_day <- pairs(f4b_em_day, adjust = "tukey")
f4b_tukey_day

# Perform pairwise comparisons for 'microbes'
f4b_em_microbes <- emmeans(aov_4b, ~ microbes)
f4b_tukey_microbes <- pairs(f4b_em_microbes, adjust = "tukey")
f4b_tukey_microbes

# Perform pairwise comparisons for microbes:TB (interaction)
f4b_em_int_microbe_TB <- emmeans(aov_4b, ~ microbes * TB)
f4b_tukey_int_microbe_TB <- pairs(f4b_em_int_microbe_TB, adjust = "tukey")
f4b_tukey_int_microbe_TB 

# Perform pairwise comparisons for microbes:day (interaction)
f4b_em_int_microbe_day <- emmeans(aov_4b, ~ microbes * day)
f4b_tukey_int_microbe_day <- pairs(f4b_em_int_microbe_day, adjust = "tukey")
f4b_tukey_int_microbe_day 
```


### cld


```{r}
# Compute CLD letters for 'day'
cld_day <- emmeans(aov_4b, pairwise ~ day, adjust = "tukey") %>%
  cld(Letters = letters, reverse = TRUE)
cld_day_4b <- ggplot(cld_day, aes(x = day, y = emmean)) +
  geom_point(size = 3) +  # Plot the estimated means
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +  # Error bars
  geom_text(aes(label = .group), nudge_y = 1, size = 5, color = "black") +  # Add CLD letters
  xlab("Day") +
  ylab("Estimated Marginal Means") +
  ggtitle("Day") +
  scale_x_discrete(labels= c("Day_1" = "1", "Day_3" = "3", "Day_5" = "5", "Day_7" = "7")) +
  theme_minimal(base_size = 15) +  # Use minimal theme for clean look
  theme(axis.text.x = element_text(size = 12),  # Adjust text size for better readability
        axis.title.x = element_text(face = "bold"),
        axis.title.y = element_text(face = "bold"))
cld_day_4b

# Compute CLD letters for 'microbes'
cld_microbes <- emmeans(aov_4b, pairwise ~ microbes, adjust = "tukey") %>%
  cld(Letters = letters, reverse = TRUE)
cld_microbes_4b <- ggplot(cld_microbes, aes(x = microbes, y = emmean)) +
  geom_point(size = 3) +  # Plot the estimated means
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +  # Error bars
  geom_text(aes(label = .group), nudge_y = 0.5, size = 5, color = "black") +  # Add CLD letters
  xlab("Microbes present") +
  ylab("Estimated Marginal Means") +
  ggtitle("Microbes") +
  scale_x_discrete(labels= c("1%TB+AEbiofilm" = "1%TB", "PW+AEBiofilm" = "PW - MO", "MQ+AEbiofilm" = "MQ")) +
  theme_minimal(base_size = 15) +  # Use minimal theme for clean look
  theme(axis.text.x = element_text(size = 12),  # Adjust text size for better readability
        axis.title.x = element_text(face = "bold"),
        axis.title.y = element_text(face = "bold"))
cld_microbes_4b 

# Compute CLD letters for 'day * microbes'
cld_day_microbes <- emmeans(aov_4b, pairwise ~ day * microbes, adjust = "tukey") %>%
  cld(Letters = letters, reverse = TRUE)
# Create the plot with custom labels for 'TB'
cld_day_microbes_4b <- ggplot(cld_day_microbes, aes(x = day, y = emmean)) +
  geom_point(size = 3) +  # Plot the estimated means
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +  # Error bars
  geom_text(aes(label = .group), nudge_y = 1, size = 5, color = "black") +  # Add CLD letters
facet_wrap(~ factor(microbes)) +  # Custom facet labels and order
  xlab("Day") +
  ylab("Estimated Marginal Means") +
  ggtitle("Day * Microbes") +
 scale_x_discrete(labels= c("Day_1" = "1", "Day_3" = "3", "Day_5" = "5", "Day_7" = "7")) +
  theme_minimal(base_size = 15) +  # Use minimal theme for clean look
  theme(axis.text.x = element_text(size = 12),  # Rotate x-axis labels 45 degrees
        axis.title.x = element_text(face = "bold"),
        axis.title.y = element_text(face = "bold"))
cld_day_microbes_4b

# Compute CLD letters for 'microbes * TB'
cld_TB_microbes <- emmeans(aov_4b, pairwise ~ TB * microbes, adjust = "tukey") %>%
  cld(Letters = letters, reverse = TRUE)
# Create the plot with custom labels for 'TB'
cld_TB_microbes_4b <- ggplot(cld_TB_microbes, aes(x = TB, y = emmean)) +
  geom_point(size = 3) +  # Plot the estimated means
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +  # Error bars
  geom_text(aes(label = .group), nudge_y = 1, size = 5, color = "black") +  # Add CLD letters
facet_wrap(~ factor(microbes)) +  # Custom facet labels and order
  xlab("Day") +
  ylab("Estimated Marginal Means") +
  ggtitle("Microbes * TB") +
 scale_x_discrete(labels= c("Day_1" = "1", "Day_3" = "3", "Day_5" = "5", "Day_7" = "7")) +
  theme_minimal(base_size = 15) +  # Use minimal theme for clean look
  theme(axis.text.x = element_text(size = 12),  # Rotate x-axis labels 45 degrees
        axis.title.x = element_text(face = "bold"),
        axis.title.y = element_text(face = "bold"))
cld_TB_microbes_4b

# cld_day_4b + cld_microbes_4b + cld_day_microbes_4b + cld_TB_microbes_4b
```


# *Figures


```{r}
myCustomTheme <- function() {
  theme_light() +
    theme(axis.text = element_text(size = 7, family = "Helvetica", color = "black"),
          axis.title.x = element_text(margin = margin(t = 10), size = 7, face = "bold", family = "Helvetica", color = "black"), # Add space between x-axis label and axis
          axis.title.y = element_text(margin = margin(r = 10), size = 7, face = "bold", family = "Helvetica", color = "black"), # Add space between y-axis label and axis
          title = element_text(size = 7, face = "bold", family = "Helvetica"),
          plot.caption = element_text(size = 7, face = "italic", family = "Helvetica"),
          legend.text = element_text(size = 7, family = "Helvetica"), # Increase legend text size
          panel.grid = element_blank(),  # Remove all grid lines (both major and minor)
          # axis.line.x = element_line(color = "grey"),  # Keep the x-axis line
          # axis.line.y = element_line(color = "grey"),  # Keep the y-axis line
          axis.ticks = element_line(color = "grey", size = 0.5),   # Keep tick markers
          strip.text = element_text(size = 7, face = "bold", family = "Helvetica", color = "black"), # Set strip text style
          strip.background = element_rect(fill = "white", color = "grey", size = 0.5)  # Set strip background to white, outline grey
    )
}
```



 Fig 4


```{r}
fig_4a <- eb_monolayer %>% 
  # plot it
  ggplot(aes(y= bd_qty, x = filter, fill = filter)) + 
    geom_boxplot() +
  geom_jitter(width = 0.2, alpha = 0.3) +
    scale_y_log10() +
    facet_wrap(~day, labeller = labeller(day = c("Day_1" = "Day 1",
                                                    "Day_7" = "Day 7")))+
  scale_fill_manual(values = c("40um_filter" = with_microbes_40_color, 
                                "0.22um_filter" = no_microbes_.22_color)) +
 myCustomTheme()+
   theme(legend.position = "none",
    strip.background = element_rect(fill = "white", color = "grey", size = 0.5)) + # Adjust the facet line thickness
  scale_x_discrete (labels= c("40um_filter" = "With Microbes", "0.22um_filter" = "No Microbes")) +
    xlab("Presence of Microbes in PW with Monolayer") +
    ylab("Bd Quantity (ZE)") +

 # add controls ad x's
geom_point(data = eb_ml_controls, aes(x = filter, y = bd_qty), shape = 4, size = 2)

fig_4a
```

```{r}
# Convert factor day to numeric while preserving original values
#ml_noday0$day <- as.numeric(as.character(ml_noday0$day))

fig_4b <- monolayer_summary %>% 
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID, 
                            levels = c("TB+PW+microbes","PW+microbes",
                                        "TB+PW-microbes", "PW-microbes"))) %>% 
  ggplot(aes(x = day_numeric, 
           y = mean_adh, 
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean_adh - se, # plot the standard error
                    ymax = mean_adh + se),
                width = 0.1) +
    geom_line(aes(linetype = microbes), show.legend = FALSE) + 
  
  # raw data
   geom_point(data = ml_noday0, 
             aes(x = day_numeric, 
                 y = adh_plus_sup, 
                 color = sample_ID),  # Raw data points
             position = position_jitter(width = 0.1, seed = 1),
             alpha = 0.3) +
  scale_y_log10(limits = c(1e4, 1e8), 
                breaks = c(1e4, 1e5, 1e6, 1e7, 1e8)) +
  
  # vibes
  labs(x = "Day",
       y = "Bd Quantity (ZE)",
       color = "Medium",       # Title for color legend
       linetype = "Microbes\nPresent") +
  scale_color_manual(values = c("TB+PW+microbes" = "#4477AA", 
                                "PW+microbes" = "#EE6677", 
                                "TB+PW-microbes" = "#66CCEE", 
                                "PW-microbes" = "#AA3377"), 
                    
                     labels = c("TB+PW+microbes" = "TB + PW + MO",
                               "PW+microbes" = "PW + MO",
                               "TB+PW-microbes" = "TB + PW - MO",
                                "PW-microbes" = "PW - MO")) + # Custom labels
 myCustomTheme()+
    theme(legend.position = "bottom",
        panel.border = element_blank(),
        legend.text = element_text(size = 5),  # Set legend text font size to 5pt
        legend.key.size = unit(0.4, "cm"),  # Reduce size of legend keys
        legend.spacing.y = unit(0.1, "cm"),  # Reduce vertical spacing between legend items
        legend.margin = margin(t = 0, r = 0, b = 0, l = 0),
        axis.line.x = element_line(color = "grey", size = 0.5),  # Keep the x-axis line
        axis.line.y = element_line(color = "grey", size = 0.5)) +  # Keep the y-axis line) +  # Remove margins around legend
guides(color = guide_legend(title = NULL)) +

 scale_linetype_manual(values = c("n" = "dashed", 
                                   "y" = "solid"),
                        labels = c("n" = "N", "y" = "Y")) +  # Change labels to uppercase N and Y
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7),
                   labels = c("Initial\nBd", "1", "3", "5", "7"))

fig_4b
```


Fig 4 combined


```{r}
# Combine fig_2a and fig_2b side by side
fig4 <- fig_4a + fig_4b + 
  plot_layout(widths = c(1, 1)) +   # Ensure equal widths for both plots
  plot_annotation(tag_levels = 'A')  # Adds "A" and "B" to the upper corners

fig4

#ggsave("4a_4b.png", plot = fig4, width = 14, height = 5, dpi = 1000)
```


# *SI

## anova table


```{r}
# anova table
anova_output4b <- tidy(aov_4b)

aov_4b_tbl <- anova_output4b %>%
  dplyr::select(term, df, sumsq, meansq, statistic, p.value) %>%
  gt() %>%
  tab_header(
    title = "4b ANOVA Table"
  ) %>%
  fmt_number(
    columns = c(sumsq, meansq, statistic),
    decimals = 2
  ) %>%
  cols_label(
    term = "Term",
    df = "Df",
    sumsq = "Sum Sq",
    meansq = "Mean Sq",
    statistic = "F value",
    p.value = "P-value"
  ) %>%  # scientific number format for values <0.001 in p values
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  # 3 decimals for p values >=0.001
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  )
aov_4b_tbl

# prettier, simplified
anova_output4b <- tidy(aov_4b)

# Modify term to include degrees of freedom in *italics*
anova_output4b <- anova_output4b %>%
  mutate(term = gsub(":", " x ", term)) %>% 
  mutate (term = paste0(term, " (*df = ", df, ", ", anova_output4b[df == max(df), "df"], "*)")) %>%
  filter(term != "Residuals (*df = 32, 32*)")

# Create the gt table with selected columns
aov_4b_tbl_b <- anova_output4b %>%
  dplyr::select(term, statistic, p.value) %>%
  gt() %>%
  tab_header(
    title = "4b ANOVA Table"
  ) %>%
  fmt_markdown(
    columns = c(term)
  ) %>%
  fmt_number(
    columns = c(statistic),
    decimals = 2
  ) %>%
  cols_label(
    term = "",
    statistic = "F value",
    p.value = "P-value"
  ) %>%
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  )

aov_4b_tbl_b
```


## post hoc


```{r}
# post hoc table
# Convert Tukey emmeans results to data frames
f4b_tukey_day_df <- as.data.frame(f4b_tukey_day)
f4b_tukey_microbes_df <- as.data.frame(f4b_tukey_microbes)
f4b_tukey_int_microbe_day_df <- as.data.frame(f4b_tukey_int_microbe_day)
f4b_tukey_int_microbe_TB_df <- as.data.frame(f4b_tukey_int_microbe_TB)

# Add labels to indicate which factor the comparison refers to
f4b_tukey_day_df  <- f4b_tukey_day_df  %>% mutate(factor = "Day")
f4b_tukey_microbes_df <- f4b_tukey_microbes_df %>% mutate(factor = "Medium")
f4b_tukey_int_microbe_day_df <- f4b_tukey_int_microbe_day_df %>% mutate(factor = "Day x microbes")
f4b_tukey_int_microbe_TB_df <- f4b_tukey_int_microbe_TB_df %>% mutate(factor = "Microbes x TB")

f4b_all_tukey_df <- bind_rows(f4b_tukey_day_df, f4b_tukey_microbes_df, f4b_tukey_int_microbe_TB_df, f4b_tukey_int_microbe_day_df)

f4b_all_tukey_df <- f4b_all_tukey_df %>% 
  mutate(contrast = gsub("MO present TB absent", "microbes only", contrast),
         contrast = gsub("MO present TB present", "both microbes and TB", contrast),
         contrast = gsub("MO absent TB absent", "neither microbes nor TB", contrast),
         contrast = gsub("MO absent TB present", "TB only", contrast))


ph4b_table <- f4b_all_tukey_df %>%
  dplyr::select(factor, contrast, estimate, SE, df, t.ratio, p.value) %>%
  gt() %>%
  # change column names
  cols_label(
    factor = "Comparison",
    contrast = "Group Comparison",
    estimate = "Estimate",
    SE = "Standard Error",
    df = "Degrees of Freedom",
    t.ratio = "t-Ratio",
    p.value = "p-value"
  ) %>%
  # update header for table
  tab_header(
    title = "4b Emmeans Post-hoc Test Results"
  ) %>%
  # 3 decimal places
  fmt_number(
    columns = c(estimate, SE, t.ratio),
    decimals = 3
  ) %>%
  # scientific number format for values <0.001 in p values
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  # 3 decimals for p values >=0.001
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  ) %>%
  #make the headers bold
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_column_labels(everything()))

ph4b_table
```


## cld


```{r}
# cld_day_4b + cld_microbes_4b + cld_day_microbes_4b + cld_TB_microbes_4b

pairwise_cld_4b <- cld_day_4b + cld_microbes_4b + cld_day_microbes_4b + cld_TB_microbes_4b +
  plot_annotation(tag_levels = 'A')

# Display the combined plot
pairwise_cld_4b 

#ggsave("4b_pairwise_cld.png", plot = pairwise_cld_4b , width = 14, height = 8, dpi = 1000)
```

