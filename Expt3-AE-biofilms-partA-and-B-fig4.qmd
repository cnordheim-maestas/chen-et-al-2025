---
title: "3A & B: AE Biofilm"
author: "Caitlin Nordheim-Maestas"
format: docx
# format:
#   html:
#     embed-resources: true
#     toc: true
#     code-fold: true
#     toc-location: left
---

# Experiment 3: Assessment of AE biofilms’ inhibitory impact on Bd 


# Load in data and libraries

```{r}
#| warning: false

## read in and clean data
library(tidyverse) # for cleaning and viewing data
library(gt) # pretty stats tables
library(broom) # cleaning for gt
library(here) # for importing data
library(car) # stats tests like Levene's
library(multcompView) # view cld
library(multcomp) # stats
library(nlme) # mixed effects models
library(emmeans) # for pairwise comparisons, especially on mixed effects models and glms
library(ggpubr) # for making ggqq plot
library(patchwork) # for combining figures

# import data for SFEB
ns_biofilm_bd <- read.csv(here("data", "nine-sites-biofilm-on-Bd - Sheet1.csv"))
# import data for SBNCOS
fig_3b_raw <- read.csv(here("data", "final_NCOS_2024_reformatted_for_R.xlsx - Fig3B.csv"))

# Colors: these are from Paul Tol's colorblind friendly palette
with_microbes_40_color <- "#999933"
no_microbes_.22_color <- "#88ccee"

# set up custom theme
myCustomTheme <- function() {
  theme_light() +
    theme(axis.text = element_text(size = 7, family = "Helvetica", color = "black"),
          axis.title.x = element_text(margin = margin(t = 10), size = 7, face = "bold", family = "Helvetica", color = "black"), # Add space between x-axis label and axis
          axis.title.y = element_text(margin = margin(r = 10), size = 7, face = "bold", family = "Helvetica", color = "black"), # Add space between y-axis label and axis
          title = element_text(size = 7, face = "bold", family = "Helvetica"),
          plot.caption = element_text(size = 7, face = "italic", family = "Helvetica"),
          legend.text = element_text(size = 7, family = "Helvetica"), # Increase legend text size
          panel.grid = element_blank(),  # Remove all grid lines (both major and minor)
          # axis.line.x = element_line(color = "grey"),  # Keep the x-axis line
          # axis.line.y = element_line(color = "grey"),  # Keep the y-axis line
          axis.ticks = element_line(color = "grey", size = 0.5),   # Keep tick markers
          strip.text = element_text(size = 7, face = "bold", family = "Helvetica", color = "black"), # Set strip text style
          strip.background = element_rect(fill = "white", color = "grey", size = 0.5)  # Set strip background to white, outline grey
    )
}
```

# 3A

Effect of the East Bay aquatic environmental biofilm on Bd growth - "9 sites"

Does the difference in rate loss of Bd in the **adherent** AE biofilm from day 1 to day 7 differ between the two filter types?

## 3A Data Wrangling

```{r}
eb_ae <- ns_biofilm_bd

# set as factors with levels so they appear in order in plots later
eb_ae$site <- factor(eb_ae$site,
                                levels = c("CABIN", "GRAMPS", "WEST", "GDPND005", "GDPND006", "GDPND009", "PRPND004", "PRPND009", "PRPND010"))
eb_ae$bd_location <- factor(eb_ae$bd_location, levels = c("supernatant", "biofilm"))
eb_ae$day <- factor(eb_ae$day, levels = c("Day_0", "Day_1", "Day_7"))

# Biofilm only, no supernatant, and days 1 and 7 only, no day 0
eb_ae_bf_only <- eb_ae %>% 
  filter(bd_location == "biofilm") %>% 
  filter(day != "Day_0") %>% 
  #log bd qty
  mutate(log_qty = log(bd_qty))

# export clean data
write.csv(eb_ae_bf_only, "data/eb_ae_bf_only.csv", row.names = FALSE)
```

## EDA

## Stats and assumption testing

Question:

Does the amount of Bd in the biofilm differ between day 1 and day 7?

The samples are essentially paired by site, so a paired t-test is most appropriate

$H0:μ_{difference in Bd}=0$

Assumptions:

Assumes that the observations from each group represent a random sample from the population. Assumes that the difference of the two observations follow a normal distribution.

Check assumptions

```{r}
# check normality of the differences across groups let's try untransformed
eb_ae_bf_only %>% 
 ggqqplot("bd_qty", title = "Untransformed Bd loads") +
  facet_wrap(~day) # gotta transform the data, day 1 is not normal

eb_ae_bf_only %>% 
  ggqqplot("log_qty", title = "Transformed Bd loads") +
  facet_wrap(~day) # not perfect but close, let's try shapiro tests

# Shapiro tests
day_one <- eb_ae_bf_only %>% 
  filter(day == "Day_1") %>% # filter to only include day 1
  pull(log_qty)

shapiro.test(day_one) # p >> 0.05, it's normal!

day_seven <- eb_ae_bf_only %>% 
  filter(day == "Day_7") %>% # filter to only include day 1
  pull(log_qty)

shapiro.test(day_seven) # p >> 0.05, it's normal!

# Histograms for funsies
eb_ae_bf_only %>% 
ggplot(aes(x = log_qty)) + # x-axis
  geom_histogram(bins = 4) + # make a histogram
  facet_wrap(~ day, # make multiple panels by day
             scales = "free") # let the axes vary between panels
```

Stats

```{r}
# Step 3: run the paired t-test
t.test(day_one, day_seven, paired = TRUE)
```

**There is significantly more Bd in the biofilm on Day 1 than on Day 7 (t = 10.094, df = 8, p-value \< 0.0001)**

# 3b NCOS AE biofilm 

All microbe-depleted, NO pw microbe+ treatment

## 3b Data wrangling

```{r}
## aquatic environmental biofilm 
# add column for microbes or no
ae <- fig_3b_raw %>% 
  rename(sample_ID = Adherent.sample.ID) %>% 
  
  # add columns for components y/n
  # add column for TB or no
  mutate(TB = case_when(
    str_detect(sample_ID, "TB") ~ "y",
    TRUE ~ "n"
  )) %>% 
  # add column for PW or no
  mutate(PW = case_when(
    str_detect(sample_ID, "PW") ~ "y",
    TRUE ~ "n"
  )) %>% 
  # update day to have day in it
    mutate(day = case_when(
    day == 1 ~ "Day_1",
    day == 3 ~ "Day_3",
    day == 5 ~ "Day_5",
    day == 7 ~ "Day_7",
    day == 0 ~ "Day_0"  # In case you want to include Day_0 as well
  )) %>% 
  mutate(day = factor(day)) %>% 
  # add numeric for plotting
  mutate(day_numeric = as.numeric(gsub("Day_", "", as.character(day))))

# control data for ae
ae_control_data <- ae %>% 
  filter(day == "Day_0") %>% 
  mutate(day_numeric = as.numeric(gsub("Day_", "", as.character(day)))) %>% 
  dplyr::select(day, adh, day_numeric)

ae_summary <- ae %>%
  group_by(day, sample_ID) %>%
  reframe(mean = mean(adh), # calculate the mean
            n = length(adh), # count the number of observations
            df = n - 1, # calculate the degrees of freedom
            sd = sd(adh), # calculate the standard deviation
            se = sd/sqrt(n), # calculate the standard error
          ) %>%
  # add column for TB or no
  mutate(TB = case_when(str_detect(sample_ID, "TB") ~ "y", TRUE ~ "n")) %>%
  # add column for PW or no
  mutate(PW = case_when(str_detect(sample_ID, "PW") ~ "y", TRUE ~ "n")) %>% 
  mutate(day_numeric = as.numeric(gsub("Day_", "", as.character(day))))

ae_noday0 <- ae %>% 
  filter(day != "Day_0") %>% 
  mutate(log_adh = log(adh)) # note: no zeroes so not log + 1

write.csv(ae_noday0, "data/ae_noday0.csv", row.names = FALSE)
```

## 3b EDA

Renwei's figure

![](data/3bRenwei.jpg){width="4in"}

ggplot version: replicating Renwei's AE

```{r}
ae_summary %>%
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID,
                            levels = c("1%TB+AEbiofilm", "MQ+AEbiofilm",
                                       "PW+AEBiofilm",   "Added Bd"  ))) %>%

  ggplot(aes(x = day_numeric,
           y = mean,
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean - se, # plot the standard error
                    ymax = mean + se),
                width = 0.1) +
  geom_line() +
  scale_y_log10(limits = c(1e3, 1e7),
                breaks = c(1e3, 1e4, 1e5, 1e6, 1e7)) +
  # vibes
  labs(x = "Day",
       y = "Bd Quantity per sample (ZE/well)",
       title = "Environmental Biofilm",
       caption = "only adherent Bd visualized here (the only data we have)") +
  scale_color_manual(values = c("1%TB+AEbiofilm"= "orange",
                                "MQ+AEbiofilm" = "blue",
                                "PW+AEBiofilm" = "magenta",
                                "Added Bd" = "darkgrey")) + # Assign specific colors to match RC's plot
  theme_minimal() +
  theme(
    panel.grid.major.x = element_blank(), # Remove major vertical grid lines
    panel.grid.minor.x = element_blank()) + # Remove minor vertical grid lines
  scale_x_discrete(labels = c("Day_0" = "initial Bd", "Day_1" = "1", "Day_3" = "3", "Day_5" = "5", "Day_7" = "7"))  # Use discrete scale for day
```

Caitlin's version AE

```{r}
ae_summary %>%
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID,
                            levels = c("1%TB+AEbiofilm", "MQ+AEbiofilm",
                                       "PW+AEBiofilm",   "Added Bd"  ))) %>%

  ggplot(aes(x = day_numeric,
           y = mean,
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean - se, # plot the standard error
                    ymax = mean + se),
                width = 0.1) +
  geom_line() +
  scale_y_log10(limits = c(1e3, 1e7),
                breaks = c(1e3, 1e4, 1e5, 1e6, 1e7)) +
  # vibes
  labs(x = "Day",
       y = "Bd Quantity in AE Biofilm (ZE/well)",
        color = "Medium with\nAE Biofilm")+ # Title for color legend

  scale_color_manual(values = c("1%TB+AEbiofilm"= "#4477AA",
                                "MQ+AEbiofilm" = "#228833",
                                #"Added Bd" = "darkgrey",
                                "PW+AEBiofilm" = "#AA3377"),
                    labels = c("1%TB+AEbiofilm" = "TB Broth",
                               "MQ+AEbiofilm" = "MQ Water",
                               "PW+AEBiofilm" = "Filtered\nPond Water",
                                "Added Bd" = "Initial Bd")) + # Custom labels

 myCustomTheme()+
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7),
                   labels = c("Initial\nBd", "1", "3", "5", "7"))
```

visualize y var: bd load

```{r}
# untransformed
ggqqplot(ae_noday0, "adh", title = "untransformed")
shapiro.test(ae_noday0$adh) # nope
hist(ae_noday0$adh) # note

# transformed
ggqqplot(ae_noday0, "log_adh", title = "log transformed") # gorgeous
hist(ae_noday0$log_adh) # better
shapiro.test(ae_noday0$log_adh) # p-value = 0.1699 def normal
```

## 3b Stats

Keep interaction, skedasticity isn't "too bad", and will show underlying data in plot to be super transparent

y var: amount of Bd in adherent

x vars: day & medium with the AE biofilm and Bd (MQ, TB, PW)

Bd \~ day\*medium

Question: Does the amount of Bd in the aquatic environmental biofilm differ across the media tested and across the days, and do they interact with each other?

Model: 2-way ANOVA

**Summary of results**

Bd qty Day 1 \> Day 3 \> Day 5 \> Day 7 (all p \<0.005) in other words, Bd significantly reduced each day

MQ+AEbiofilm \> PW+AEBiofilm \> 1%TB+AEbiofilm (all p \<0.005) In other words, TB plus biofilm has most Bd inhibition power, followed by pond water, then by milliQ with the least inhibition power


null

```{r}
null <- lm(log_adh ~ 1,
  data = ae_noday0)
AIC(null) #146.5865
```

## Bd \~ day\*medium

Note: Not perfectly homoskedstic but "good enough"

```{r}
# quick check: we want day as a FACTOR
ae_noday0 <- ae_noday0 %>% 
# column for medium
  mutate(medium = sample_ID)

# set day 1 as reference
ae_noday0$day <- factor(ae_noday0$day, levels = c("Day_1", "Day_3", "Day_5", "Day_7"))
ae_noday0$day <- relevel(ae_noday0$day, ref = "Day_1")

str(ae_noday0$day)

# set MQ as reference
ae_noday0$sample_ID <- factor(ae_noday0$sample_ID)
ae_noday0$sample_ID <- relevel(ae_noday0$sample_ID, ref = "MQ+AEbiofilm")

# build model
aov_3b <- aov(log_adh ~ day*medium,
  data = ae_noday0)

# diagnostic plot
par(mfrow = c(2,2))
plot(aov_3b) # kinda not homoskedastic

# look at results
summary(aov_3b)
anova(aov_3b) # all significant and interaction sig
AIC(aov_3b) # 37.78083 better than null
```

### Posthoc

```{r}
# posthoc
#TukeyHSD(aov_3b)

# posthoc using emmeans
# use emmeans package to get the t value
# Perform pairwise comparisons for 'day'
em_day <- emmeans(aov_3b, ~ day)
tukey_day <- pairs(em_day, adjust = "tukey")

# Perform pairwise comparisons for 'medium'
em_medium <- emmeans(aov_3b, ~ medium)
tukey_medium <- pairs(em_medium, adjust = "tukey")

# Perform pairwise comparisons for 'day * medium' (interaction)
em_interaction <- emmeans(aov_3b, ~ day * medium)
tukey_interaction <- pairs(em_interaction, adjust = "tukey")
```

#### cld

```{r}
# Compute CLD letters for 'day'
cld_day <- emmeans(aov_3b, pairwise ~ day, adjust = "tukey") %>%
  cld(Letters = letters, reverse = TRUE)
cld_day_3b <- ggplot(cld_day, aes(x = day, y = emmean)) +
  geom_point(size = 1) +  # Plot the estimated means
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +  # Error bars
  geom_text(aes(label = .group), nudge_y = 0.5, size = 1.75, color = "black") +  # Add CLD letters
  xlab("Day") +
  ylab("Estimated Marginal Means") +
  scale_y_continuous(labels = scales::label_number(accuracy = 1)) +
  ggtitle("Day") +
  myCustomTheme() +
  scale_x_discrete(labels= c("Day_1" = "1", "Day_3" = "3", "Day_5" = "5", "Day_7" = "7")) +
    theme(axis.title.y = element_text(margin = margin(r = 1)))
cld_day_3b

# Compute CLD letters for 'medium'
cld_medium <- emmeans(aov_3b, pairwise ~ medium, adjust = "tukey") %>%
  cld(Letters = letters, reverse = TRUE)
cld_medium_3b <- ggplot(cld_medium, aes(x = factor(medium, levels = c("MQ+AEbiofilm", "PW+AEBiofilm", "1%TB+AEbiofilm")), y = emmean)) +
  geom_point(size = 1) +  # Plot the estimated means
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +  # Error bars
  geom_text(aes(label = .group), nudge_y = 0.5, size = 1.75, color = "black") +  # Add CLD letters
  xlab("Medium with AE biofilm") +
  ylab("Estimated Marginal Means") +
  scale_y_continuous(labels = scales::label_number(accuracy = 1)) +
  ggtitle("Medium") +
  myCustomTheme() +
  scale_x_discrete(labels= c("1%TB+AEbiofilm" = "1%TB", "PW+AEBiofilm" = "PW-MO", "MQ+AEbiofilm" = "MQ")) +
   theme(axis.title.y = element_text(margin = margin(r = 1)))
cld_medium_3b

# Compute CLD letters for 'day * medium'
cld_day_medium <- emmeans(aov_3b, pairwise ~ day * medium, adjust = "tukey") %>%
  cld(Letters = letters, reverse = TRUE)
# Create the plot with custom labels for 'TB'
cld_day_medium_3b <- ggplot(cld_day_medium, aes(x = factor(day), y = emmean)) +
  geom_point(size = 1) +  # Plot the estimated means
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +  # Error bars
  geom_text(aes(label = .group), nudge_y = 1, size = 1.75, color = "black") +  # Add CLD letters
facet_wrap(~ factor(medium, levels = c("MQ+AEbiofilm", "PW+AEBiofilm", "1%TB+AEbiofilm")), 
             labeller = as_labeller(c("1%TB+AEbiofilm" = "1%TB", 
                                      "PW+AEBiofilm" = "PW - MO", 
                                      "MQ+AEbiofilm" = "MQ"))) +  
  xlab("Day") +
  ylab("Estimated Marginal Means") +
  scale_y_continuous(labels = scales::label_number(accuracy = 1)) +
 ggtitle("Day * Medium") +
  myCustomTheme() +
 scale_x_discrete(labels= c("Day_1" = "1", "Day_3" = "3", "Day_5" = "5", "Day_7" = "7")) +
  theme(axis.title.y = element_text(margin = margin(r = 1)))
cld_day_medium_3b
```

Results write up

A two-way ANOVA revealed that there was a statistically significant difference in Bd load across days (F(3, 24) = 110.100, p = p <0.0001), across the media (F(2, 24) = 246.55, p <0.0001), and the interaction between the effects of day and medium were also significant (F(6, 24) = 10.145, p = p <0.0001). Bd was significantly lower with each day (Tukey test, p <0.005 for all) and TB plus biofilm has most Bd inhibition power, followed by pond water with no microbes, then by milliQ with the least inhibition power (Tukey test, p <0.05 for all).


# \*PUBLICATION FIGURES

```{r}
# set up custom theme
myCustomTheme <- function() {
  theme_light() +
    theme(axis.text = element_text(size = 7, family = "Helvetica", color = "black"),
          axis.title.x = element_text(margin = margin(t = 10), size = 7, face = "plain", family = "Helvetica", color = "black"), # Add space between x-axis label and axis
          axis.title.y = element_text(margin = margin(r = 10), size = 7,  face = "plain", family = "Helvetica", color = "black"), # Add space between y-axis label and axis
          title = element_text(size = 7, face = "bold", family = "Helvetica"),
          plot.caption = element_text(size = 7, face = "italic", family = "Helvetica"),
          legend.text = element_text(size = 7, family = "Helvetica"), # Increase legend text size
          panel.grid = element_blank(),  # Remove all grid lines (both major and minor)
          # axis.line.x = element_line(color = "grey"),  # Keep the x-axis line
          # axis.line.y = element_line(color = "grey"),  # Keep the y-axis line
          axis.ticks = element_line(color = "grey", size = 0.5),   # Keep tick markers
          axis.ticks.x = element_line(color = "grey", size = 0.5),  # ensure bottom axis ticks
          axis.ticks.y = element_line(color = "grey", size = 0.5),  # <- ensure side axis ticks
          strip.text = element_text(size = 7, face = "bold", family = "Helvetica", color = "black"), # Set strip text style
          strip.background = element_rect(fill = "white", color = "grey", size = 0.5)  # Set strip background to white, outline grey
    )
}
```



3A: AE Biofilm 

```{r}
fig_SFEB_biofilm_boxplot <- eb_ae_bf_only  %>%
ggplot(aes(y= bd_qty, x = day)) + 
    geom_boxplot(fill = no_microbes_.22_color) +
    geom_jitter(alpha = 0.3, width = 0.05) +
    myCustomTheme() +
   # scale_y_log10(labels = function(x) {gsub("e", "E", scales::scientific_format()(x))}) + # Custom scientific notation
  scale_y_log10(labels = function(x) {gsub("e", "E", scales::scientific_format()(x))}, 
                # update to consistent scale per reviewer request
                  limits = c(1e+02, 1e+08),
                breaks = c(1e2, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8)) + 
    xlab("Incubation of Bd with SFEB biofilms (day)") +
    ylab("Bd quantity in adherent fraction (ZE/well)") +
  scale_x_discrete (labels= c("Day_1" = "1", "Day_7" = "7")) +
  
   theme(legend.position = "none",
        panel.border = element_blank(),
        axis.line.x = element_line(color = "grey", size = 0.5),  # Keep the x-axis line
        axis.line.y = element_line(color = "grey", size = 0.5))

# Let's add significance letters
significance_data <- tibble(
 day = factor(c("Day_1", "Day_7"), levels = c("Day_1", "Day_7")),
  y_position = c(1.6e+05, 1.4e+04),  # Adjust this depending on your plot's scale
  label = c("a", "b"))

fig_SFEB_biofilm <- fig_SFEB_biofilm_boxplot + 
geom_text(data = significance_data, aes(x = day, y = y_position, label = label),
            position = position_dodge(width = 0.75), vjust = 0, size = 7 / 2.85) # /2.85 to convert to the same "pt" text sizing the axes use

#fig_SFEB_biofilm

fig_SFEB_biofilm <- fig_SFEB_biofilm +
  labs(tag = "A") +
  theme(
    plot.tag = element_text(family = "Helvetica", size = 20, face = "plain", hjust = -0.1, vjust = 1),
    plot.tag.position = c(0, 1)
  )

fig_SFEB_biofilm

# 3a alone
ggsave("paper-figures/expt3-SFEB-biofilms_fig4a_updated.pdf", plot = fig_SFEB_biofilm, width = 3.46, height = 3.46)
```


3B: AE Biofilm 

```{r}
# add column for microbes or no
fig_SBNCOS_biofilm <- ae_summary %>%
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID,
                            levels = c("1%TB+AEbiofilm", "MQ+AEbiofilm",
                                       "PW+AEBiofilm",   "Added Bd"  ))) %>%

  ggplot(aes(x = day_numeric,
           y = mean,
           color = sample_ID)) +
  geom_point(size = 1) +
  geom_errorbar(aes(ymin = mean - se, # standard error
                    ymax = mean + se), # standard error
                width = 0.1) +
  geom_line() + 
  
  # Adding the raw data as a layer with jitter, commented out bc Renwei didn't like it
  # geom_point(data = ae_noday0, 
  #            aes(x = day_numeric, 
  #                y = adh, 
  #                color = sample_ID),  # Raw data points
  #            position = position_jitter(width = 0.1, seed = 1),
  #            alpha = 0.3) +
  # controls raw data
    # geom_point(data = ae_control_data, 
    #          aes(x = day_numeric, 
    #              y = adh, 
    #              color = "#BBBBBB"),  # Raw data points
    #          position = position_jitter(width = 0.1, seed = 1),
    #          alpha = 0.3) +
  
  # # Adding the raw data as a layer with jitter
  # geom_point(data = ae_noday0,
  #            aes(x = day_numeric,
  #                y = adh,
  #                color = sample_ID),  # Raw data points
  #            position = position_jitter(width = 0.1, seed = 1),
  #            alpha = 0.3) +
  
  ## update scale for reviewer
  scale_y_log10(labels = function(x) {gsub("e", "E", scales::scientific_format()(x))}, 
                # update to consistent scale per reviewer request
                  limits = c(1e+02, 1e+08),
                breaks = c(1e2, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8)) + 
  # vibes
  labs(x = "Incubation of Bd with SBNCOS biofilms (day)",
       y = "Bd quantity in adherent fraction (ZE/well)",
        color = "Medium with\nAE Biofilm")+ # Title for color legend
  
  scale_color_manual(values = c("1%TB+AEbiofilm"= "#4477AA",
                                "MQ+AEbiofilm" = "#228833",
                                #"Added Bd" = "darkgrey",
                                "PW+AEBiofilm" = "#AA3377"),
                    labels = c("1%TB+AEbiofilm" = "pond water + 1% TB",
                               "MQ+AEbiofilm" = "MQ",
                               "PW+AEBiofilm" = "pond water",
                                "Added Bd" = "Initial Bd")) + # Custom labels

 myCustomTheme()+
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7),
                   labels = c("Initial\nBd", "1", "3", "5", "7")) +
  theme(legend.position = "bottom",
        panel.border = element_blank(),
        legend.text = element_text(size = 5),  # Set legend text font size to 5pt
        legend.key.size = unit(0.4, "cm"),  # Reduce size of legend keys
        legend.spacing.y = unit(0.1, "cm"),  # Reduce vertical spacing between legend items
        legend.margin = margin(t = 0, r = 0, b = 0, l = 0),
        axis.line.x = element_line(color = "grey", size = 0.5),  # Keep the x-axis line
        axis.line.y = element_line(color = "grey", size = 0.5)) +  # Keep the y-axis line) +  # Remove margins around legend
guides(color = guide_legend(title = NULL))

#fig_SBNCOS_biofilm

fig_SBNCOS_biofilm <- fig_SBNCOS_biofilm +
  labs(tag = "B") +
  theme(
    plot.tag = element_text(family = "Helvetica", size = 20, face = "plain", hjust = -0.1, vjust = 1),
    plot.tag.position = c(0, 1)
  )

fig_SBNCOS_biofilm

ggsave("paper-figures/expt3-SBNCOS-biofilms_fig4b_updated.pdf", plot = fig_SBNCOS_biofilm, width = 3.46, height = 3.46)
```

# *SI figures and tables

### anova table

```{r}
# anova table
anova_output <- tidy(aov_3b)

aov_3b_tbl <- anova_output %>%
  dplyr::select(term, df, sumsq, meansq, statistic, p.value) %>%
  gt() %>%
  tab_header(
    title = "ANOVA Table"
  ) %>%
  fmt_number(
    columns = c(sumsq, meansq, statistic),
    decimals = 2
  ) %>%
  cols_label(
    term = "Term",
    df = "Df",
    sumsq = "Sum Sq",
    meansq = "Mean Sq",
    statistic = "F value",
    p.value = "P-value"
  ) %>%  # scientific number format for values <0.001 in p values
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  # 3 decimals for p values >=0.001
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  )
aov_3b_tbl

# prettier, simplified
anova_output <- tidy(aov_3b)

# Modify term to include degrees of freedom in *italics*
anova_output <- anova_output %>%
  mutate(term = ifelse(grepl("day:medium", term), "day x medium", term)) %>% 
  mutate (term = paste0(term, " (*df = ", df, ", ", anova_output[df == max(df), "df"], "*)")) %>% 
  filter(term != "Residuals (*df = 24, 24*)")

# Create the gt table with selected columns
aov_3b_tbl_b <- anova_output %>%
  dplyr::select(term, statistic, p.value) %>%
  gt() %>%
  tab_header(
    title = "ANOVA Table"
  ) %>%
  fmt_markdown(
    columns = c(term)
  ) %>%
  fmt_number(
    columns = c(statistic),
    decimals = 2
  ) %>%
  cols_label(
    term = "",
    statistic = "F value",
    p.value = "P-value"
  ) %>%
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  )

aov_3b_tbl_b
```

## cld

```{r}
pairwise_cld_3b <- (cld_day_3b + cld_medium_3b) / cld_day_medium_3b +
  plot_annotation(tag_levels = 'A')

# Display the combined plot
pairwise_cld_3b 

#ggsave("SI_3b.pdf", plot = pairwise_cld_3b, width = 7.09, height = 3.46)
```

## update y axis

```{r}
global_y_limits <- c(7, 15)
global_y_breaks <- seq(8, 14, by = 2)

# Compute CLD letters for 'day'
cld_day_3b <- ggplot(cld_day, aes(x = day, y = emmean)) +
  geom_point(size = 1) +
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
  geom_text(aes(label = .group), nudge_y = 1, size = 1.75, color = "black") +
  xlab("Day") +
  ylab("Estimated Marginal Means") +
  scale_y_continuous(labels = scales::label_number(accuracy = 1), limits = global_y_limits, breaks = global_y_breaks) +
  ggtitle("Day") +
  myCustomTheme() +
  scale_x_discrete(labels = c("Day_1" = "1", "Day_3" = "3", "Day_5" = "5", "Day_7" = "7")) +
  theme(axis.title.y = element_text(margin = margin(r = 1)))

# Compute CLD letters for 'medium'
cld_medium_3b <- ggplot(cld_medium, aes(x = factor(medium, levels = c("MQ+AEbiofilm", "PW+AEBiofilm", "1%TB+AEbiofilm")), y = emmean)) +
  geom_point(size = 1) +
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
  geom_text(aes(label = .group), nudge_y = 1, size = 1.75, color = "black") +
  xlab("Medium with AE biofilm") +
  ylab("Estimated Marginal Means") +
  scale_y_continuous(labels = scales::label_number(accuracy = 1), limits = global_y_limits, breaks = global_y_breaks) +
  ggtitle("Medium") +
  myCustomTheme() +
  scale_x_discrete(labels = c("1%TB+AEbiofilm" = "1%TB", "PW+AEBiofilm" = "PW-MO", "MQ+AEbiofilm" = "MQ")) +
  theme(axis.title.y = element_text(margin = margin(r = 1)))

# Compute CLD letters for 'day * medium'
cld_day_medium_3b <- ggplot(cld_day_medium, aes(x = factor(day), y = emmean)) +
  geom_point(size = 1) +
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
  geom_text(aes(label = .group), nudge_y = 1, size = 1.75, color = "black") +
  facet_wrap(~ factor(medium, levels = c("MQ+AEbiofilm", "PW+AEBiofilm", "1%TB+AEbiofilm")), 
             labeller = as_labeller(c("1%TB+AEbiofilm" = "1%TB", 
                                      "PW+AEBiofilm" = "PW - MO", 
                                      "MQ+AEbiofilm" = "MQ"))) +
  xlab("Day") +
  ylab("Estimated Marginal Means") +
  scale_y_continuous(labels = scales::label_number(accuracy = 1), limits = global_y_limits, breaks = global_y_breaks) +
  ggtitle("Day * Medium") +
  myCustomTheme() +
  scale_x_discrete(labels = c("Day_1" = "1", "Day_3" = "3", "Day_5" = "5", "Day_7" = "7")) +
  theme(axis.title.y = element_text(margin = margin(r = 1)))

# Combine plots
pairwise_cld_3b <- (cld_day_3b + cld_medium_3b) / cld_day_medium_3b +
  plot_annotation(tag_levels = 'A')

pairwise_cld_3b

ggsave("SI_3b_updated.pdf", plot = pairwise_cld_3b, width = 7.09, height = 3.46)

```


## raw data barplot

```{r}
SI_3a <- eb_ae %>%
  filter(bd_location == "biofilm") %>% # no supernatant
ggplot(aes(y= bd_qty, x = site)) + 
    geom_col(fill = "darkgrey") +
  facet_wrap(~day, labeller = labeller(day = c("Day_0" = "Day 0", "Day_1" = "Day 1", "Day_7" = "Day 7"))) +
  scale_y_continuous(expand = c(0.01, 0.01), # get rid of weird gap
    trans = "log",  # Natural logarithmic scale
                       breaks = c(1e+01, 1e+03, 1e+05),  # Set exact breaks
                       labels = scales::label_scientific()) +  # Use scientific notation 1e+01, 1e+03, 1e+05
   #scale_y_log10() + produces same as above but has weird spacing between facet and bottom of bar
    xlab("Site") +
   ylab("Bd Quantity \n (zoospore equivalents)") +
   myCustomTheme() + 
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
        panel.border = element_rect(color = "gray", size = 0.5, fill = NA))
SI_3a 
  
#ggsave("SI_3a.pdf", plot = SI_3a, width = 7.09, height = 3.46)
```


### posthoc table

```{r}
# post hoc table
# Convert Tukey emmeans results to data frames
tukey_day_df <- as.data.frame(tukey_day)
tukey_medium_df <- as.data.frame(tukey_medium)
tukey_interaction_df <- as.data.frame(tukey_interaction)

# Add labels to indicate which factor the comparison refers to
tukey_day_df <- tukey_day_df %>% mutate(factor = "Day")
tukey_medium_df <- tukey_medium_df %>% mutate(factor = "Medium")
tukey_interaction_df <- tukey_interaction_df %>% mutate(factor = "Interaction")

all_tukey_df <- bind_rows(tukey_day_df, tukey_medium_df, tukey_interaction_df)
ph3b_table <- all_tukey_df %>%
  dplyr::select(factor, contrast, estimate, SE, df, t.ratio, p.value) %>%
  gt() %>%
  # change column names
  cols_label(
    factor = "Comparison",
    contrast = "Group Comparison",
    estimate = "Estimate",
    SE = "Standard Error",
    df = "Degrees of Freedom",
    t.ratio = "t-Ratio",
    p.value = "p-value"
  ) %>%
  # update header for table
  tab_header(
    title = "Emmeans Post-hoc Test Results"
  ) %>%
  # 3 decimal places
  fmt_number(
    columns = c(estimate, SE, t.ratio),
    decimals = 3
  ) %>%
  # scientific number format for values <0.001 in p values
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  # 3 decimals for p values >=0.001
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  ) %>%
  #make the headers bold
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_column_labels(everything()))
ph3b_table
```

# Appendix

Playing with figures

Renwei barplot

```{r}
# eb_ae %>%
# ggplot(aes(y= bd_qty, x = site, fill=bd_location)) + 
#     geom_col() +
#     facet_grid(.~day)+
#   theme_classic()+
#   scale_fill_manual(values = c("lightgrey", "gray45" )) +
#     theme(axis.text.x = element_text(angle = 90),
#           legend.position = "bottom") + 
#     scale_y_log10() +
#     xlab("Site") +
#    ylab("Total Bd Quantity Per Well \n (zoospore equivalents)") 
```
