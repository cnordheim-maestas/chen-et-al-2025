---
title: "Monolayer Biofilm Experiments"
author: "Caitlin Nordheim-Maestas"
format: docx
# format:
#   html:
#     embed-resources: true
#     toc: true
#     code-fold: true
#     toc-location: left
---

# Experiment 4: Assessment of AE microorganisms’ effect on monolayer-associated Bd cells 

Data wrangling and analysis the Bd monolayer experiment using the SFEB (San Francisco East Bay) water samples for part A  and the follow up experiment part B with SBNCOS (Santa Barbara North Campus Open Space) pond water samples. These are the data presented in Figure 7A and 7B in the manuscript, and information is under the section "Experiment 4". 

```{r}
#| warning: false

## read in and clean data
library(tidyverse) # for cleaning and viewing data
library(gt) # pretty stats tables
library(broom) # cleaning for gt
library(here) # for importing data
library(car) # stats tests 
library(multcompView) # view cld
library(multcomp) # stats
library(nlme) # mixed effects models
library(emmeans) # for pairwise comparisons, especially on mixed effects models and glms
library(ggpubr) # for making ggqq plot
library(patchwork) # for combining figures

# data
# SFEB
ns_ml_pw_bd <- read.csv(here("data", "nine-sites-PW-on-MLBd - Sheet1.csv"))
# SBNCOS
fig_4b_raw <- read.csv(here("data", "final_NCOS_2024_reformatted_for_R.xlsx - Fig4B.csv"))

# Colors: these are from Paul Tol's colorblind friendly palette
with_microbes_40_color <- "#999933"
no_microbes_.22_color <- "#88ccee"

# set up custom theme for exploratory data
myCustomTheme <- function() {
  theme_light() +
    theme(axis.text = element_text(size = 12, family = "Times", color = "black"),
          axis.title.x = element_text(margin = margin(t = 10), size = 14, face = "bold", family = "Times", color = "black"), # Add space between x-axis label and axis
          axis.title.y = element_text(margin = margin(r = 10), size = 14, face = "bold", family = "Times", color = "black"), # Add space between y-axis label and axis
          title = element_text(size = 12, face = "bold", family = "Times"),
          plot.caption = element_text(size = 10, face = "italic", family = "Times"),
          legend.text = element_text(size = 10, family = "Times"), # Increase legend text size
          panel.grid.major.x = element_blank(), # Remove major vertical grid lines
          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines
          panel.grid.major.y = element_blank(), # Remove major horizontal grid lines
          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines
          strip.text = element_text(size = 12, face = "bold", family = "Times", color = "black"), # Set strip text style
          strip.background = element_rect(fill = "white", color = "grey"), # Set strip background to white, # color = "black"
          axis.ticks = element_blank() # Remove x and y axis ticks
    )}
```

# SFEB Monolayer

Scientific Q: Is mono-strain Bd biofilm resistant to microbes in pond water

Statistical question:

Is there a difference in the **gain or loss of ADHERENT Bd over 6 days** between the **filter sizes**?

**There is a significant difference in the change in the quantity of adherent Bd from Day 1 to Day 7 across the filter types (t = -6.45, df = 7, p-value = 0.0003)**

## Data Wrangling SFEB Monolayer

```{r}
eb_monolayer <- ns_ml_pw_bd %>% 
  filter(site != "MQ") %>% # remove control
  filter(bd_location == "adherent") # only want adherent Bd data (decision by Renwei, most relevant to our scientific question)

# keep control for labeling plot
eb_ml_controls <- ns_ml_pw_bd %>% 
  filter(site =="MQ") %>% # controls only
  filter(bd_location == "adherent") # only want adherent Bd data for controls too

# Data type cleaning
eb_monolayer$site <- factor(eb_monolayer$site,
                                levels = c("CABIN", "GRAMPS", "WEST", "GDPND005", "GDPND006", "GDPND009", "PRPND004", "PRPND009", "PRPND010"))
eb_monolayer$day <- factor(eb_monolayer$day, levels = c("Day_1", "Day_7")) 

# get the total difference across days by combining both locations of Bd then subtracting across days
eb_monolayer_diff <- eb_monolayer %>%
  # pivot so each day has its own column
  pivot_wider(names_from = day, values_from = bd_qty) %>%
  # calculate the rate loss by taking the log of each before subtracting
  mutate(rate_loss = log(Day_1) - log(Day_7))

# Create subsets for each treatment
eb_monolayer_diff_40um <- eb_monolayer_diff %>% 
  filter(filter =="40um_filter")
eb_monolayer_diff.22um <- eb_monolayer_diff %>% 
  filter(filter =="0.22um_filter")
```

## EDA SFEB Monolayer

Boxplot

```{r}
eb_monolayer %>%

  # plot it
  ggplot(aes(y= bd_qty, x = filter, fill = filter)) + 
    geom_boxplot() +
  geom_jitter(width = 0.2, alpha = 0.3) +
    scale_y_log10() +
    facet_wrap(~day, labeller = labeller(day = c("Day_1" = "Day 1",
                                                    "Day_7" = "Day 7")))+
  scale_fill_manual(values = c("40um_filter" = with_microbes_40_color, 
                                "0.22um_filter" = no_microbes_.22_color)) +
    theme_classic() +
   theme(legend.position = "none",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) + 
  scale_x_discrete (labels= c("40um_filter" = "With Microbes", "0.22um_filter" = "No Microbes")) +
    xlab("Presence of Microbes in Pond Water Added to Monolayer Biofilm") +
    ylab("Bd Quantity \n (zoospore equivalents)") +

 # add controls ad x's
geom_point(data = eb_ml_controls, aes(x = filter, y = bd_qty), shape = 4, size = 2)

```

## SFEB Stats and assumption testing

Question:

Question: Does the rate loss in Bd from day 1 to day 7 (aka Bd-inhibitory potency) differ between the two filter types (40 and 0.22 um; aka AE microorganisms + and  AE microorganisms -)?

The samples are essentially paired by site, so a paired t-test is most appropriate

$H0:μ_{rate loss of Bd}=0$

Test: Paired t-test on rate loss of Bd between day 1 and 7

```{r}
# check normality of the differences across groups
# With microbes (40 um)
eb_monolayer_diff_40um %>% 
 ggqqplot("rate_loss", title = "40um") # normal
shapiro.test(eb_monolayer_diff_40um$rate_loss) # numeric check using shapiro wilks test, a p > 0.05 says the data is indeed normal

# Without microbes (0.22 um)
eb_monolayer_diff.22um%>% 
 ggqqplot("rate_loss", title = "0.22um") # looks good
shapiro.test(eb_monolayer_diff.22um$rate_loss) # numeric check using shapiro wilks test, a p > 0.05 says the data is indeed normal

# visualize the comparison I am making
eb_monolayer_diff %>%
ggplot(aes(y= rate_loss, x = filter)) + 
    geom_boxplot() +
  geom_jitter() +
  ggtitle("Visualizing comparison for paired t-test on the rate_loss")
```

# Stats SFEB

```{r}
# Step 3: run the paired t-test on the difference
t.test(eb_monolayer_diff_40um$rate_loss, eb_monolayer_diff.22um$rate_loss, paired = TRUE)
```

### Stats results:

When monolayer Bd biofilm is exposed to pond water without microbes has a significantly greater loss of Bd between day 1 to day 7 than pond water with microbes (t = -5.4, df = 8, p = 0.0006772). The t-value is negative, which shows that the first item entered (with microbes) has a smaller loss of Bd than the second item entered (no microbes).

## Planned comparison to look at Day 1

Q: qty \~ factor(day) + microbe_treatment, random = \~1\|factor(site)

Question: does the quantity of Bd differ across days and treatment while controlling for the paired site?

This will be a lme since it is a mixed effects model!

Data wrangling

```{r}
eb_monolayer <- eb_monolayer %>% 
  mutate(log_bd = log(bd_qty))

# Exploration: normality of transformed data
eb_monolayer %>% 
 ggqqplot("log_bd") # normal yay
```

Assumptions testing

```{r}
par(mfrow = c(2,2))
# build model
mod6 <- lme(log_bd~day*factor(filter), random = ~1|site, data=eb_monolayer)
# model assumptions
plot(mod6) # passes homogeneity of variances yay
qqPlot(resid(mod6), main="QQ Plot of Residuals") # passes normality of resids yay
```

Interpret

```{r}
summary(mod6)
anova(mod6)

emmeans::emmeans(mod6, pairwise ~ day * filter) # pairwise comparison
```

Bd abundance was indeed significantly lower on day 1 in the presence of AE microorganisms compared to its abundance in microorganism-depleted pond water `(Day_1 0.22um_filter - Day_1 40um_filter p <.0001)`

# SBNCOS

## Data Wrangling SBNCOS

```{r}
## Monolayer
# add column for microbes or no
monolayer <- fig_4b_raw %>% 
  rename(sample_ID = sample.ID) %>% 
  rename(adh_plus_sup = ahd_plus_sup) %>% 
  # rename sample_id to only include treatment, not day (we have a column for day already)
  mutate(sample_ID = str_replace(sample_ID, "-D[0-9]+$", "")) %>% 

  # add columns for components y/n
  mutate(microbes = case_when(
    str_detect(sample_ID, "\\+microbes") ~ "y",
    TRUE ~ "n")) %>% 
  # add column for TB or no
  mutate(TB = case_when(
    str_detect(sample_ID, "TB") ~ "y",
    TRUE ~ "n")) %>% 
    mutate(day = case_when(
    day == 1 ~ "Day_1",
    day == 3 ~ "Day_3",
    day == 5 ~ "Day_5",
    day == 7 ~ "Day_7",
    day == 0 ~ "Day_0")) %>% 
  mutate(day = factor(day)) %>% 
  mutate(day_numeric = as.numeric(gsub("Day_", "", as.character(day)))) # add day numeric for plotting

monolayer_summary <- monolayer %>% 
  group_by(day, sample_ID) %>% 
  reframe(mean_adh = mean(adh), # calculate the mean
            n = length(adh), # count the number of observations within the day and sample id
            df = n - 1, # calculate the degrees of freedom
            sd = sd(adh), # calculate the standard deviation
            se = sd/sqrt(n), # calculate the standard error
          ) %>% 
  # re-create above columns, but in the summary df
  mutate(microbes = case_when(
    str_detect(sample_ID, "\\+microbes") ~ "y",TRUE ~ "n")) %>% 
  # add column for TB or no
  mutate(TB = case_when(str_detect(sample_ID, "TB") ~ "y", TRUE ~ "n")) %>% 
  mutate(day_numeric = as.numeric(gsub("Day_", "", as.character(day))))

# no day 0, this is the "initial Bd", not part of the analysis
ml_noday0 <- monolayer %>%
  filter(day != "Day_0") %>%
  mutate(log_adh = log(adh)) %>% 
  mutate(day = as.factor(day))

# set PW-microbes as reference (no milliQ control here)
ml_noday0$sample_ID <- factor(ml_noday0$sample_ID) # set as factor
ml_noday0$sample_ID <- relevel(ml_noday0$sample_ID, ref = "PW-microbes") # assign reference

# change the names in microbes and tb so there arent 2 levels with y and n (oops that was shortsighted of me!)
ml_noday0 <- ml_noday0 %>% 
  mutate(
    microbes = case_when(
      microbes == "y" ~ "MO present",
      microbes == "n" ~ "MO absent"),
    TB = case_when(
      TB == "y" ~ "TB present",
      TB == "n" ~ "TB absent"))
```


## EDA SBNCOS

visualize y var: bd load

Commented out to save space, but spoiler alert: log transformed is better

```{r}
# # untransformed
# ml_noday0 <- monolayer %>%
#   filter(day != 0) %>%
#   mutate(log_adh = log(adh)) # note: no zeroes so not log + 1
# ggqqplot(ml_noday0, "adh", title = "untransformed")
# shapiro.test(ml_noday0$adh) # nope
# hist(ml_noday0$adh) # note
# 
# # transformed
# ggqqplot(ml_noday0, "log_adh", title = "log transformed") # gorgeous
# hist(ml_noday0$log_adh) # better
```

## Stats SBNCOS

y var: amount of Bd (log transformed)

Model: Bd \~ day\*microbes\*TB

Question: Does the amount of Bd in the sample differ across the treatments of presence of microbes, TB, and day?

Model: 3-way ANOVA

**results**

Results summary

-   day (p\<0.05)

    -   All differ from each other except 5 and 7 (Tukey)

        -   Day 1 \> Day 3 \> Day 5 = Day 7

-   microbes (p\<0.05)

    -   presence microbes has less Bd (Tukey)

-   TB (NOT SIG)

-   day:microbes (p\<0.05)

-   day:TB (NOT SIG)

-   microbes:TB (p\<0.05)

-   day:microbes:TB (NOT SIG)

## null

```{r}
null <- lm(log_adh ~ 1,
  data = ml_noday0)
AIC(null) #205.4965
```

## Bd \~ day\*microbes\*TB

```{r}
# build model
aov_4b <- aov(log_adh ~ day*microbes*TB,
  data = ml_noday0)

# diagnostic plot
par(mfrow = c(2,2))
plot(aov_4b) # looks good

# look at results
summary(aov_4b)
AIC(aov_4b) # 132.8989 better than null
```

## Post hoc

Using a Tukey test on the anova model

```{r}
TukeyHSD(aov_4b)
```

Now let's get this in a format to visualize this data. I will use the emmeans function to extract the estimated marginal means using a tukey adjustment, and from that, will use R to differentiate between the ones with significant differences, and show that with a compact letter display (cld) plot for each comparison type.

```{r}
# emmeans and cld (compact letter display)

#..............................day...............................

# perform tukey pairwise comparisons across day only & get cld letters
cld_day <- emmeans(aov_4b, pairwise ~ day, adjust = "tukey") %>%
  cld(Letters = letters, reverse = TRUE)

# make a plot of estimated marginal means with CLD letters for each day
cld_day_4b <- ggplot(cld_day, aes(x = day, y = emmean)) +
  geom_point(size = 1) +  # Plot the estimated means
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +  # Error bars
  geom_text(aes(label = .group), nudge_y = 1, size = 1.75, color = "black") +  # Add CLD letters
  xlab("Day") +
  ylab("Estimated Marginal Means") +
  scale_y_continuous(labels = scales::label_number(accuracy = 1)) +
  ggtitle("Day") +
  scale_x_discrete(labels= c("Day_1" = "1", "Day_3" = "3", "Day_5" = "5", "Day_7" = "7")) +
 myCustomTheme() +  # Use minimal theme for clean look
  theme(axis.title.y = element_text(margin = margin(r = 1)))
cld_day_4b

#.........................microbes...............................

cld_microbes <- emmeans(aov_4b, pairwise ~ microbes, adjust = "tukey") %>%
  cld(Letters = letters, reverse = TRUE)
cld_microbes_4b <- ggplot(cld_microbes, aes(x = microbes, y = emmean)) +
  geom_point(size = 1) +  # Plot the estimated means
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +  
  geom_text(aes(label = .group), nudge_y = 0.5, size = 1.75, color = "black") + 
  xlab("Microbes present") +
  ylab("Estimated Marginal Means") +
    scale_y_continuous(labels = scales::label_number(accuracy = 1)) +
  ggtitle("Microbes") +
  scale_x_discrete(labels= c("1%TB+AEbiofilm" = "1%TB", "PW+AEBiofilm" = "PW - MO", "MQ+AEbiofilm" = "MQ")) +
 myCustomTheme() +  
theme(axis.title.y = element_text(margin = margin(r = 1)))
cld_microbes_4b 

#.....................day*microbes...............................

cld_day_microbes <- emmeans(aov_4b, pairwise ~ day * microbes, adjust = "tukey") %>%
  cld(Letters = letters, reverse = TRUE)

cld_day_microbes_4b <- ggplot(cld_day_microbes, aes(x = day, y = emmean)) +
  geom_point(size = 1) +  
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) + 
  geom_text(aes(label = .group), nudge_y = 1, size = 1.75, color = "black") +  
facet_wrap(~ factor(microbes)) + 
  xlab("Day") +
  ylab("Estimated Marginal Means") +
    scale_y_continuous(labels = scales::label_number(accuracy = 1)) +
  ggtitle("Day * Microbes") +
 scale_x_discrete(labels= c("Day_1" = "1", "Day_3" = "3", "Day_5" = "5", "Day_7" = "7")) +
 myCustomTheme() +  
theme(axis.title.y = element_text(margin = margin(r = 1)))
cld_day_microbes_4b

#.....................microbes*tb...............................

cld_TB_microbes <- emmeans(aov_4b, pairwise ~ TB * microbes, adjust = "tukey") %>%
  cld(Letters = letters, reverse = TRUE)

cld_TB_microbes_4b <- ggplot(cld_TB_microbes, aes(x = TB, y = emmean)) +
  geom_point(size = 1) +  
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +  
  geom_text(aes(label = .group), nudge_y = 1, size = 1.75, color = "black") + 
facet_wrap(~ factor(microbes)) + 
  xlab("TB Presence") +
  ylab("Estimated Marginal Means") +
    scale_y_continuous(labels = scales::label_number(accuracy = 1)) +
  ggtitle("Microbes * TB") +
 scale_x_discrete(labels= c("Day_1" = "1", "Day_3" = "3", "Day_5" = "5", "Day_7" = "7")) +
 myCustomTheme() + 
theme(axis.title.y = element_text(margin = margin(r = 1)))
cld_TB_microbes_4b

# plot them all together
# cld_day_4b + cld_microbes_4b + cld_day_microbes_4b + cld_TB_microbes_4b
```

```{r}
# get the stats for each comparison
f4b_tukey_day <- emmeans(aov_4b, pairwise ~ day, adjust = "tukey")$contrasts
f4b_tukey_microbes <- emmeans(aov_4b, pairwise ~ microbes, adjust = "tukey")$contrasts
f4b_tukey_microbe_TB <- emmeans(aov_4b, pairwise ~ microbes * TB, adjust = "tukey")$contrasts
f4b_tukey_microbe_day <- emmeans(aov_4b, pairwise ~ microbes * day, adjust = "tukey")$contrasts

# print the values
f4b_tukey_day
f4b_tukey_microbes
f4b_tukey_microbe_TB
f4b_tukey_microbe_day
```


# *Publication figures

```{r}
# set up custom theme
myCustomTheme <- function() {
  theme_light() + # base theme with light background
    theme(axis.text = element_text(size = 7, family = "Helvetica", color = "black"), # set font for axis tick labels
          axis.title.x = element_text(margin = margin(t = 10),  # add spacing between x-axis label and plot
                                      size = 7, face = "plain", family = "Helvetica", color = "black"), # Add space between x-axis label and axis
          axis.title.y = element_text(margin = margin(r = 10), # add spacing between y-axis label and plot
                                      size = 7,  face = "plain", family = "Helvetica", color = "black"), # Add space between y-axis label and axis
          title = element_text(size = 7, face = "bold", family = "Helvetica"),
          plot.caption = element_text(size = 7, face = "italic", family = "Helvetica"),
          legend.text = element_text(size = 7, family = "Helvetica"), # increase legend text size
          panel.grid = element_blank(),  # remove all gridlines (major and minor, x and y)
          # axis.line.x = element_line(color = "grey"),  # uncomment if axis lines are needed
          # axis.line.y = element_line(color = "grey"),  # uncomment if axis lines are needed
          axis.ticks = element_line(color = "grey", size = 0.5),   # keep tick markers
          axis.ticks.x = element_line(color = "grey", size = 0.5),  # ensure bottom axis ticks
          axis.ticks.y = element_line(color = "grey", size = 0.5),  # ensure side axis ticks
          strip.text = element_text(size = 7, face = "bold", family = "Helvetica", color = "black"),  # formatting for facet labels
          strip.background = element_rect(fill = "white", color = "grey", size = 0.5))}  # set background of facet strips to white with grey border
```

## Fig 7A SFEB Monolayer

```{r}
fig_SFEB_monolayer <- eb_monolayer %>% 
 mutate(filter = factor(filter, levels = c("40um_filter", "0.22um_filter"))) %>% # Switch the order of levels
  # plot it
  ggplot(aes(y= bd_qty, x = filter, fill = filter)) + 
    geom_boxplot() +
  geom_jitter(width = 0.2, alpha = 0.3) +
scale_y_log10(labels = function(x) {gsub("e", "E", scales::scientific_format()(x))}, 
                # update to consistent scale per reviewer request
                  limits = c(1e+02, 1e+08),
                breaks = c(1e2, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8)) + 
    facet_wrap(~day, labeller = labeller(day = c("Day_1" = "Day 1",
                                                    "Day_7" = "Day 7")))+
  scale_fill_manual(values = c("40um_filter" = with_microbes_40_color, 
                                "0.22um_filter" = no_microbes_.22_color)) +
 myCustomTheme()+
   theme(legend.position = "none",
    strip.background = element_rect(fill = "white", color = "grey", size = 0.5)) + # Adjust the facet line thickness
  scale_x_discrete (labels= c("40um_filter" = "+", "0.22um_filter" = "-")) +
    xlab("AE Microorganisms in pond water") +
    ylab("Bd quantity in monolayers (ZE/well)") +

 # add controls ad x's
geom_point(data = eb_ml_controls, aes(x = filter, y = bd_qty), shape = 4, size = 2)

fig_SFEB_monolayer <- fig_SFEB_monolayer +
  labs(tag = "A") +
  theme(
    plot.tag = element_text(family = "Helvetica", size = 20, face = "plain", hjust = -0.1, vjust = 1),
    plot.tag.position = c(0, 1)
  )

fig_SFEB_monolayer

#ggsave("paper-figures/expt4-SFEB_AE_monolayer_fig4a_updated.pdf", plot = fig_SFEB_monolayer, width = 3.46, height = 3.46)
```
## Fig 7B SBNCOS monolayer

```{r}
fig_SBNCOS_monolayer <- monolayer_summary %>% 
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID, 
                            levels = c("TB+PW+microbes","PW+microbes",
                                        "TB+PW-microbes", "PW-microbes"))) %>% 
  ggplot(aes(x = day_numeric, 
           y = mean_adh, 
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean_adh - se, # plot the standard error
                    ymax = mean_adh + se),
                width = 0.1) +
    geom_line(aes(linetype = microbes), show.legend = FALSE) + 
  scale_y_log10(labels = function(x) {gsub("e", "E", scales::scientific_format()(x))}, 
                # update to consistent scale per reviewer request
                  limits = c(1e+02, 1e+08),
                breaks = c(1e2, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8)) + 
  
  # vibes
  labs(x = "Incubation of Bd monolayers (day)",
       y = "Bd quantity in monolayers (ZE/well)",
       color = "Medium",       # Title for color legend
       linetype = "Microbes\nPresent") +
  scale_color_manual(values = c("TB+PW+microbes" = "#4477AA", 
                                "PW+microbes" = "#EE6677", 
                                "TB+PW-microbes" = "#66CCEE", 
                                "PW-microbes" = "#AA3377"), 
                    
                     labels = c("TB+PW+microbes" = "TB + PW + MO",
                               "PW+microbes" = "PW + MO",
                               "TB+PW-microbes" = "TB + PW - MO",
                                "PW-microbes" = "PW - MO")) + # Custom labels
 myCustomTheme()+
    theme(legend.position = "bottom",
        panel.border = element_blank(),
        legend.text = element_text(size = 5),  # Set legend text font size to 5pt
        legend.key.size = unit(0.4, "cm"),  # Reduce size of legend keys
        legend.spacing.y = unit(0.1, "cm"),  # Reduce vertical spacing between legend items
        legend.margin = margin(t = 0, r = 0, b = 0, l = 0),
        axis.line.x = element_line(color = "grey", size = 0.5),  # Keep the x-axis line
        axis.line.y = element_line(color = "grey", size = 0.5)) +  # Keep the y-axis line) +  # Remove margins around legend
guides(color = guide_legend(title = NULL)) +

 scale_linetype_manual(values = c("n" = "dashed", 
                                   "y" = "solid"),
                        labels = c("n" = "N", "y" = "Y")) +  # Change labels to uppercase N and Y
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7),
                   labels = c("Initial\nBd", "1", "3", "5", "7"))

fig_SBNCOS_monolayer <- fig_SBNCOS_monolayer +
  labs(tag = "B") +
  theme(
    plot.tag = element_text(family = "Helvetica", size = 20, face = "plain", hjust = -0.1, vjust = 1),
    plot.tag.position = c(0, 1)
  )

fig_SBNCOS_monolayer 

#ggsave("paper-figures/expt4-SBNCOS_AE_monolayer_fig4b_updated.pdf", plot = fig_SBNCOS_monolayer, width = 3.46, height = 3.46)
```

# *SI

## S8: SFEB

```{r}
# df for control data
eb_ml_controls <- eb_ml_controls %>%
  mutate(site = case_when(
    site == "MQ" ~ "sterile MQ",  # rename mq to sterile mq so it's clear
    TRUE ~ site)) %>% 
  mutate(filter = case_when(
    filter == "40um_filter" ~ "sterile MQ 40um_filter",  # re-label filter as sterile control
    filter == "0.22um_filter" ~ "sterile MQ 0.22um_filter",  # same for other filter
    TRUE ~ filter)) 

# drop column, don't need it, will allow for combining df's
eb_monolayer_nolog <- eb_monolayer %>%
  dplyr::select(-log_bd)  

# cmbine df's of experimental data and controls together
combined_data_4 <- bind_rows(
  eb_monolayer_nolog,  # main data
  eb_ml_controls)  # control data already formatted

##### plot it

SI_4a <- combined_data_4 %>%
  ggplot(aes(y = bd_qty, x = site, fill = filter)) +  
  geom_col(position = position_dodge()) +  # side-by-side bars so filters don't stack

  # log y axis
  scale_y_continuous(
    expand = c(0.01, 0.01),  # small padding around bars
    trans = "log",  # log scale 
    breaks = c(1e+01, 1e+03, 1e+05),  # specific breaks
    labels = scales::label_scientific()) +  # use scientific notation (the E's)

  # order sites by property 
  scale_x_discrete(limits = c(
    "CABIN", "GRAMPS", "WEST",
    "GDPND005", "GDPND006", "GDPND009",
    "PRPND004", "PRPND009", "PRPND010",
    "sterile MQ")) +  # put sterile MQ at the end

  # facet by day
  facet_wrap(~day, labeller = labeller(
    day = c("Day_1" = "Day 1", "Day_7" = "Day 7"))) +  # prettier facet labels

  # assign custom colors to each filter type
  scale_fill_manual(values = c(
    "40um_filter" = with_microbes_40_color, 
    "0.22um_filter" = no_microbes_.22_color, 
    "sterile MQ 40um_filter" = "darkgray",  
    "sterile MQ 0.22um_filter" = "lightgray")) + 

  # apply my custom theme & some extra tweaks
  myCustomTheme() + 
  theme(
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),  # rotate site names
    legend.position = "bottom",  # move legend under plot
    panel.border = element_rect(color = "gray", size = 0.5, fill = NA),  # outline each facet
    legend.text = element_text(size = 5),  # small font in legend
    legend.key.size = unit(0.4, "cm"),  # shrink legend keys
    legend.spacing.y = unit(0.1, "cm"),  # tighter spacing between legend items
    legend.margin = margin(t = 0, r = 0, b = 0, l = 0)) +  # remove extra padding
  xlab("site") +  # x axis label
  ylab("bd quantity \n (zoospore equivalents)") +  # y axis label (with line break)
  guides(fill = guide_legend(title = ""))  # remove legend title

SI_4a

```

## S9: SBNCOS

```{r}
# set consistent y-axis limits and breaks for all cld plots
global_y_limits <- c(9, 18)
global_y_breaks <- seq(10, 18, by = 2)

# compact letter display plot for day
cld_day_4b <- ggplot(cld_day, aes(x = day, y = emmean)) +
  geom_point(size = 1) +
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
  geom_text(aes(label = .group), nudge_y = 1.5, size = 1.75, color = "black") +
  xlab("Day") +
  ylab("Estimated Marginal Means") +
  scale_y_continuous(labels = scales::label_number(accuracy = 1), limits = global_y_limits, breaks = global_y_breaks) +
  ggtitle("Day") +
  scale_x_discrete(labels = c("Day_1" = "1", "Day_3" = "3", "Day_5" = "5", "Day_7" = "7")) +
  myCustomTheme() +
  theme(axis.title.y = element_text(margin = margin(r = 1)))

# compact letter display plot for microbes
cld_microbes_4b <- ggplot(cld_microbes, aes(x = microbes, y = emmean)) +
  geom_point(size = 1) +
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
  geom_text(aes(label = .group), nudge_y = 1.5, size = 1.75, color = "black") +
  xlab("Microbes present") +
  ylab("Estimated Marginal Means") +
  scale_y_continuous(labels = scales::label_number(accuracy = 1), limits = global_y_limits, breaks = global_y_breaks) +
  ggtitle("Microbes") +
  scale_x_discrete(labels = c("1%TB+AEbiofilm" = "1%TB", "PW+AEBiofilm" = "PW - MO", "MQ+AEbiofilm" = "MQ")) +
  myCustomTheme() +
  theme(axis.title.y = element_text(margin = margin(r = 1)))

# compact letter display plot for day * microbes
cld_day_microbes_4b <- ggplot(cld_day_microbes, aes(x = day, y = emmean)) +
  geom_point(size = 1) +
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
  geom_text(aes(label = .group), nudge_y = 1.5, size = 1.75, color = "black") +
  facet_wrap(~ factor(microbes)) +
  xlab("Day") +
  ylab("Estimated Marginal Means") +
  scale_y_continuous(labels = scales::label_number(accuracy = 1), limits = global_y_limits, breaks = global_y_breaks) +
  ggtitle("Day * Microbes") +
  scale_x_discrete(labels = c("Day_1" = "1", "Day_3" = "3", "Day_5" = "5", "Day_7" = "7")) +
  myCustomTheme() +
  theme(axis.title.y = element_text(margin = margin(r = 1)))

# compact letter display plot for microbes * TB
cld_TB_microbes_4b <- ggplot(cld_TB_microbes, aes(x = TB, y = emmean)) +
  geom_point(size = 1) +
  geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
  geom_text(aes(label = .group), nudge_y = 1.5, size = 1.75, color = "black") +
  facet_wrap(~ factor(microbes)) +
  xlab("TB Presence") +
  ylab("Estimated Marginal Means") +
  scale_y_continuous(labels = scales::label_number(accuracy = 1), limits = global_y_limits, breaks = global_y_breaks) +
  ggtitle("Microbes * TB") +
  scale_x_discrete(labels = c("Day_1" = "1", "Day_3" = "3", "Day_5" = "5", "Day_7" = "7")) +
  myCustomTheme() +
  theme(axis.title.y = element_text(margin = margin(r = 1)))

# Combine all plots
pairwise_cld_4b <- cld_day_4b + cld_microbes_4b + cld_day_microbes_4b + cld_TB_microbes_4b +
  plot_annotation(tag_levels = 'A')
pairwise_cld_4b

#ggsave("SI_4b_updated.pdf", plot = pairwise_cld_4b, width = 7.09, height = 3.46)

```


# Appendix

Not used in publication but I like these so I'll keep them here

## anova table

```{r}
anova_output4b <- tidy(aov_4b)  # get model output as a tibble

anova_output4b <- anova_output4b %>%
  mutate(term = gsub(":", " x ", term)) %>%  # clean up interaction terms
  mutate(term = paste0(term, " (*df = ", df, ", ", anova_output4b[df == max(df), "df"], "*)")) %>%  # move degrees of freedom into first column with the "term"
  filter(term != "Residuals (*df = 32, 32*)")  # drop residual row from table, accounted for in the max (df) above

aov_4b_tbl_b <- anova_output4b %>%
  dplyr::select(term, statistic, p.value) %>%  # just keep what's needed
  gt() %>%
  tab_header(title = "4b ANOVA Table") %>%  # give the table a title
  fmt_markdown(columns = term) %>%  # render df as italics; tells gt to interpret markdown formatting in the specified column(s), so the *'s above will be italics
  fmt_number(columns = statistic, decimals = 2) %>%  # round f value
  cols_label(  # relabel for clean display
    term = "",
    statistic = "F value",
    p.value = "P-value") %>%
  fmt_scientific(columns = p.value, decimals = 1, rows = p.value < 0.001) %>%  # sci format for tiny p-value
  fmt_number(columns = p.value, decimals = 3, rows = p.value >= 0.001)  # normal format for rest of the p values

aov_4b_tbl_b 
```

## post hoc

```{r}
# # post hoc table
# # Convert Tukey emmeans results to data frames
# f4b_tukey_day_df <- as.data.frame(f4b_tukey_day)
# f4b_tukey_microbes_df <- as.data.frame(f4b_tukey_microbes)
# f4b_tukey_int_microbe_day_df <- as.data.frame(f4b_tukey_int_microbe_day)
# f4b_tukey_int_microbe_TB_df <- as.data.frame(f4b_tukey_int_microbe_TB)
# 
# # Add labels to indicate which factor the comparison refers to
# f4b_tukey_day_df  <- f4b_tukey_day_df  %>% mutate(factor = "Day")
# f4b_tukey_microbes_df <- f4b_tukey_microbes_df %>% mutate(factor = "Medium")
# f4b_tukey_int_microbe_day_df <- f4b_tukey_int_microbe_day_df %>% mutate(factor = "Day x microbes")
# f4b_tukey_int_microbe_TB_df <- f4b_tukey_int_microbe_TB_df %>% mutate(factor = "Microbes x TB")
# 
# f4b_all_tukey_df <- bind_rows(f4b_tukey_day_df, f4b_tukey_microbes_df, f4b_tukey_int_microbe_TB_df, f4b_tukey_int_microbe_day_df)
# 
# f4b_all_tukey_df <- f4b_all_tukey_df %>% 
#   mutate(contrast = gsub("MO present TB absent", "microbes only", contrast),
#          contrast = gsub("MO present TB present", "both microbes and TB", contrast),
#          contrast = gsub("MO absent TB absent", "neither microbes nor TB", contrast),
#          contrast = gsub("MO absent TB present", "TB only", contrast))
# 
# 
# ph4b_table <- f4b_all_tukey_df %>%
#   dplyr::select(factor, contrast, estimate, SE, df, t.ratio, p.value) %>%
#   gt() %>%
#   # change column names
#   cols_label(
#     factor = "Comparison",
#     contrast = "Group Comparison",
#     estimate = "Estimate",
#     SE = "Standard Error",
#     df = "Degrees of Freedom",
#     t.ratio = "t-Ratio",
#     p.value = "p-value"
#   ) %>%
#   # update header for table
#   tab_header(
#     title = "4b Emmeans Post-hoc Test Results"
#   ) %>%
#   # 3 decimal places
#   fmt_number(
#     columns = c(estimate, SE, t.ratio),
#     decimals = 3
#   ) %>%
#   # scientific number format for values <0.001 in p values
#   fmt_scientific(
#     columns = c(p.value),
#     decimals = 1,
#     rows = p.value < 0.001
#   ) %>%
#   # 3 decimals for p values >=0.001
#   fmt_number(
#     columns = c(p.value),
#     decimals = 3,
#     rows = p.value >= 0.001
#   ) %>%
#   #make the headers bold
#   tab_style(
#     style = list(
#       cell_text(weight = "bold")
#     ),
#     locations = cells_column_labels(everything()))
# 
# ph4b_table
```
