---
title: "Combined analyses"
author: "Caitlin Nordheim-Maestas"
format: docx
# format:
#   html:
#     embed-resources: true
#     toc: true
#     code-fold: true
#     toc-location: left
---

# Compare Bd-inhibitory potency of the AE biofilms to that of the AE microorganisms

# Load in data and libraries

```{r}
#| warning: false

## read in and clean data
library(tidyverse) # for cleaning and viewing data
library(gt) # pretty stats tables
library(broom) # cleaning for gt
library(here) # for importing data
library(car) # stats tests 
library(multcomp) # stats
library(multcompView) # view cld
library(emmeans) # for pairwise comparisons, especially on mixed effects models and glms
library(ggpubr) # for making ggqq plot
library(patchwork) # for combining figures

# load wrangled data from expt2-4 quarto docs in this repo
eb_pw_total_diff <- read.csv(here("data", "eb_pw_total_diff.csv"))
pw_noday0 <- read.csv(here("data", "pw_noday0.csv"))
eb_ae_bf_only <- read.csv(here("data", "eb_ae_bf_only.csv"))
ae_noday0 <- read.csv(here("data", "ae_noday0.csv"))

# Colors: these are from Paul Tol's colorblind friendly palette
with_microbes_40_color <- "#999933"
no_microbes_.22_color <- "#88ccee"
```

# Data wrangling for all datasets

```{r}
# data wrangling for comparisons across experiments

## EBpond water
pw_WITH_microbes <- eb_pw_total_diff %>%
  filter(filter != "0.22um_filter") %>% 
  mutate(treatment = "EB_PW_40um") %>% 
  rename(sample_ID = site) %>% 
  dplyr::select(sample_ID, treatment, rate_loss)

## NCOS PW 
ncos_pw_WITH_microbes <- pw_noday0 %>% 
  filter(sample_ID == "PW+microorganism") %>% 
  filter(day != "Day_3" & day != "Day_5") %>%
  dplyr::select(day, sample_ID, replicate, adh_plus_sup) %>% 
 pivot_wider(names_from = day, values_from = adh_plus_sup) %>%
# calculate the rate loss by taking the log of each before subtracting
  mutate(rate_loss = log(Day_1) - log(Day_7)) %>% 
  mutate(treatment = "NCOS_PW_40um") %>% 
  dplyr::select(sample_ID, treatment, rate_loss)

## Field bf
fieldbf_no_microbes <- eb_ae_bf_only %>% # no need to filter, the only treatment is no microbe water
  filter(day != "Day_0") %>% 
   dplyr::select(day, site, bd_qty) %>% 
  pivot_wider(names_from = day, values_from = bd_qty) %>%
# calculate the rate loss by taking the log of each before subtracting
  mutate(rate_loss = log(Day_1) - log(Day_7)) %>% 
  rename(sample_ID = site) %>% 
  mutate(treatment = "EB_biofilm") %>% 
  dplyr::select(sample_ID, treatment, rate_loss)

## NCOS version 3B ae bf with no microbes
ncos_ae_no_microbes <- ae_noday0 %>% 
  filter(sample_ID == "PW+AEBiofilm") %>% # this is a "pond water" treatment of filtered pond water
  filter(day != "Day_3" & day != "Day_5") %>%
  dplyr::select(day, sample_ID, replicate, adh) %>% 
 pivot_wider(names_from = day, values_from = adh) %>%
# calculate the rate loss by taking the log of each before subtracting
    mutate(treatment = "NCOS_biofilm") %>% 
  mutate(rate_loss = log(Day_1) - log(Day_7)) %>% 
  dplyr::select(sample_ID, treatment, rate_loss)
  
all_parts <- bind_rows(pw_WITH_microbes, fieldbf_no_microbes, ncos_pw_WITH_microbes, ncos_ae_no_microbes) %>% 
  mutate(location = case_when(
      grepl("^EB", treatment) ~ "EB",
      grepl("^NCOS", treatment) ~ "NCOS"),
    medium = case_when(
      grepl("PW", treatment) ~ "PW",
      grepl("biofilm", treatment) ~ "biofilm"))

# set PW 40 um as the intercept, comparing back to that one
all_parts$treatment <- factor(all_parts$treatment,
                          levels = c("EB_PW_40um", "NCOS_PW_40um", "EB_biofilm", "NCOS_biofilm")) 
```

# Stats and assumption testing

## Exploratory viz:

```{r}
all_parts %>% 
  ggplot(aes(y= rate_loss, x = treatment)) + 
    geom_boxplot() +
  geom_jitter(alpha = 0.5, width = 0.05) +
    theme_classic() +
   theme(legend.position = "bottom",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) +
    xlab("Treatment") +
    ylab("Rate of Loss of Bd over 7 Days") + 
  ggtitle("Exploratory visualization, not final plot")
```

## Assumptions testing

```{r}
par(mfrow = c(2,2))
aov_5b <- aov(rate_loss~treatment, data=all_parts)
plot(aov_5b) # diagnostic plot
```

## interpret

```{r}
# with microbe depleted
summary(aov_5b) # sig effect of treatment
```

## posthoc

```{r}
TukeyHSD(aov_5b)

# get compact letter display from the tukey using glht (general linear hypotheses test)
post_hoc_rateloss <- glht(aov_5b, 
                 linfct = mcp(treatment = "Tukey")) # run Tukey
summary(post_hoc_rateloss) # show the comparisons
cld(post_hoc_rateloss) # get compact letter display

# export cld results as a dataframe
cld_results_rateloss <- cld(post_hoc_rateloss)  # get compact letter display (CLD) groupings for treatment comparisons
labels_rl <- cld_results_rateloss$mcletters$Letters  # extract grouping letters from cld object
treatments_rl <- names(labels_rl)  # get the treatment names corresponding to the letters
labels_rl <- as.character(labels_rl)  # set as character

# df with significance data for the rate loss, will use in plotting
sig_data_rl <- tibble(
  treatment = treatments_rl, # treatment names from the CLD results
  y_position = c(7,4,6.5,4), # y position (adjusted manually)
  label = labels_rl) # CLD group letters for each treatment
```

# \*PUBLICATION FIGURES

```{r}
myCustomTheme <- function() {
  theme_light() +
    theme(axis.text = element_text(size = 7, family = "Helvetica", color = "black"),
          axis.title.x = element_text(margin = margin(t = 10), size = 7, face = "plain", family = "Helvetica", color = "black"), # Add space between x-axis label and axis
          axis.title.y = element_text(margin = margin(r = 10), size = 7,  face = "plain", family = "Helvetica", color = "black"), # Add space between y-axis label and axis
          title = element_text(size = 7, face = "bold", family = "Helvetica"),
          plot.caption = element_text(size = 7, face = "italic", family = "Helvetica"),
          legend.text = element_text(size = 7, family = "Helvetica"), # Increase legend text size
          panel.grid = element_blank(),  # Remove all grid lines (both major and minor)
          # axis.line.x = element_line(color = "grey"),  # Keep the x-axis line
          # axis.line.y = element_line(color = "grey"),  # Keep the y-axis line
          axis.ticks = element_line(color = "grey", size = 0.5),   # Keep tick markers
          axis.ticks.x = element_line(color = "grey", size = 0.5),  # ensure bottom axis ticks
          axis.ticks.y = element_line(color = "grey", size = 0.5),  # <- ensure side axis ticks
          strip.text = element_text(size = 7, face = "bold", family = "Helvetica", color = "black"), # Set strip text style
          strip.background = element_rect(fill = "white", color = "grey", size = 0.5)  # Set strip background to white, outline grey
    )
}
```

```{r}
# sfeb_fig <- sfeb %>% 
#   ggplot(aes(y= rate_loss, x = treatment, fill = treatment)) + 
#     geom_boxplot() +
#   geom_jitter(alpha = 0.3, width = 0.05) +
#     myCustomTheme() +
#      scale_fill_manual(values = c("EB_PW_40um" = "white",
#                                   "EB_biofilm" = "darkgrey")) +
#  theme(legend.position = "none",
#         axis.line.x = element_line(color = "grey", size = 0.5),  # Keep the x-axis line
#         axis.line.y = element_line(color = "grey", size = 0.5),
#        panel.border = element_blank()) +
#     xlab("Medium") +
#     ylab("Reduction of Bd over 6 days") + 
#    scale_x_discrete (labels= c("EB_PW_40um" = "microorganisms\n(n = 15)",
#                               "EB_biofilm" = "biofilms\n(n = 9)")) +
#     scale_y_continuous(limits = c(0, 7))
# 
# sfeb_fig <- sfeb_fig +
#   labs(tag = "A") +
#   theme(
#     plot.tag = element_text(family = "Helvetica", size = 20, face = "plain", hjust = -0.1, vjust = 1),
#     plot.tag.position = c(0, 1)
#   )
# 
# sfeb_fig

# ncos_fig <- ncos %>% 
#   ggplot(aes(y= rate_loss, x = treatment, fill = treatment)) + 
#     geom_boxplot() +
#   geom_jitter(alpha = 0.3, width = 0.05) +
#     myCustomTheme() +
#      scale_fill_manual(values = c("NCOS_PW_40um" = "white",
#                                   "NCOS_biofilm" = "darkgrey")) +
#  theme(legend.position = "none",
#         axis.line.x = element_line(color = "grey", size = 0.5),  # Keep the x-axis line
#         axis.line.y = element_line(color = "grey", size = 0.5),
#        panel.border = element_blank()) +
#     xlab("Medium") +
#     ylab("Reduction of Bd over 6 days") + 
#    scale_x_discrete (labels= c("NCOS_PW_40um" = "microorganisms\n(triplicates)",
#                               "NCOS_biofilm" = "biofilms\n(triplicates)")) +
#       scale_y_continuous(limits = c(0, 7))
# 
# ncos_fig <- ncos_fig +
#   labs(tag = "B") +
#   theme(
#     plot.tag = element_text(family = "Helvetica", size = 20, face = "plain", hjust = -0.1, vjust = 1),
#     plot.tag.position = c(0, 1)
#   )
# 
# ncos_fig
```

## Fig 6

```{r}
all_parts$treatment <- factor(all_parts$treatment) 
  
si_alltreat <- all_parts %>% 
    mutate(site = case_when(
    grepl("NCOS", treatment) ~ "Santa Barbara",
    TRUE ~ "East Bay"  # Default to "east Bay"
  )) %>% 
   ggplot(aes(y= rate_loss, x = treatment, fill = medium)) +
    geom_boxplot() +
  geom_jitter(alpha = 0.3, width = 0.05) +
    myCustomTheme() +
  # biofilm and pond water colors, both from paul tol colorblind palette
   scale_fill_manual(values = c("PW" = "white",
                                  "Biofilm" = "darkgrey")) +
  #facet_wrap(~site, scales = "free_x") +
   theme(legend.position = "none",
          axis.line.x = element_line(color = "grey", size = 0.5),  # Keep the x-axis line
        axis.line.y = element_line(color = "grey", size = 0.5)) +
  xlab("Treatment") +
  ylab("Rate loss of Bd over 6 Days") + 
  scale_x_discrete (limits = c("EB_PW_40um", "EB_biofilm", 
                               "NCOS_PW_40um", "NCOS_biofilm"),  # Specify the order
                        labels= c(
                              "EB_PW_40um" = "East Bay\nPW + MO",
                              "NCOS_PW_40um" = "SB \nPW + MO",
                              "EB_biofilm" = "East Bay\nBiofilm",
                              "NCOS_biofilm" = "SB \nBiofilm")) +
  scale_y_continuous(limits = c(0, 8))  # Set y-axis limits from 0 to 8
sig_data_rl <- sig_data_rl %>% 
    mutate(site = case_when(
    grepl("NCOS", treatment) ~ "Santa Barbara",
    TRUE ~ "East Bay"  # Default to "east Bay"
  ))

si_alltreat  <- si_alltreat  + 
  geom_text(data = sig_data_rl, 
            aes(x = treatment, y = y_position, label = label, group = site), 
            inherit.aes = FALSE, 
            size = 2.4)  # Set fixed text size outside of aes()

si_alltreat 

#ggsave("paper-figures/SI_combined-expts.pdf", plot = si_alltreat , width = 3.46, height = 3.46)
```


# Appendix

### Stats tables

anova table

```{r}
# anova table
anova_output <- tidy(aov_5b)

aov_5b_tbl <- anova_output %>%
  dplyr::select(term, df, sumsq, meansq, statistic, p.value) %>%
  gt() %>%
  tab_header(
    title = "5b ANOVA Table"
  ) %>%
  fmt_number(
    columns = c(sumsq, meansq, statistic),
    decimals = 2
  ) %>%
  cols_label(
    term = "Term",
    df = "Df",
    sumsq = "Sum Sq",
    meansq = "Mean Sq",
    statistic = "F value",
    p.value = "P-value"
  ) %>%  # scientific number format for values <0.001 in p values
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  # 3 decimals for p values >=0.001
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  )
aov_5b_tbl

# prettier, simplified
anova_output <- tidy(aov_5b)

# Modify term to include degrees of freedom in *italics*
anova_output <- anova_output %>%
  mutate(term = ifelse(grepl("day:medium", term), "day x medium", term)) %>% 
  mutate (term = paste0(term, " (*df = ", df, ", ", anova_output[df == max(df), "df"], "*)")) %>% 
  filter(term != "Residuals (*df = 26, 26*)")

# Create the gt table with selected columns
aov_5b_tbl_b <- anova_output %>%
  dplyr::select(term, statistic, p.value) %>%
  gt() %>%
  tab_header(
    title = "5b ANOVA Table"
  ) %>%
  fmt_markdown(
    columns = c(term)
  ) %>%
  fmt_number(
    columns = c(statistic),
    decimals = 2
  ) %>%
  cols_label(
    term = "",
    statistic = "F value",
    p.value = "P-value"
  ) %>%
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  )

aov_5b_tbl_b
```

## Alternate data method: Updated stats May 2025: 2 t-tests, one for each site

New plan: Renwei requests 2 t-tests, with one for each site

**Results: There is no significant difference in the rate loss of Bd between AE microorganisms and AE biofilms within the SFEB sites (t = 0.31125, df = 22, p-value = 0.7585). There is also no significant difference in the rate loss of Bd between AE microorganisms and AE biofilms within the SBNCOS sites (t = -1.5014, df = 4, p-value = 0.2077) **

## SFEB t-test

```{r}
sfeb <- all_parts %>% 
  filter(grepl("eb_", treatment, ignore.case = TRUE))

# test for homogeneity of variance
leveneTest(rate_loss ~ factor(treatment), data = sfeb) # p =  0.9628; var are similar yay!

# assumptions testing
sfeb %>% 
 ggqqplot("rate_loss") # good
shapiro.test(sfeb$rate_loss) # normal, yay! (p-value = 0.1792)

t.test(rate_loss ~ treatment, data = sfeb, var.equal = TRUE)
```

## NCOS t-test

```{r}
ncos <- all_parts %>% 
  filter(grepl("ncos_", treatment, ignore.case = TRUE))

# test for homogeneity of variance
leveneTest(rate_loss ~ factor(treatment), data = ncos) # p =  0.1394; var are similar yay!

str(ncos)

# assumptions testing
sfeb %>% 
 ggqqplot("rate_loss") # good
shapiro.test(ncos$rate_loss) # barely did not pass but the qqplot is gorgeous so we will proceed (p-value = 0.04348)...also such a teeny sample size the shapiro isn't the best fit here anyway

t.test(rate_loss ~ treatment, data = ncos, var.equal = TRUE)
```

```{r}
combined <- all_parts %>% 
  mutate(
    medium = factor(medium),  # convert to factor first
    medium = fct_relevel(medium, "PW", "Biofilm"), # pond water first
     # rename the location so it shows up correct in the facet  
    location = case_when(
        location == "EB" ~ "SFEB",
        location == "NCOS" ~ "SBNCOS",
        TRUE ~ location)) %>%
  ggplot(aes(y= rate_loss, x = medium, fill = medium)) + 
    geom_boxplot() +
  geom_jitter(alpha = 0.3, width = 0.05) +
    myCustomTheme() +
     scale_fill_manual(values = c("PW" = "white",
                                  "Biofilm" = "darkgrey")) +
 theme(legend.position = "none",
        axis.line.x = element_line(color = "grey", size = 0.5),  # Keep the x-axis line
        axis.line.y = element_line(color = "grey", size = 0.5),
       panel.border = element_rect(color = "gray", size = 0.5, fill = NA)) +
    xlab(NULL) +
    ylab("Reduction of Bd over 6 days") + 
   scale_x_discrete (labels= c("PW" = "microorganisms",
                              "Biofilm" = "biofilms")) +
    facet_wrap(~location) +
  scale_y_continuous(limits = c(0, 7))

combined 

#ggsave("paper-figures/combined-expts_fig5_updated_NO SIG MARKERS.pdf", plot = combined , width = 3.46, height = 3.46)

ns_data <- data.frame(
  location = c("SFEB", "SBNCOS"),
  x_start = 1,         # corresponds to "PW"
  x_end = 2,           # corresponds to "Biofilm"
  y = c(6.8,4.2),     # where on Y we want the bar
  label = "ns"
)

fig5_withNS <- combined +
  geom_segment(data = ns_data,
               aes(x = x_start, xend = x_end, y = y, yend = y),
               inherit.aes = FALSE,
               linewidth = 0.5) +
  geom_text(data = ns_data,
            aes(x = 1.5, y = y + 0.2, label = label),
            inherit.aes = FALSE,
            size = 3,
            fontface = "plain")

fig5_withNS

#ggsave("paper-figures/combined-expts_fig5_updated_SIG MARKERS.pdf", plot = fig5_withNS, width = 3.46, height = 3.46)

```
