---
title: "Biofilm Bd Update"
author: "Caitlin Nordheim-Maestas"
format:
  html:
    toc: true
    code-fold: true
    toc-location: left
---

# Map of experiments

| Nickname                  | Adherent, or adherent + supernatant? |
|---------------------------|--------------------------------------|
| EB Pond water - 2A        | adherent + supernatant               |
| SB Pond water - 2B        | adherent + supernatant               |
| EB AE Biofilm - 3A        | adherent only                        |
| SB AE Biofilm  - 3B       | adherent only                        |
| EB Monolayer Biofilm- 4A  | adherent only                        |
| SB Monolayer Biofilm - 4B | adherent only                        |

## East Bay Pondwater microbes (Fig2A)

Effect of pond water microbes from the East Bay on Bd

## Santa Barbara Pondwater microbes (Fig2B)

Effect of pond water microbes from Santa Barbara on Bd over time, also looking at the addition of a food source (TB)

## East Bay AE Biofilm (Fig3A)

Effect of East Bay AE biofilm from the East Bay on Bd (incubated in microbe depleted water to isolate the microbes to only the AE biofiom)

## Santa Barbara AE Biofilm (Fig3B)

Effect over time of Santa Barbara AE biofilm on Bd, while looking at different incubation media (microbe depleted local pond water, MQ, and TB)

## East Bay water with Monolayer-Bd Biofilm (Fig4A)

Effect of East Bay pond water microbes on a monolayer-Bd biofilm

## Santa Barbara pond water with Monolayer-Bd Biofilm (Fig4B)

Effect of Santa Barbara pond water microbes on a monolayer-Bd biofilm

# Data sources

## East Bay Experiments

File source: "[Biofilm PCR for R-studio](https://docs.google.com/spreadsheets/d/17QveSH4al14axf-cBsu4JEhgampQEU1E/edit?usp=sharing&ouid=116930126837996341679&rtpof=true&sd=true)" first tab called 15 sites PW on Bd

## Santa Barbara Experiments

# Load in data and libraries

```{r}
#| warning: false

## read in and clean data
library(tidyverse) # for cleaning and viewing data
library(here) # for importing data
library(car) # stats tests like Levene's
library(multcomp) # stats
library(nlme) # mixed effects models
library(emmeans) # for pairwise comparisons, especially on mixed effects models and glms
library(ggpubr) # for combining figures
library(patchwork) # for combining figures

# load "East Bay" experiments data
ns_biofilm_bd <- read.csv(here("data", "nine-sites-biofilm-on-Bd - Sheet1.csv"))
fs_pw_bd <- read.csv(here("data", "fifteen-sites-PW-on-Bd - Sheet1.csv"))
ns_ml_pw_bd <- read.csv(here("data", "nine-sites-PW-on-MLBd - Sheet1.csv"))

fig_2b_raw <- read.csv(here("data", "final_NCOS_2024_reformatted_for_R.xlsx - Fig2B.csv"))
fig_3b_raw <- read.csv(here("data", "final_NCOS_2024_reformatted_for_R.xlsx - Fig3B.csv"))
fig_4b_raw <- read.csv(here("data", "final_NCOS_2024_reformatted_for_R.xlsx - Fig4B.csv"))

# set up custom theme
myCustomTheme <- function() {
  theme_minimal() +
    theme(axis.text = element_text(size = 12, family = "Times", color = "black"),
          axis.title = element_text(size = 14, face = "bold", family = "Times", color = "black"),
          axis.title.y = element_text(margin = margin(r = 15), size = 14, face = "bold", family = "Times", color = "black"), # Add space between y-axis label and axis
          title = element_text(size = 12, face = "bold", family = "Times"),
          plot.caption = element_text(size = 10, face = "italic", family = "Times"),
          legend.text = element_text(size = 10, family = "Times"), # Increase legend text size
          panel.grid.major.x = element_blank(), # Remove major vertical grid lines
          panel.grid.minor.x = element_blank()) # Set axes ticks color to black
}
```

# 2A: Effect of East Bay aquatic environmental microbes on Bd growth - 15 sites

Statistical question:

Is there a difference in the **gain or loss of Bd over 6 days** between the **filter sizes** looking at the **TOTAL BD**

## 2A Data Wrangling

```{r}
# remove controls
partI <- fs_pw_bd %>% filter(site != "sterile MQ")

# keep control for labeling plot
partI_controls <- fs_pw_bd %>% 
  filter(site =="sterile MQ") %>% 
  pivot_wider(names_from = bd_location, values_from = bd_qty) %>%
  mutate(combined_bd = adherent + floating) %>% 
   mutate(day = case_when(
    day == 1 ~ "Day_1",
    day == 7 ~ "Day_7"))

# data type cleaning
partI$bd_location <- factor(partI$bd_location, levels = c("floating", "adherent"))
partI$filter <- factor(partI$filter,
                          levels = c("40um_filter", "0.22um_filter"))
partI$day <- factor(partI$day, levels = c("1", "7"),
                            labels = c("Day_1", "Day_7"))
partI$site <- factor(partI$site,
                          levels = c("BARN", "CABIN", "NORTH", "GRAMPS", "WEST", "GDPND004", "GDPND005", "GDPND006", "GDPND008", "GDPND009", "PRPND002", "PRPND003", "PRPND004", "PRPND009", "PRPND010", "sterile MQ"))

# get the total difference across days by combining both locations of Bd then subtracting across days
partI_total_diff <- partI %>%
  # combine floating and adherent for total_Bd
  pivot_wider(names_from = bd_location, values_from = bd_qty) %>%
  mutate(combined_bd = adherent + floating) %>% 
  subset(select = -c(adherent,floating)) %>% 

# different metrics of difference in Bd
  pivot_wider(names_from = day, values_from = combined_bd) %>%

  # calculate the rate loss by taking the log of each before subtracting
  mutate(rate_loss = log(Day_1) - log(Day_7))  %>% 

  # calculate the difference in raw amount of Bd
  mutate(diff = Day_1 - Day_7)

# Split into 2 data frames one for 40 and one for .22

partI_total_diff_40um <- partI_total_diff %>% 
  filter(filter =="40um_filter")
partI_total_diff.22um <- partI_total_diff%>% 
  filter(filter =="0.22um_filter")

```

## 2A (East Bay Pond water) Data visualization

```{r}
# Colors: these are from Paul Tol's colorblind friendly palette
with_microbes_40_color <- "#999933"
no_microbes_.22_color <- "#88ccee"
```

### Renwei barplot remake

```{r}
partI %>%
  # combine floating and adherent for total_Bd
  pivot_wider(names_from = bd_location, values_from = bd_qty) %>%
  mutate(combined_bd = adherent + floating) %>% 
ggplot(aes(y= combined_bd, x = site, fill = filter)) + 
    geom_col(position = position_dodge()) +
  scale_y_log10() +
    facet_wrap(~day, labeller = labeller(day = c("Day_1" = "Day 1",
                                                    "Day_7" = "Day 7"))) +
  scale_fill_manual(values = c("40um_filter" = with_microbes_40_color, 
                                "0.22um_filter" = no_microbes_.22_color)) +
    theme_classic() +
   theme(axis.text.x = element_text(angle = 90),
        legend.position = "bottom",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) + 
    xlab("Site") +
    ylab("Bd Quantity \n (zoospore equivalents)") +
  guides(fill=guide_legend(title=""))
```

## 2A Boxplot

```{r}
partI %>%
  # combine floating and adherent for total_Bd
  pivot_wider(names_from = bd_location, values_from = bd_qty) %>%
  mutate(combined_bd = adherent + floating) %>% 
  
  # create the plot
  ggplot(aes(y= combined_bd, x = filter, fill = filter)) + 
    geom_boxplot() +
  geom_jitter(width = 0.2, alpha = 0.3) +
    scale_y_log10() +
    facet_wrap(~day, labeller = labeller(day = c("Day_1" = "Day 1",
                                                    "Day_7" = "Day 7")))+
  scale_fill_manual(values = c("40um_filter" = with_microbes_40_color, 
                                "0.22um_filter" = no_microbes_.22_color)) +
    theme_classic() +
   theme(legend.position = "none",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) + 
  scale_x_discrete (labels= c("40um_filter" = "With Microbes", "0.22um_filter" = "No Microbes")) +
    xlab("Presence of Microbes in Pond Water") +
    ylab("Bd Quantity \n (zoospore equivalents)") +
  
  # add controls ad x's
  geom_point(data = partI_controls, aes(x = filter, y = combined_bd), shape = 4, size = 2)
```

## 2A Stats and assumption testing

Question:

Does the difference in Bd from day 1 to day 7 differ between the two filter types?

The samples are essentially paired by site, so a paired t-test is most appropriate

$H0:Î¼_{difference in Bd}=0$

Assumptions:

Assumes that the observations from each group represent a random sample from the population. Assumes that the difference of the two observations follow a normal distribution.

### 2A Test: Paired t-test on the difference in all of the Bd from day 1 to day 7 between the two filters

### 2A Stats results:

**There is a significant difference in the change in the total quantity of Bd from Day 1 to Day 7 across the filter types (t = 4.7879, df = 14, p-value = 0.000289)**

```{r}
# check normality of the differences across groups: it's normal untransformed in both!
partI_total_diff_40um %>% 
 ggqqplot("rate_loss", title = "Untransformed Bd in both floating and floating rate_loss between day 1 and 7 qqPlot") # good enough
shapiro.test(partI_total_diff_40um$rate_loss) # normal, yay!
hist(partI_total_diff_40um$rate_loss) # good enough

partI_total_diff.22um%>% 
 ggqqplot("rate_loss", title = "Untransformed Bd in both floating and floating rate_loss between day 1 and 7 qqPlot") # gorgeous
shapiro.test(partI_total_diff.22um$rate_loss) # normal, yay!
hist(partI_total_diff.22um$rate_loss) # good enough

# visualize the comparison I am making
partI_total_diff %>%
ggplot(aes(y= rate_loss, x = filter)) + 
    geom_boxplot() +
  geom_jitter() +
  ggtitle("Visualizing comparison for paired t-test on the rate_loss")
```

Pond water with microbes has a significantly greater loss of Bd between day 1 to day 7 than pond water without microbes (t = 4.8, df = 14, p = 0.000289). The t-value is positive, which shows that the first item entered (with microbes) has a larger loss of Bd than the second item entered (no microbes.) Df of 14 is expected, because it's 15 sites.

Stats

```{r}
# Step 3: run the paired t-test on the difference
t.test(partI_total_diff_40um$rate_loss, partI_total_diff.22um$rate_loss, paired = TRUE)
```

# 3A: Effect of the East Bay aquatic environmental biofilm on Bd growth - "9 sites"

Statistical question: Is there a difference in Bd quantity in the biofilm between day 1 & 7?

## 3A Data Wrangling

```{r}
part_two <- ns_biofilm_bd

#---- Part II
# set as factors with levels so they appear in order in plots later
part_two$site <- factor(part_two$site,
                                levels = c("CABIN", "GRAMPS", "WEST", "GDPND005", "GDPND006", "GDPND009", "PRPND004", "PRPND009", "PRPND010"))
part_two$bd_location <- factor(part_two$bd_location, levels = c("supernatant", "biofilm"))
part_two$day <- factor(part_two$day, levels = c("Day_0", "Day_1", "Day_7"))

# Biofilm only, no supernatant, and days 1 and 7 only, no day 0
part_two_bf_only <- part_two %>% 
  filter(bd_location == "biofilm") %>% 
  filter(day != "Day_0") %>% 
  #log bd qty
  mutate(log_qty = log(bd_qty))
  
```

## PII Data Visualization

### Renwei barplot

```{r}
part_two %>%
ggplot(aes(y= bd_qty, x = site, fill=bd_location)) + 
    geom_col() +
    facet_grid(.~day)+
  theme_classic()+
  scale_fill_manual(values = c("lightgrey", "gray45" )) +
    theme(axis.text.x = element_text(angle = 90),
          legend.position = "bottom") + 
    scale_y_log10() +
    xlab("Site") +
   ylab("Total Bd Quantity Per Well \n (zoospore equivalents)") 
```

### Boxplot

```{r}
part2 <- part_two_bf_only %>%
ggplot(aes(y= bd_qty, x = day)) + 
    geom_boxplot(fill = no_microbes_.22_color) +
    geom_point(alpha = 0.3) +
    theme_classic() +
  scale_y_log10() +
   theme(legend.position = "none",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) + 
    xlab("Time (days)") +
    ylab("Bd Quantity \n (zoospore equivalents)") +
  scale_x_discrete (labels= c("Day_1" = "Day 1", "Day_7" = "Day 7"))

# Let's add significance letters
significance_data <- tibble(
 day = factor(c("Day_1", "Day_7"), levels = c("Day_1", "Day_7")),
  y_position = c(1.6e+05, 1.4e+04),  # Adjust this depending on your plot's scale
  label = c("a", "b"))

part2 + 
geom_text(data = significance_data, aes(x = day, y = y_position, label = label),
            position = position_dodge(width = 0.75), vjust = 0) 

```

## PII Assumptions testing and Stats

Question:

Does the amount of Bd in the biofilm differ between day 1 and day 7?

The samples are essentially paired by site, so a paired t-test is most appropriate

$H0:Î¼_{difference in Bd}=0$

Assumptions:

Assumes that the observations from each group represent a random sample from the population. Assumes that the difference of the two observations follow a normal distribution.

Check assumptions

```{r}
# check normality of the differences across groups let's try untransformed
part_two_bf_only %>% 
 ggqqplot("bd_qty", title = "Untransformed Bd loads") +
  facet_wrap(~day) # gotta transform the data, day 1 is not normal

part_two_bf_only %>% 
  ggqqplot("log_qty", title = "Transformed Bd loads") +
  facet_wrap(~day) # not perfect but close, let's try shapiro tests

# Shapiro tests
day_one <- part_two_bf_only %>% 
  filter(day == "Day_1") %>% # filter to only include day 1
  pull(log_qty)

shapiro.test(day_one) # p >> 0.05, it's normal!

day_seven <- part_two_bf_only %>% 
  filter(day == "Day_7") %>% # filter to only include day 1
  pull(log_qty)

shapiro.test(day_seven) # p >> 0.05, it's normal!

# Histograms for funsies
part_two_bf_only %>% 
ggplot(aes(x = log_qty)) + # x-axis
  geom_histogram(bins = 4) + # make a histogram
  facet_wrap(~ day, # make multiple panels by day
             scales = "free") # let the axes vary between panels
```

Stats

```{r}
# Step 3: run the paired t-test
t.test(day_one, day_seven, paired = TRUE)
```

**There is significantly more Bd in the biofilm on Day 1 than on Day 7 (t = 10.094, df = 8, p-value \< 0.0001)**

# 4A: Effect of microbes in pond water on the Bd-release from mono-strain Bd biofilm - "9 sites" and included biofilm

Scientific Q: Is mono-strain Bd biofilm resistant to microbes in pond water

Statistical question:

Is there a difference in the **gain or loss of ADHERENT Bd over 6 days** between the **filter sizes**?

**There is a significant difference in the change in the quantity of adherent Bd from Day 1 to Day 7 across the filter types (t = -6.45, df = 7, p-value = 0.0003)**

## PIII Data Wrangling

```{r}
eb_monolayer <- ns_ml_pw_bd %>% 
  filter(site != "MQ") %>% # remove control
  filter(bd_location == "adherent") # only want adherent Bd data

# keep control for labeling plot
eb_ml_controls <- ns_ml_pw_bd %>% 
  filter(site =="MQ") %>% # controls only
  filter(bd_location == "adherent") # only want adherent Bd data

# Data type cleaning
eb_monolayer$site <- factor(eb_monolayer$site,
                                levels = c("CABIN", "GRAMPS", "WEST", "GDPND005", "GDPND006", "GDPND009", "PRPND004", "PRPND009", "PRPND010"))
eb_monolayer$bd_location <- factor(eb_monolayer$bd_location, levels = c("supernatant", "adherent"))
eb_monolayer$day <- factor(eb_monolayer$day, levels = c("Day_1", "Day_7")) 

# get the total difference across days by combining both locations of Bd then subtracting across days
eb_monolayer_diff <- eb_monolayer %>%
  # pivot so each day has its own column
  pivot_wider(names_from = day, values_from = bd_qty) %>%
  # calculate the rate loss by taking the log of each before subtracting
  mutate(rate_loss = log(Day_1) - log(Day_7))

# Step 2: create subsets for each treatment
eb_monolayer_diff_40um <- eb_monolayer_diff %>% 
  filter(filter =="40um_filter")
eb_monolayer_diff.22um <- eb_monolayer_diff %>% 
  filter(filter =="0.22um_filter")

```

## PIII Data visualization

### Renwei barplot

```{r}
eb_monolayer %>%
ggplot(aes(y= bd_qty, x = site, fill = filter)) + 
    geom_col(position = position_dodge()) +
  scale_y_log10() +
    facet_wrap(~day)+
  scale_fill_manual(values = c("40um_filter" = with_microbes_40_color, 
                                "0.22um_filter" = no_microbes_.22_color)) +
    theme_classic() +
   theme(axis.text.x = element_text(angle = 90),
        legend.position = "bottom",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) + 
    xlab("Site") +
    ylab("Bd Quantity \n (zoospore equivalents)") +
  guides(fill=guide_legend(title=""))

```

### Boxplot

```{r}
eb_monolayer %>%

  # plot it
  ggplot(aes(y= bd_qty, x = filter, fill = filter)) + 
    geom_boxplot() +
  geom_jitter(width = 0.2, alpha = 0.3) +
    scale_y_log10() +
    facet_wrap(~day, labeller = labeller(day = c("Day_1" = "Day 1",
                                                    "Day_7" = "Day 7")))+
  scale_fill_manual(values = c("40um_filter" = with_microbes_40_color, 
                                "0.22um_filter" = no_microbes_.22_color)) +
    theme_classic() +
   theme(legend.position = "none",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) + 
  scale_x_discrete (labels= c("40um_filter" = "With Microbes", "0.22um_filter" = "No Microbes")) +
    xlab("Presence of Microbes in Pond Water Added to Monolayer Biofilm") +
    ylab("Bd Quantity \n (zoospore equivalents)") +

 # add controls ad x's
geom_point(data = eb_ml_controls, aes(x = filter, y = bd_qty), shape = 4, size = 2)

```

## PIII Stats and assumption testing

Question:

Does the difference in Bd from day 1 to day 7 differ between the two filter types?

The samples are essentially paired by site, so a paired t-test is most appropriate

$H0:Î¼_{difference in Bd}=0$

Assumptions:

Assumes that the observations from each group represent a random sample from the population. Assumes that the difference of the two observations follow a normal distribution.

### Test: Paired t-test on the difference in total Bd between day 1 and 7

```{r}
# check normality of the differences across groups
# With microbes (40 um)
eb_monolayer_diff_40um %>% 
 ggqqplot("rate_loss", title = "40um") # normal
shapiro.test(eb_monolayer_diff_40um$rate_loss) # normal, yay!
hist(eb_monolayer_diff_40um$rate_loss) # looks good

# Without microbes (0.22 um)
eb_monolayer_diff.22um%>% 
 ggqqplot("rate_loss", title = "0.22um") # looks good
shapiro.test(eb_monolayer_diff.22um$rate_loss) # normal, yay!
hist(eb_monolayer_diff$rate_loss) # looks good

# visualize the comparison I am making
eb_monolayer_diff %>%
ggplot(aes(y= rate_loss, x = filter)) + 
    geom_boxplot() +
  geom_jitter() +
  ggtitle("Visualizing comparison for paired t-test on the rate_loss")
```

Stats:

```{r}
# Step 3: run the paired t-test on the difference
t.test(eb_monolayer_diff_40um$rate_loss, eb_monolayer_diff.22um$rate_loss, paired = TRUE)
```

### Stats results:

When monolayer Bd biofilm is exposed to pond water without microbes has a significantly greater loss of Bd between day 1 to day 7 than pond water with microbes (t = -5.4, df = 8, p = 0.0006772). The t-value is negative, which shows that the first item entered (with microbes) has a smaller loss of Bd than the second item entered (no microbes).

## Second stats Q: qty \~ factor(day) + microbe_treatment, random = \~1\|factor(site)

Question: does the quantity of Bd differ across days and treatment while controlling for the paired site?

This will be a lme since it is a mixed effects model!

Data wrangling

```{r}
eb_monolayer <- eb_monolayer %>% 
  mutate(log_bd = log(bd_qty))

# Exploration: normality of transformed data
eb_monolayer %>% 
 ggqqplot("log_bd") # gorgeous

```

Assumptions testing

```{r}
par(mfrow = c(2,2))
# build model
mod6 <- lme(log_bd~day*factor(filter), random = ~1|site, data=eb_monolayer)
# model assumptions
plot(mod6) # passes homogeneity of variances
qqPlot(resid(mod6), main="QQ Plot of Residuals") # passes normality of resids
```

Interpret

```{r}
summary(mod6)
anova(mod6)

emmeans::emmeans(mod6, pairwise ~ day * filter) # pairwise comparisons
```


# Add in NCOS now

# Data reformatting and cleaning

```{r}
## 2B
pw <- fig_2b_raw %>% 
  # add column for microbes or no
  mutate(microbes = case_when(
    str_detect(sample_ID, "\\+microorganism") ~ "y",
    TRUE ~ "n"
  )) %>% 
  # # add column for water_treatment
  mutate(water_treatment = case_when(
    sample_ID %in% c("1%TB", "MQ", "Added Bd") ~ "sterile-water",
    sample_ID %in% c("1%TB+PW+microorganism", "PW+microorganism") ~ "PW+MO",
    sample_ID %in% c("1%TB+PW-microorganism", "PW-microorganism") ~ "PW-MO"
  )) %>% 
  # add column for TB or no
  mutate(TB = case_when(
    str_detect(sample_ID, "TB") ~ "y",
    TRUE ~ "n"
  ))

pw_summary <- pw %>% 
  group_by(day, sample_ID) %>% 
  reframe(mean = mean(adh_plus_sup), # calculate the mean
            n = length(adh_plus_sup), # count the number of observations
            df = n - 1, # calculate the degrees of freedom
            sd = sd(adh_plus_sup), # calculate the standard deviation
            se = sd/sqrt(n), # calculate the standard error
          ) %>% 
  mutate(microbes = case_when(
    str_detect(sample_ID, "\\+microorganism") ~ "y",TRUE ~ "n")) %>% 
  # add column for TB or no
  mutate(TB = case_when(str_detect(sample_ID, "TB") ~ "y", TRUE ~ "n")) %>% 
  # add column for PW or no
   mutate(water_treatment = case_when(
    sample_ID %in% c("1%TB", "MQ", "Added Bd") ~ "sterile-water",
    sample_ID %in% c("1%TB+PW+microorganism", "PW+microorganism") ~ "PW+MO",
    sample_ID %in% c("1%TB+PW-microorganism", "PW-microorganism") ~ "PW-MO"
  ))


## aquatic environmental biofilm (4b but I think its supposed to be 3b)
# add column for microbes or no
ae <- fig_3b_raw %>% 
  rename(sample_ID = Adherent.sample.ID) %>% 
  
  # add columns for components y/n
  # add column for TB or no
  mutate(TB = case_when(
    str_detect(sample_ID, "TB") ~ "y",
    TRUE ~ "n"
  )) %>% 
  # add column for PW or no
  mutate(PW = case_when(
    str_detect(sample_ID, "PW") ~ "y",
    TRUE ~ "n"
  ))

## Monolayer (3b but I think its supposed tobe 4b)
# add column for microbes or no
monolayer <- fig_4b_raw %>% 
  rename(sample_ID = sample.ID) %>% 
  rename(adh_plus_sup = ahd_plus_sup) %>% 
  # rename sample_id to only include treatment, not day
  mutate(sample_ID = str_replace(sample_ID, "-D[0-9]+$", "")) %>% 

  # add columns for components y/n
  mutate(microbes = case_when(
    str_detect(sample_ID, "\\+microbes") ~ "y",
    TRUE ~ "n"
  )) %>% 
  # add column for TB or no
  mutate(TB = case_when(
    str_detect(sample_ID, "TB") ~ "y",
    TRUE ~ "n"
  )) %>% 
  # add column for PW or no
  mutate(PW = case_when(
    str_detect(sample_ID, "PW") ~ "y",
    TRUE ~ "n"
  ))
```

For stats: no "day 0" and relevel factors

```{r}
##### 2b #####
pw_noday0 <- pw %>%
  filter(day != 0) %>%
  mutate(log_adh_plus_sup = log(adh_plus_sup)) # note: no zeroes so not log + 1

# quick check: we want day as a FACTOR
pw_noday0 <- pw_noday0 %>% 
  mutate(day = as.factor(day))
str(pw_noday0$day)

# set MQ as reference
pw_noday0$sample_ID <- factor(pw_noday0$sample_ID)
pw_noday0$sample_ID <- relevel(pw_noday0$sample_ID, ref = "MQ")

# set sterile water as reference
pw_noday0$water_treatment <- factor(pw_noday0$water_treatment)
pw_noday0$water_treatment <- relevel(pw_noday0$water_treatment, ref = "sterile-water")

# set no TB as reference
pw_noday0$TB <- factor(pw_noday0$TB)
pw_noday0$TB <- relevel(pw_noday0$TB, ref = "n")

# set no microbes as reference
pw_noday0$microbes <- factor(pw_noday0$microbes)
pw_noday0$microbes <- relevel(pw_noday0$microbes, ref = "n")
```

# 2b: Pond water

## Renwei's figure

![](data/fig_2b_Renweiexcelversion.jpg){fig-align="left" width="4in"}

```{r}
#| include: false
#| message: false

### gut check: ggplot version: replicating Renwei's
pw_summary %>% 
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID, 
                            levels = c("1%TB", "MQ", "1%TB+PW+microorganism", "PW+microorganism", "1%TB+PW-microorganism", "PW-microorganism", "Added Bd")),
         # Create a new column to identify 'initial Bd'
         is_initial_Bd = ifelse(day == 0, "initial Bd", "other")) %>%
  
  ggplot(aes(x = day, 
           y = mean, 
           color = sample_ID)) +
  geom_point(aes(shape = is_initial_Bd), size = 2, show.legend = FALSE) + # Use shape without adding to the legend
  geom_errorbar(aes(ymin = mean - se, # plot the standard error
                    ymax = mean + se),
                width = 0.1) +
  geom_line(aes(linetype = microbes)) + 
  scale_y_log10(limits = c(1e3, 1e8), 
                breaks = c(1e3, 1e4, 1e5, 1e6, 1e7, 1e8)) +
  # vibes
  labs(x = "Day",
       y = "Bd Quantity per sample (ZE/well)",
       title = "Sanity check: Replicating Renwei version exactly",
       caption = "supernatant plus adherent visualized here") +
  scale_color_manual(values = c("1%TB" = "goldenrod", 
                                "MQ" = "blue", 
                                "1%TB+PW+microorganism" = "darkolivegreen3", 
                                "PW+microorganism" = "magenta", 
                                "1%TB+PW-microorganism" = "palegreen4", 
                                "PW-microorganism" = "palevioletred1",
                                "Added Bd" = "darkgrey")) + # Assign specific colors to match RC's plot
  scale_linetype_manual(values = c("n" = "dashed", 
                                   "y" = "solid")) +
  scale_shape_manual(values = c("initial Bd" = 4, "other" = 16)) + # Assign 'X' shape to initial Bd
  theme_minimal() +
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7),
                     labels = c("initial Bd", "1", "3", "5", "7"))

```

## Caitlin's version

```{r}
#| message: false
#| warning: false
#| output: false

fig_2b <- pw_summary %>% 
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID, 
                            levels = c("1%TB", "MQ", "1%TB+PW+microorganism", "PW+microorganism", "1%TB+PW-microorganism", "PW-microorganism", "Added Bd"))) %>% 

  ggplot(aes(x = day, 
           y = mean, 
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean - se, # plot the standard error
                    ymax = mean + se),
                width = 0.1) +
  scale_y_log10(limits = c(1e3, 1e8), 
                breaks = c(1e3, 1e4, 1e5, 1e6, 1e7, 1e8)) +
  # vibes
 # vibes
  labs(x = "Day",
       y = "Bd Quantity per sample (ZE/well)",
       color = "Medium",       # Title for color legend
       linetype = "Microbes Present"  # Title for linetype legend
       ) +
  scale_color_manual(values = c("1%TB" = "#CCBB44", 
                                "MQ" = "#228833", 
                                "1%TB+PW+microorganism" = "#4477AA", 
                                "PW+microorganism" = "#EE6677", 
                                "1%TB+PW-microorganism" = "#66CCEE",
                                #"Added Bd" = "#BBBBBB" # removed bc not really a medium
                                "PW-microorganism" = "#AA3377"),  # Assign specific colors to match RC's plot
                    labels = c("1%TB" = "TB",
                                "MQ" = "MQ",
                                "1%TB+PW+microorganism" = "TB + PW + MO",
                                "PW+microorganism" = "PW + MO",
                                "1%TB+PW-microorganism" = "TB + PW - MO",
                                "PW-microorganism" = "PW - MO",
                                "Added Bd" = "Initial Bd")) + # Custom labels for the color legend
    geom_line(aes(linetype = microbes)) + 
  scale_linetype_manual(values = c("n" = "dashed", 
                                   "y" = "solid"),
                        labels = c("n" = "N", "y" = "Y")) +  # Change labels to uppercase N and Y
 myCustomTheme()+
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7),
                   labels = c("Initial\nBd", "1", "3", "5", "7"))
  theme(legend.position = "right") # Adjust the legend position to overlap with the plot

```

## 2b EDA

visualize y var: bd load

log transformed will get me closer to normal, note we only need to worry about the residuals normality though, so commented out the transformation of the data for space

```{r}
# untransformed
ggqqplot(pw_noday0, "adh_plus_sup", title = "untransformed")
shapiro.test(pw_noday0$adh_plus_sup) # nope
hist(pw_noday0$adh_plus_sup) # note

hist(sqrt(pw_noday0$adh_plus_sup)) # nope
hist(log10(pw_noday0$adh_plus_sup)) # much better...?
shapiro.test(log10(pw_noday0$adh_plus_sup)) # not quite

# transformed
ggqqplot(pw_noday0, "log_adh_plus_sup", title = "log transformed") # gorgeous
hist(pw_noday0$log_adh_plus_sup) # better
shapiro.test(pw_noday0$log_adh_plus_sup) # p-value = 0.01361, does not pass shapiro, but this has an n of 72 which is more than the recommended <50 samples

# visualize comparisons
# TB y or n
pw_noday0 %>% 
    ggplot(aes(x = TB, 
           y = log_adh_plus_sup)) +
  geom_boxplot()
# water_treat
pw_noday0 %>% 
    ggplot(aes(x = water_treatment, 
           y = log_adh_plus_sup)) +
  geom_boxplot()
# day
pw_noday0 %>% 
    ggplot(aes(x = day, 
           y = log_adh_plus_sup)) +
  geom_boxplot()

```

## 2b Stats

Most appropriate comaprison for study design: day*microbes*water_treatment

-   y variable: amount of Bd

-   x vars: day, TB y/n, water_treatment (pw with microbes, pw without, sterile water)

Question: Does the amount of Bd in the sample differ across the treatments of presence of water type (pw with microbes, pw without, sterile water), TB, and day?

Model: Linear model

Note: anovas, lm's and glm's are all linear models!

## null

```{r}
null <- lm(log_adh_plus_sup ~ 1,
  data = pw_noday0)
AIC(null) #326.4356

```

## Try ANOVA with interactions: Bd \~ day\*TB\*water_treatment

**important: does not pass anova assumption that resids are normally distributed**

I tried different transformations with no luck either :(

Note: Kruskall wallace isn't the best move here because I want interactions, if I cut the interactions, a normal anova works, so no need for a KW

```{r}
# build model
# all interactions
mod3 <- aov(log_adh_plus_sup ~ day*TB*water_treatment,
  data = pw_noday0)

# diagnostic plot
par(mfrow = c(2,2))
plot(mod3) # NOT normal...

# STOP: not normally distributed resids so can't interpret
```

## GLM Bd \~ day\*TB\*water_treatment

Normal distribution GLM

**Results**

1.  Day : Day 3 \> Day 1 = Day 5 \> Day 7

2.  TB: With TB = more Bd than no TB (p \<.0001)

3.  Water treatment: any treatment with MO has lower Bd, sterile water and microbe free pond water are the same (p = 0.0629), pond water with microorganisms has less Bd than sterile water (p \< 0.001), and pond water with MO has less Bd than pond water without (p \< 0.001)

4.  Interactions are all significant, except TB:water_treatment. I recommend putting these in a table, rather than listing them here, but 5 & 6 summarize them

5.  Day and presence of TB: After day 1, there was less Bd in treatments without TB, but on day 1, there was no difference

6.  Day and water treatment: across all days, the water treatment trend holds that presence of MO will have lower Bd than without. However, there are nuances between the sterile water and the filtered pond water.

    1.  on days 5&7 sterile water had more Bd than pond water without microbes, but on day 1, sterile water had more Bd than pond water with no microbes, but on day 3, there was no difference.

```{r}
# normal distribution, should be relatively the same as the anova
mod3_glm <- glm(log_adh_plus_sup ~ day * TB * water_treatment,
                data = pw_noday0,
                family = gaussian(link = "identity"))

par(mfrow = c(2,2))
plot(mod3_glm) # better...!

summary(mod3_glm)
anova(mod3_glm, test="F") # all interactions are sig except TB:water_treatment
# source for use of anova function on a glm: https://dshizuka.github.io/RCourse/05.1.Stats_LinearModels.html#:~:text=Since%20ANOVA%20is%20a%20linear,to%20get%20the%20F%20statistic.

# all comparisons
em <- emmeans(mod3_glm, ~ day * TB * water_treatment)
# Perform the Tukey test for pairwise comparisons
pairwise_comparisons <- contrast(em, method = "pairwise", adjust = "tukey")
summary(pairwise_comparisons)

## First order comparisons

# Pairwise comparisons for 'day'
# Day 3 > Day 1 = Day 5 > Day 7
pairwise_day <- emmeans(mod3_glm, pairwise ~ day, adjust = "tukey")
pairwise_day
plot(pairwise_day)

# Pairwise comparisons for 'TB'
pairwise_TB <- emmeans(mod3_glm, pairwise ~ TB, adjust = "tukey")
pairwise_TB
plot(pairwise_TB)

# Pairwise comparisons for 'water_treatment'
pairwise_water_treatment <- emmeans(mod3_glm, pairwise ~ water_treatment, adjust = "tukey")
pairwise_water_treatment
plot(pairwise_water_treatment)

## second order comparisons

# day:TB
pairwise_day_TB <- emmeans(mod3_glm, pairwise ~ TB | day, adjust = "tukey")
pairwise_day_TB
plot(pairwise_day_TB)

# day:water_treatment
pairwise_water_treatment_day <- emmeans(mod3_glm, pairwise ~ water_treatment | day, adjust = "tukey")
pairwise_water_treatment_day
plot(pairwise_water_treatment_day)

```

# 3b Aquatic environmental biofilm on Bd growth:

All microbe-depleted, NO pw microbe+ treatment

### Renwei's figure

![](data/3bRenwei.jpg){width="4in"}

### ggplot version: replicating Renwei's AE

```{r}
ae_summary <- ae %>%
  group_by(day, sample_ID) %>%
  reframe(mean = mean(adh), # calculate the mean
            n = length(adh), # count the number of observations
            df = n - 1, # calculate the degrees of freedom
            sd = sd(adh), # calculate the standard deviation
            se = sd/sqrt(n), # calculate the standard error
          ) %>%
  # add column for TB or no
  mutate(TB = case_when(str_detect(sample_ID, "TB") ~ "y", TRUE ~ "n")) %>%
  # add column for PW or no
  mutate(PW = case_when(str_detect(sample_ID, "PW") ~ "y", TRUE ~ "n"))

ae_summary %>%
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID,
                            levels = c("1%TB+AEbiofilm", "MQ+AEbiofilm",
                                       "PW+AEBiofilm",   "Added Bd"  ))) %>%

  ggplot(aes(x = day,
           y = mean,
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean - se, # plot the standard error
                    ymax = mean + se),
                width = 0.1) +
  geom_line() + 
  scale_y_log10(limits = c(1e3, 1e7),
                breaks = c(1e3, 1e4, 1e5, 1e6, 1e7)) +
  # vibes
  labs(x = "Day",
       y = "Bd Quantity per sample (ZE/well)",
       title = "Environmental Biofilm",
       caption = "only adherent Bd visualized here (the only data we have)") +
  scale_color_manual(values = c("1%TB+AEbiofilm"= "orange",
                                "MQ+AEbiofilm" = "blue",
                                "PW+AEBiofilm" = "magenta",
                                "Added Bd" = "darkgrey")) + # Assign specific colors to match RC's plot
  theme_minimal() +
  theme(
    panel.grid.major.x = element_blank(), # Remove major vertical grid lines
    panel.grid.minor.x = element_blank()) + # Remove minor vertical grid lines
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7))
```

### Caitlin's version AE

```{r}
ae_summary <- ae %>%
  group_by(day, sample_ID) %>%
  reframe(mean = mean(adh), # calculate the mean
            n = length(adh), # count the number of observations
            df = n - 1, # calculate the degrees of freedom
            sd = sd(adh), # calculate the standard deviation
            se = sd/sqrt(n), # calculate the standard error
          ) %>%
  # add column for TB or no
  mutate(TB = case_when(str_detect(sample_ID, "TB") ~ "y", TRUE ~ "n")) %>%
  # add column for PW or no
  mutate(PW = case_when(str_detect(sample_ID, "PW") ~ "y", TRUE ~ "n"))

ae_summary %>%
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID,
                            levels = c("1%TB+AEbiofilm", "MQ+AEbiofilm",
                                       "PW+AEBiofilm",   "Added Bd"  ))) %>%

  ggplot(aes(x = day,
           y = mean,
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean - se, # plot the standard error
                    ymax = mean + se),
                width = 0.1) +
  geom_line() + 
  scale_y_log10(limits = c(1e3, 1e7),
                breaks = c(1e3, 1e4, 1e5, 1e6, 1e7)) +
  # vibes
  labs(x = "Day",
       y = "Bd Quantity in AE Biofilm (ZE/well)",
        color = "Medium with\nAE Biofilm")+ # Title for color legend
  
  scale_color_manual(values = c("1%TB+AEbiofilm"= "#4477AA",
                                "MQ+AEbiofilm" = "#228833",
                                #"Added Bd" = "darkgrey",
                                "PW+AEBiofilm" = "#AA3377"),
                    labels = c("1%TB+AEbiofilm" = "TB Broth",
                               "MQ+AEbiofilm" = "MQ Water",
                               "PW+AEBiofilm" = "Filtered\nPond Water",
                                "Added Bd" = "Initial Bd")) + # Custom labels

 myCustomTheme()+
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7),
                   labels = c("Initial\nBd", "1", "3", "5", "7"))
```

## 3b EDA

### visualize y var: bd load

```{r}
# untransformed
ae_noday0 <- ae %>% 
  filter(day != 0) %>% 
  mutate(log_adh = log(adh)) # note: no zeroes so not log + 1
ggqqplot(ae_noday0, "adh", title = "untransformed")
shapiro.test(ae_noday0$adh) # nope
hist(ae_noday0$adh) # note

# transformed
ggqqplot(ae_noday0, "log_adh", title = "log transformed") # gorgeous
hist(ae_noday0$log_adh) # better
shapiro.test(ae_noday0$log_adh) # p-value = 0.1699 def normal
```

## 3b Stats

Keep interaction, skedasticity isn't "too bad", and will show underlying data in plot to be super transparent

y var: amount of Bd in adherent

x vars: day & medium with the AE biofilm and Bd (MQ, TB, PW)

Bd \~ day\*medium

Question: Does the amount of Bd in the aquatic environmental biofilm differ across the media tested and across the days, and do they interact with each other?

Model: 2-way ANOVA

**Summary of results**

Bd qty Day 1 \> Day 3 \> Day 5 \> Day 7 (all p \<0.005) in other words, Bd significantly reduced each day

MQ+AEbiofilm \> PW+AEBiofilm \> 1%TB+AEbiofilm (all p \<0.005) In other words, TB plus biofilm has most Bd inhibition power, followed by pond water, then by milliQ with the least inhibition power

```{r}
# quick check: we want day as a FACTOR
ae_noday0 <- ae_noday0 %>% 
  mutate(day = as.factor(day)) %>% 
# column for medium
mutate(medium = sample_ID)
str(ae_noday0$day)


# set MQ as reference
ae_noday0$sample_ID <- factor(ae_noday0$sample_ID)
ae_noday0$sample_ID <- relevel(ae_noday0$sample_ID, ref = "MQ+AEbiofilm")
```

## null

```{r}
null <- lm(log_adh ~ 1,
  data = ae_noday0)
AIC(null) #146.5865
```

## Bd \~ day\*medium

Note: Not perfectly homoskedstic but "good enough"

```{r}
# build model
mod1 <- aov(log_adh ~ day*medium,
  data = ae_noday0)

# diagnostic plot
par(mfrow = c(2,2))
plot(mod1) # kinda not homoskedastic

# look at results
summary(mod1)
anova(mod1) # all significant and interaction sig
AIC(mod1) # 37.78083 better than null

TukeyHSD(mod1) # all days sig diff from each other, all media sig diff from each other, second order is a bit messy
```

# 4b Monolayer biofilm on Bd growth:

Note: only the ADHERENT Bd here!

### Renwei's figure

![](data/4b_monolayer.jpg){width="4in"}

### ggplot version: replicating Renwei's ML

```{r}
monolayer_summary <- monolayer %>% 
  group_by(day, sample_ID) %>% 
  reframe(mean = mean(adh), # calculate the mean
            n = length(adh), # count the number of observations
            df = n - 1, # calculate the degrees of freedom
            sd = sd(adh), # calculate the standard deviation
            se = sd/sqrt(n), # calculate the standard error
          ) %>% 
  mutate(microbes = case_when(
    str_detect(sample_ID, "\\+microbes") ~ "y",TRUE ~ "n")) %>% 
  # add column for TB or no
  mutate(TB = case_when(str_detect(sample_ID, "TB") ~ "y", TRUE ~ "n")) %>% 
  # add column for PW or no
  mutate(PW = case_when(str_detect(sample_ID, "PW") ~ "y", TRUE ~ "n")) 

monolayer_summary %>% 
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID, 
                            levels = c("TB+PW+microbes","PW+microbes",
                                        "TB+PW-microbes", "PW-microbes"))) %>% 
  ggplot(aes(x = day, 
           y = mean, 
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean - se, # plot the standard error
                    ymax = mean + se),
                width = 0.1) +
    geom_line(aes(linetype = microbes)) + 
  scale_y_log10(limits = c(1e4, 1e8), 
                breaks = c(1e4, 1e5, 1e6, 1e7, 1e8)) +
  # vibes
  labs(x = "Day",
       y = "Bd Quantity per sample (ZE/well)",
       title = "Monolayer",
       caption = "supernatant plus adherent visualized here") +
  scale_color_manual(values = c("TB+PW+microbes" = "palegreen4", 
                                "PW+microbes" = "magenta", 
                                "TB+PW-microbes" = "chocolate4", 
                                "PW-microbes" = "purple")) + # Assign specific colors to match RC's plot
  scale_linetype_manual(values = c("n" = "dashed", 
                                   "y" = "solid")) +
  theme_minimal() +
  theme(
    panel.grid.major.x = element_blank(), # Remove major vertical grid lines
    panel.grid.minor.x = element_blank()) + # Remove minor vertical grid lines
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7))
```

## Caitlin's version ML

```{r}
monolayer_summary <- monolayer %>% 
  group_by(day, sample_ID) %>% 
  reframe(mean = mean(adh), # calculate the mean
            n = length(adh), # count the number of observations
            df = n - 1, # calculate the degrees of freedom
            sd = sd(adh), # calculate the standard deviation
            se = sd/sqrt(n), # calculate the standard error
          ) %>% 
  mutate(microbes = case_when(
    str_detect(sample_ID, "\\+microbes") ~ "y",TRUE ~ "n")) %>% 
  # add column for TB or no
  mutate(TB = case_when(str_detect(sample_ID, "TB") ~ "y", TRUE ~ "n")) %>% 
  # add column for PW or no
  mutate(PW = case_when(str_detect(sample_ID, "PW") ~ "y", TRUE ~ "n")) 

monolayer_summary %>% 
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID, 
                            levels = c("TB+PW+microbes","PW+microbes",
                                        "TB+PW-microbes", "PW-microbes"))) %>% 
  ggplot(aes(x = day, 
           y = mean, 
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean - se, # plot the standard error
                    ymax = mean + se),
                width = 0.1) +
    geom_line(aes(linetype = microbes)) + 
  scale_y_log10(limits = c(1e4, 1e8), 
                breaks = c(1e4, 1e5, 1e6, 1e7, 1e8)) +
  
  # vibes
  labs(x = "Day",
       y = "Bd in mono-Bd biofilm (ZE/well)",
       color = "Medium",       # Title for color legend
       linetype = "Microbes Present") +
  scale_color_manual(values = c("TB+PW+microbes" = "#4477AA", 
                                "PW+microbes" = "#EE6677", 
                                "TB+PW-microbes" = "#66CCEE", 
                                "PW-microbes" = "#AA3377"), 
                    
                     labels = c("TB+PW+microbes" = "TB + PW + MO",
                               "PW+microbes" = "PW + MO",
                               "TB+PW-microbes" = "TB + PW - MO",
                                "PW-microbes" = "PW - MO")) + # Custom labels
 myCustomTheme()+
 scale_linetype_manual(values = c("n" = "dashed", 
                                   "y" = "solid"),
                        labels = c("n" = "N", "y" = "Y")) +  # Change labels to uppercase N and Y
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7),
                   labels = c("Initial\nBd", "1", "3", "5", "7"))
```

## 4b EDA

### visualize y var: bd load

Commented out to save space, log transformed is better

```{r}
# # untransformed
# ml_noday0 <- monolayer %>%
#   filter(day != 0) %>%
#   mutate(log_adh = log(adh)) # note: no zeroes so not log + 1
# ggqqplot(ml_noday0, "adh", title = "untransformed")
# shapiro.test(ml_noday0$adh) # nope
# hist(ml_noday0$adh) # note
# 
# # transformed
# ggqqplot(ml_noday0, "log_adh", title = "log transformed") # gorgeous
# hist(ml_noday0$log_adh) # better
```

## 4b Stats

y var: amount of Bd

x vars: day, treatment, microbes y/n, pw y/n, tb y/n

Best model: Bd \~ day\*microbes\*TB

Question: Does the amount of Bd in the sample differ across the treatments of presence of microbes, TB, and day?

Model: 3-way ANOVA

**results**

Results summary

-   day (p\<0.05)

    -   All differ from each other except 5 and 7 (Tukey)

        -   Day 1 \> Day 3 \> Day 5 = Day 7

-   microbes (p\<0.05)

    -   presence microbes has less Bd (Tukey)

-   TB (NOT SIG)

-   day:microbes (p\<0.05)

-   day:TB (NOT SIG)

-   microbes:TB (p\<0.05)

-   day:microbes:TB (NOT SIG)

```{r}
ml_noday0 <- monolayer %>%
  filter(day != 0) %>%
  mutate(log_adh = log(adh))

# quick check: we want day as a FACTOR
ml_noday0 <- ml_noday0 %>% 
  mutate(day = as.factor(day))
str(ml_noday0$day)

# set PW-microbes as reference (no milliQ here)
ml_noday0$sample_ID <- factor(ml_noday0$sample_ID)
ml_noday0$sample_ID <- relevel(ml_noday0$sample_ID, ref = "PW-microbes")
```

## null

```{r}
null <- lm(log_adh ~ 1,
  data = ml_noday0)
AIC(null) #205.4965

```

## Bd \~ day\*microbes\*TB

```{r}
# build model
mod3 <- aov(log_adh ~ day*microbes*TB,
  data = ml_noday0)

# diagnostic plot
par(mfrow = c(2,2))
plot(mod3) # looks good

# look at results
summary(mod3)
anova(mod3) # day, microbes, are significant, but TB alone is not. Interactions: day:microbes, microbes:TB are significant 
AIC(mod3) # 132.8989 better than null

TukeyHSD(mod3)
```

# COMBINE PW AND AE FOR ALL

## Fig 5 Data wrangling

```{r}
# data wrangling for comparisons across experiments
pw_no_microbes <- partI_total_diff %>% 
  filter(filter == "0.22um_filter") %>% 
  mutate(treatment = "PW 0.22um") %>% 
  rename(sample_ID = site) %>% 
  mutate(rate_loss = log(Day_1) - log(Day_7)) %>% 
  dplyr::select(sample_ID, diff, treatment, rate_loss, Day_1)

## NCOS version fig 2 PW - MO
ncos_pw_no_microbes <- pw_noday0 %>% 
  filter(sample_ID == "PW-microorganism") %>% 
  filter(day != "3" & day != "5") %>%
  dplyr::select(day, sample_ID, replicate, adh_plus_sup) %>% 
  mutate(day = str_replace(as.character(day), "1", "Day_1"),
         day = str_replace(day, "7", "Day_7")) %>% 
 pivot_wider(names_from = day, values_from = adh_plus_sup) %>%
  mutate(diff = Day_1 - Day_7) %>% 
# calculate the rate loss by taking the log of each before subtracting
    mutate(treatment = "NCOS PW 0.22um") %>% 
  mutate(rate_loss = log(Day_1) - log(Day_7)) %>% 
  dplyr::select(sample_ID, diff, treatment, rate_loss, Day_1)

pw_WITH_microbes <- partI_total_diff %>%
  filter(filter != "0.22um_filter") %>% 
  mutate(treatment = "PW 40um") %>% 
  rename(sample_ID = site) %>% 
  dplyr::select(sample_ID, diff, treatment, rate_loss, Day_1)

## NCOS version fig 2 PW + MO
ncos_pw_WITH_microbes <- pw_noday0 %>% 
  filter(sample_ID == "PW+microorganism") %>% 
  filter(day != "3" & day != "5") %>%
  dplyr::select(day, sample_ID, replicate, adh_plus_sup) %>% 
  mutate(day = str_replace(as.character(day), "1", "Day_1"),
         day = str_replace(day, "7", "Day_7")) %>% 
 pivot_wider(names_from = day, values_from = adh_plus_sup) %>%
  mutate(diff = Day_1 - Day_7) %>% 
# calculate the rate loss by taking the log of each before subtracting
    mutate(treatment = "NCOS PW 40 um") %>% 
  mutate(rate_loss = log(Day_1) - log(Day_7)) %>% 
  dplyr::select(sample_ID, diff, treatment, rate_loss, Day_1)

fieldbf_no_microbes <- part_two_bf_only %>%
   subset(select = -c(bd_location, log_qty)) %>% 
  filter(day != "Day_0") %>% 
# calculate the difference in raw amount of Bd
  pivot_wider(names_from = day, values_from = bd_qty) %>%
  mutate(diff = Day_1 - Day_7) %>% 
# calculate the rate loss by taking the log of each before subtracting
  mutate(rate_loss = log(Day_1) - log(Day_7)) %>% 
  mutate(treatment = "Field bf 0.22") %>% 
  mutate(filter = "0.22um_filter") %>% 
  rename(sample_ID = site) %>% 
  dplyr::select(sample_ID, diff, treatment, rate_loss, Day_1)

## NCOS version fig 3B ae bf with no microbes
ncos_ae_no_microbes <- ae_noday0 %>% 
  filter(sample_ID == "PW+AEBiofilm") %>% 
  filter(day != "3" & day != "5") %>%
  dplyr::select(day, sample_ID, replicate, adh) %>% 
  mutate(day = str_replace(as.character(day), "1", "Day_1"),
         day = str_replace(day, "7", "Day_7")) %>% 
 pivot_wider(names_from = day, values_from = adh) %>%
  mutate(diff = Day_1 - Day_7) %>% 
# calculate the rate loss by taking the log of each before subtracting
    mutate(treatment = "NCOS AE 0.22um") %>% 
  mutate(rate_loss = log(Day_1) - log(Day_7)) %>% 
  dplyr::select(sample_ID, diff, treatment, rate_loss, Day_1)
  
all_parts<- bind_rows(pw_WITH_microbes, fieldbf_no_microbes, ncos_pw_WITH_microbes, ncos_ae_no_microbes)

# set PW 40 um as the intercept, comparing back to that one
all_parts$treatment <- factor(all_parts$treatment,
                          levels = c("PW 40um", "NCOS PW 40 um", "Field bf 0.22", "NCOS AE 0.22um")) 
```

## 5A: Biofilm vs pond water with sites combined

t-test

```{r}
# make a column for medium
all_parts <- all_parts %>% 
  mutate(medium = case_when(
    grepl("PW", treatment) ~ "PW",
    grepl("Field bf", treatment) ~ "Field bf",
    grepl("AE", treatment) ~ "Field bf"
  ))

# assumptions testing
leveneTest(rate_loss ~ treatment, data = all_parts)

# assumptions testing
all_parts %>% 
 ggqqplot("rate_loss") # good
shapiro.test(all_parts$rate_loss) # normal, yay!
hist(all_parts$rate_loss)

t.test(rate_loss ~ medium, data = all_parts, var.equal = TRUE)
```

## 5B Stats and assumption testing

Exploratory viz:

```{r}
exploratory_viz <- all_parts %>% 
  ggplot(aes(y= rate_loss, x = treatment)) + 
    geom_boxplot() +
  geom_jitter(alpha = 0.5, width = 0.1) +
    theme_classic() +
   theme(legend.position = "bottom",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) +
    xlab("Treatment") +
    ylab("Rate of Loss of Bd over 7 Days") + 
  ggtitle("Exploratory visualization, not final plot")

exploratory_viz
```

Assumptions testing

```{r}
par(mfrow = c(2,2))
mod3 <- aov(rate_loss~treatment, data=all_parts)
plot(mod3)
```
interpret

```{r}
# with microbe depleted
summary(mod3) # sig effect of treatment
TukeyHSD(mod3)

post_hoc_rateloss <- glht(mod3, # with your ANOVA model
                 linfct = mcp(treatment = "Tukey"))
summary(post_hoc_rateloss)
cld(post_hoc_rateloss) 

# export cld results as a dataframe
cld_results_rateloss <- cld(post_hoc_rateloss)
labels_rl <- cld_results_rateloss$mcletters$Letters
treatments_rl <- names(labels_rl)
labels_rl <- as.character(labels_rl)

sig_data_rl <- tibble(
  treatment = treatments_rl,
  y_position = c(1.5,2.5,6.5,4),
  label = labels_rl)
```

Better vis 

```{r}
all_parts$treatment <- factor(all_parts$treatment) 
  
fig5 <- all_parts %>% 
  mutate(medium = case_when(
    grepl("PW", treatment) ~ "PW",
    grepl("Field bf", treatment) ~ "Field bf",
    grepl("AE", treatment) ~ "Field bf"
  )) %>% 
    mutate(site = case_when(
    grepl("NCOS", treatment) ~ "Santa Barbara",
    TRUE ~ "East Bay"  # Default to "east Bay"
  )) %>% 
   ggplot(aes(y= rate_loss, x = treatment, fill = medium)) +
    geom_boxplot() +
  geom_jitter(alpha = 0.5, width = 0.05) +
    theme_classic() +
  # biofilm and pond water colors, both from paul tol colorblind palette
   scale_fill_manual(values = c("PW" = "white",
                                  "Field bf" = "darkgrey")) +
  facet_wrap(~site, scales = "free_x") +
   theme(legend.position = "none",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) +
  xlab("Medium") +
  ylab("Rate loss of Bd over 6 Days") + 
  scale_x_discrete (drop = TRUE, labels= c("PW 0.22um" = "EB PW - MO",
                              "NCOS PW 0.22um" = "SB PW - MO",
                              "PW 40um" = "EB PW + MO",
                              "NCOS PW 40 um" = "SB PW + MO",
                              "Field bf 0.22" = "EB Biofilm",
                              "NCOS AE 0.22um" = "SB Biofilm"))
sig_data_rl <- sig_data_rl %>% 
    mutate(site = case_when(
    grepl("NCOS", treatment) ~ "Santa Barbara",
    TRUE ~ "East Bay"  # Default to "east Bay"
  ))

fig5 + geom_text(data = sig_data_rl, aes(x = treatment, y = y_position, label = label, group = site), inherit.aes = FALSE) 
```

