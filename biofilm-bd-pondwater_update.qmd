---
title: "Biofilm Bd Update"
author: "Caitlin Nordheim-Maestas"
format: docx
# format:
#   html:
#     embed-resources: true
#     toc: true
#     code-fold: true
#     toc-location: left
---

# Map of experiments

| Nickname                  | Experiment                                                                                                                                      | Bd tested              |
|-------------------|-------------------------------------|-----------------|
| EB Pond water - 2A        | Effect of pond water microbes from the East Bay on Bd                                                                                           | adherent + supernatant |
| SB Pond water - 2B        | Effect of pond water microbes from Santa Barbara on Bd over time, also looking at the addition of a food source (TB)                            | adherent + supernatant |
| EB AE Biofilm - 3A        | Effect of East Bay AE biofilm from the East Bay on Bd (incubated in microbe depleted water to isolate the microbes to only the AE biofiom)      | adherent only          |
| SB AE Biofilm - 3B        | Effect over time of Santa Barbara AE biofilm on Bd, while looking at different incubation media (microbe depleted local pond water, MQ, and TB) | adherent only          |
| EB Monolayer Biofilm- 4A  | Effect of East Bay pond water microbes on a monolayer-Bd biofilm                                                                                | adherent only          |
| SB Monolayer Biofilm - 4B | Effect over time of Santa Barbara Pond water on Bd in a monolayer, while looking at different incubation media (MQ, and TB)                     | adherent only          |

# Load in data and libraries

```{r}
#| warning: false

## read in and clean data
library(tidyverse) # for cleaning and viewing data
library(gt) # pretty stats tables
library(broom) # cleaning for gt
library(here) # for importing data
library(car) # stats tests like Levene's
library(Hmisc) # autocalculate stat summaries in ggplot
library(multcomp) # stats
library(nlme) # mixed effects models
library(emmeans) # for pairwise comparisons, especially on mixed effects models and glms
library(ggpubr) # for making ggqq plot
library(patchwork) # for combining figures

# load "East Bay" experiments data
ns_biofilm_bd <- read.csv(here("data", "nine-sites-biofilm-on-Bd - Sheet1.csv"))
fs_pw_bd <- read.csv(here("data", "fifteen-sites-PW-on-Bd - Sheet1.csv"))
ns_ml_pw_bd <- read.csv(here("data", "nine-sites-PW-on-MLBd - Sheet1.csv"))

fig_2b_raw <- read.csv(here("data", "final_NCOS_2024_reformatted_for_R.xlsx - Fig2B.csv"))
fig_3b_raw <- read.csv(here("data", "final_NCOS_2024_reformatted_for_R.xlsx - Fig3B.csv"))
fig_4b_raw <- read.csv(here("data", "final_NCOS_2024_reformatted_for_R.xlsx - Fig4B.csv"))

# Colors: these are from Paul Tol's colorblind friendly palette
with_microbes_40_color <- "#999933"
no_microbes_.22_color <- "#88ccee"

# set up custom theme
myCustomTheme <- function() {
  theme_light() +
    theme(axis.text = element_text(size = 12, family = "Times", color = "black"),
          axis.title.x = element_text(margin = margin(t = 10), size = 14, face = "bold", family = "Times", color = "black"), # Add space between x-axis label and axis
          axis.title.y = element_text(margin = margin(r = 10), size = 14, face = "bold", family = "Times", color = "black"), # Add space between y-axis label and axis
          title = element_text(size = 12, face = "bold", family = "Times"),
          plot.caption = element_text(size = 10, face = "italic", family = "Times"),
          legend.text = element_text(size = 10, family = "Times"), # Increase legend text size
          panel.grid.major.x = element_blank(), # Remove major vertical grid lines
          panel.grid.minor.x = element_blank(), # Remove minor vertical grid lines
          panel.grid.major.y = element_blank(), # Remove major horizontal grid lines
          panel.grid.minor.y = element_blank(), # Remove minor horizontal grid lines
          strip.text = element_text(size = 12, face = "bold", family = "Times", color = "black"), # Set strip text style
          strip.background = element_rect(fill = "white", color = "grey"), # Set strip background to white, # color = "black"
          axis.ticks = element_blank() # Remove x and y axis ticks
    )}
```

# 3A: Effect of the East Bay aquatic environmental biofilm on Bd growth - "9 sites"

Does the difference in Bd in the adherent AE biofilm from day 1 to day 7 differ between the two filter types?

## 3A Data Wrangling

```{r}
eb_ae <- ns_biofilm_bd

#---- Part II
# set as factors with levels so they appear in order in plots later
eb_ae$site <- factor(eb_ae$site,
                                levels = c("CABIN", "GRAMPS", "WEST", "GDPND005", "GDPND006", "GDPND009", "PRPND004", "PRPND009", "PRPND010"))
eb_ae$bd_location <- factor(eb_ae$bd_location, levels = c("supernatant", "biofilm"))
eb_ae$day <- factor(eb_ae$day, levels = c("Day_0", "Day_1", "Day_7"))

# Biofilm only, no supernatant, and days 1 and 7 only, no day 0
eb_ae_bf_only <- eb_ae %>% 
  filter(bd_location == "biofilm") %>% 
  filter(day != "Day_0") %>% 
  #log bd qty
  mutate(log_qty = log(bd_qty))
```

## PII Data Visualization

### Renwei barplot

```{r}
eb_ae %>%
ggplot(aes(y= bd_qty, x = site, fill=bd_location)) + 
    geom_col() +
    facet_grid(.~day)+
  theme_classic()+
  scale_fill_manual(values = c("lightgrey", "gray45" )) +
    theme(axis.text.x = element_text(angle = 90),
          legend.position = "bottom") + 
    scale_y_log10() +
    xlab("Site") +
   ylab("Total Bd Quantity Per Well \n (zoospore equivalents)") 
```

```{r}
# part2 <- eb_ae_bf_only %>%
# ggplot(aes(y= bd_qty, x = day)) + 
#     geom_boxplot(fill = no_microbes_.22_color) +
#     geom_jitter(alpha = 0.3, width = 0.1) +
#     theme_classic() +
#   scale_y_log10() +
#    theme(legend.position = "none",
#          strip.text = element_text(face="bold"),
#          axis.title = element_text(face = "bold")) + 
#     xlab("Time (days)") +
#     ylab("Bd Quantity \n (zoospore equivalents)") +
#   scale_x_discrete (labels= c("Day_1" = "Day 1", "Day_7" = "Day 7"))
# 
# # Let's add significance letters
# significance_data <- tibble(
#  day = factor(c("Day_1", "Day_7"), levels = c("Day_1", "Day_7")),
#   y_position = c(1.6e+05, 1.4e+04),  # Adjust this depending on your plot's scale
#   label = c("a", "b"))
# 
# part2 + 
# geom_text(data = significance_data, aes(x = day, y = y_position, label = label),
#             position = position_dodge(width = 0.75), vjust = 0) 
```

## PII Assumptions testing and Stats

Question:

Does the amount of Bd in the biofilm differ between day 1 and day 7?

The samples are essentially paired by site, so a paired t-test is most appropriate

$H0:Î¼_{difference in Bd}=0$

Assumptions:

Assumes that the observations from each group represent a random sample from the population. Assumes that the difference of the two observations follow a normal distribution.

Check assumptions

```{r}
# check normality of the differences across groups let's try untransformed
eb_ae_bf_only %>% 
 ggqqplot("bd_qty", title = "Untransformed Bd loads") +
  facet_wrap(~day) # gotta transform the data, day 1 is not normal

eb_ae_bf_only %>% 
  ggqqplot("log_qty", title = "Transformed Bd loads") +
  facet_wrap(~day) # not perfect but close, let's try shapiro tests

# Shapiro tests
day_one <- eb_ae_bf_only %>% 
  filter(day == "Day_1") %>% # filter to only include day 1
  pull(log_qty)

shapiro.test(day_one) # p >> 0.05, it's normal!

day_seven <- eb_ae_bf_only %>% 
  filter(day == "Day_7") %>% # filter to only include day 1
  pull(log_qty)

shapiro.test(day_seven) # p >> 0.05, it's normal!

# Histograms for funsies
eb_ae_bf_only %>% 
ggplot(aes(x = log_qty)) + # x-axis
  geom_histogram(bins = 4) + # make a histogram
  facet_wrap(~ day, # make multiple panels by day
             scales = "free") # let the axes vary between panels
```

Stats

```{r}
# Step 3: run the paired t-test
t.test(day_one, day_seven, paired = TRUE)
```

**There is significantly more Bd in the biofilm on Day 1 than on Day 7 (t = 10.094, df = 8, p-value \< 0.0001)**

# 4A: East Bay Monolayer

Scientific Q: Is mono-strain Bd biofilm resistant to microbes in pond water

Statistical question:

Is there a difference in the **gain or loss of ADHERENT Bd over 6 days** between the **filter sizes**?

**There is a significant difference in the change in the quantity of adherent Bd from Day 1 to Day 7 across the filter types (t = -6.45, df = 7, p-value = 0.0003)**

## PIII Data Wrangling

```{r}
eb_monolayer <- ns_ml_pw_bd %>% 
  filter(site != "MQ") %>% # remove control
  filter(bd_location == "adherent") # only want adherent Bd data

# keep control for labeling plot
eb_ml_controls <- ns_ml_pw_bd %>% 
  filter(site =="MQ") %>% # controls only
  filter(bd_location == "adherent") # only want adherent Bd data

# Data type cleaning
eb_monolayer$site <- factor(eb_monolayer$site,
                                levels = c("CABIN", "GRAMPS", "WEST", "GDPND005", "GDPND006", "GDPND009", "PRPND004", "PRPND009", "PRPND010"))
eb_monolayer$bd_location <- factor(eb_monolayer$bd_location, levels = c("supernatant", "adherent"))
eb_monolayer$day <- factor(eb_monolayer$day, levels = c("Day_1", "Day_7")) 

# get the total difference across days by combining both locations of Bd then subtracting across days
eb_monolayer_diff <- eb_monolayer %>%
  # pivot so each day has its own column
  pivot_wider(names_from = day, values_from = bd_qty) %>%
  # calculate the rate loss by taking the log of each before subtracting
  mutate(rate_loss = log(Day_1) - log(Day_7))

# Step 2: create subsets for each treatment
eb_monolayer_diff_40um <- eb_monolayer_diff %>% 
  filter(filter =="40um_filter")
eb_monolayer_diff.22um <- eb_monolayer_diff %>% 
  filter(filter =="0.22um_filter")

```

## PIII Data visualization

### Renwei barplot

```{r}
eb_monolayer %>%
ggplot(aes(y= bd_qty, x = site, fill = filter)) + 
    geom_col(position = position_dodge()) +
  scale_y_log10() +
    facet_wrap(~day)+
  scale_fill_manual(values = c("40um_filter" = with_microbes_40_color, 
                                "0.22um_filter" = no_microbes_.22_color)) +
    theme_classic() +
   theme(axis.text.x = element_text(angle = 90),
        legend.position = "bottom",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) + 
    xlab("Site") +
    ylab("Bd Quantity \n (zoospore equivalents)") +
  guides(fill=guide_legend(title=""))

```

### Boxplot

```{r}
eb_monolayer %>%

  # plot it
  ggplot(aes(y= bd_qty, x = filter, fill = filter)) + 
    geom_boxplot() +
  geom_jitter(width = 0.2, alpha = 0.3) +
    scale_y_log10() +
    facet_wrap(~day, labeller = labeller(day = c("Day_1" = "Day 1",
                                                    "Day_7" = "Day 7")))+
  scale_fill_manual(values = c("40um_filter" = with_microbes_40_color, 
                                "0.22um_filter" = no_microbes_.22_color)) +
    theme_classic() +
   theme(legend.position = "none",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) + 
  scale_x_discrete (labels= c("40um_filter" = "With Microbes", "0.22um_filter" = "No Microbes")) +
    xlab("Presence of Microbes in Pond Water Added to Monolayer Biofilm") +
    ylab("Bd Quantity \n (zoospore equivalents)") +

 # add controls ad x's
geom_point(data = eb_ml_controls, aes(x = filter, y = bd_qty), shape = 4, size = 2)

```

## PIII Stats and assumption testing

Question:

Does the difference in Bd from day 1 to day 7 differ between the two filter types?

The samples are essentially paired by site, so a paired t-test is most appropriate

$H0:Î¼_{difference in Bd}=0$

Assumptions:

Assumes that the observations from each group represent a random sample from the population. Assumes that the difference of the two observations follow a normal distribution.

### Test: Paired t-test on the difference in total Bd between day 1 and 7

```{r}
# check normality of the differences across groups
# With microbes (40 um)
eb_monolayer_diff_40um %>% 
 ggqqplot("rate_loss", title = "40um") # normal
shapiro.test(eb_monolayer_diff_40um$rate_loss) # normal, yay!
hist(eb_monolayer_diff_40um$rate_loss) # looks good

# Without microbes (0.22 um)
eb_monolayer_diff.22um%>% 
 ggqqplot("rate_loss", title = "0.22um") # looks good
shapiro.test(eb_monolayer_diff.22um$rate_loss) # normal, yay!
hist(eb_monolayer_diff$rate_loss) # looks good

# visualize the comparison I am making
eb_monolayer_diff %>%
ggplot(aes(y= rate_loss, x = filter)) + 
    geom_boxplot() +
  geom_jitter() +
  ggtitle("Visualizing comparison for paired t-test on the rate_loss")
```

Stats:

```{r}
# Step 3: run the paired t-test on the difference
t.test(eb_monolayer_diff_40um$rate_loss, eb_monolayer_diff.22um$rate_loss, paired = TRUE)
```

### Stats results:

When monolayer Bd biofilm is exposed to pond water without microbes has a significantly greater loss of Bd between day 1 to day 7 than pond water with microbes (t = -5.4, df = 8, p = 0.0006772). The t-value is negative, which shows that the first item entered (with microbes) has a smaller loss of Bd than the second item entered (no microbes).

## Second stats Q: qty \~ factor(day) + microbe_treatment, random = \~1\|factor(site)

Question: does the quantity of Bd differ across days and treatment while controlling for the paired site?

This will be a lme since it is a mixed effects model!

Data wrangling

```{r}
eb_monolayer <- eb_monolayer %>% 
  mutate(log_bd = log(bd_qty))

# Exploration: normality of transformed data
eb_monolayer %>% 
 ggqqplot("log_bd") # gorgeous

```

Assumptions testing

```{r}
par(mfrow = c(2,2))
# build model
mod6 <- lme(log_bd~day*factor(filter), random = ~1|site, data=eb_monolayer)
# model assumptions
plot(mod6) # passes homogeneity of variances
qqPlot(resid(mod6), main="QQ Plot of Residuals") # passes normality of resids
```

Interpret

```{r}
summary(mod6)
anova(mod6)

emmeans::emmeans(mod6, pairwise ~ day * filter) # pairwise comparisons
```

# Add in NCOS now

# Data reformatting and cleaning

```{r}
## aquatic environmental biofilm (4b but I think its supposed to be 3b)
# add column for microbes or no
ae <- fig_3b_raw %>% 
  rename(sample_ID = Adherent.sample.ID) %>% 
  
  # add columns for components y/n
  # add column for TB or no
  mutate(TB = case_when(
    str_detect(sample_ID, "TB") ~ "y",
    TRUE ~ "n"
  )) %>% 
  # add column for PW or no
  mutate(PW = case_when(
    str_detect(sample_ID, "PW") ~ "y",
    TRUE ~ "n"
  ))

# control data for ae
ae_control_data <- ae %>% 
  filter(day == 0) %>% 
  dplyr::select(day, adh)

## Monolayer (3b but I think its supposed tobe 4b)
# add column for microbes or no
monolayer <- fig_4b_raw %>% 
  rename(sample_ID = sample.ID) %>% 
  rename(adh_plus_sup = ahd_plus_sup) %>% 
  # rename sample_id to only include treatment, not day
  mutate(sample_ID = str_replace(sample_ID, "-D[0-9]+$", "")) %>% 

  # add columns for components y/n
  mutate(microbes = case_when(
    str_detect(sample_ID, "\\+microbes") ~ "y",
    TRUE ~ "n"
  )) %>% 
  # add column for TB or no
  mutate(TB = case_when(
    str_detect(sample_ID, "TB") ~ "y",
    TRUE ~ "n"
  )) %>% 
  # add column for PW or no
  mutate(PW = case_when(
    str_detect(sample_ID, "PW") ~ "y",
    TRUE ~ "n"
  ))
```


# 3b NCOS AE biofilm 

All microbe-depleted, NO pw microbe+ treatment

### Renwei's figure

![](data/3bRenwei.jpg){width="4in"}

### ggplot version: replicating Renwei's AE

```{r}
ae_summary <- ae %>%
  group_by(day, sample_ID) %>%
  reframe(mean = mean(adh), # calculate the mean
            n = length(adh), # count the number of observations
            df = n - 1, # calculate the degrees of freedom
            sd = sd(adh), # calculate the standard deviation
            se = sd/sqrt(n), # calculate the standard error
          ) %>%
  # add column for TB or no
  mutate(TB = case_when(str_detect(sample_ID, "TB") ~ "y", TRUE ~ "n")) %>%
  # add column for PW or no
  mutate(PW = case_when(str_detect(sample_ID, "PW") ~ "y", TRUE ~ "n"))

ae_summary %>%
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID,
                            levels = c("1%TB+AEbiofilm", "MQ+AEbiofilm",
                                       "PW+AEBiofilm",   "Added Bd"  ))) %>%

  ggplot(aes(x = day,
           y = mean,
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean - se, # plot the standard error
                    ymax = mean + se),
                width = 0.1) +
  geom_line() + 
  scale_y_log10(limits = c(1e3, 1e7),
                breaks = c(1e3, 1e4, 1e5, 1e6, 1e7)) +
  # vibes
  labs(x = "Day",
       y = "Bd Quantity per sample (ZE/well)",
       title = "Environmental Biofilm",
       caption = "only adherent Bd visualized here (the only data we have)") +
  scale_color_manual(values = c("1%TB+AEbiofilm"= "orange",
                                "MQ+AEbiofilm" = "blue",
                                "PW+AEBiofilm" = "magenta",
                                "Added Bd" = "darkgrey")) + # Assign specific colors to match RC's plot
  theme_minimal() +
  theme(
    panel.grid.major.x = element_blank(), # Remove major vertical grid lines
    panel.grid.minor.x = element_blank()) + # Remove minor vertical grid lines
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7))
```

### Caitlin's version AE

```{r}
ae_summary <- ae %>%
  group_by(day, sample_ID) %>%
  reframe(mean = mean(adh), # calculate the mean
            n = length(adh), # count the number of observations
            df = n - 1, # calculate the degrees of freedom
            sd = sd(adh), # calculate the standard deviation
            se = sd/sqrt(n), # calculate the standard error
          ) %>%
  # add column for TB or no
  mutate(TB = case_when(str_detect(sample_ID, "TB") ~ "y", TRUE ~ "n")) %>%
  # add column for PW or no
  mutate(PW = case_when(str_detect(sample_ID, "PW") ~ "y", TRUE ~ "n"))

ae_summary %>%
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID,
                            levels = c("1%TB+AEbiofilm", "MQ+AEbiofilm",
                                       "PW+AEBiofilm",   "Added Bd"  ))) %>%

  ggplot(aes(x = day,
           y = mean,
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean - se, # plot the standard error
                    ymax = mean + se),
                width = 0.1) +
  geom_line() + 
  scale_y_log10(limits = c(1e3, 1e7),
                breaks = c(1e3, 1e4, 1e5, 1e6, 1e7)) +
  # vibes
  labs(x = "Day",
       y = "Bd Quantity in AE Biofilm (ZE/well)",
        color = "Medium with\nAE Biofilm")+ # Title for color legend
  
  scale_color_manual(values = c("1%TB+AEbiofilm"= "#4477AA",
                                "MQ+AEbiofilm" = "#228833",
                                #"Added Bd" = "darkgrey",
                                "PW+AEBiofilm" = "#AA3377"),
                    labels = c("1%TB+AEbiofilm" = "TB Broth",
                               "MQ+AEbiofilm" = "MQ Water",
                               "PW+AEBiofilm" = "Filtered\nPond Water",
                                "Added Bd" = "Initial Bd")) + # Custom labels

 myCustomTheme()+
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7),
                   labels = c("Initial\nBd", "1", "3", "5", "7"))
```

## 3b EDA

### visualize y var: bd load

```{r}
# untransformed
ae_noday0 <- ae %>% 
  filter(day != 0) %>% 
  mutate(log_adh = log(adh)) # note: no zeroes so not log + 1
ggqqplot(ae_noday0, "adh", title = "untransformed")
shapiro.test(ae_noday0$adh) # nope
hist(ae_noday0$adh) # note

# transformed
ggqqplot(ae_noday0, "log_adh", title = "log transformed") # gorgeous
hist(ae_noday0$log_adh) # better
shapiro.test(ae_noday0$log_adh) # p-value = 0.1699 def normal
```

## 3b Stats

Keep interaction, skedasticity isn't "too bad", and will show underlying data in plot to be super transparent

y var: amount of Bd in adherent

x vars: day & medium with the AE biofilm and Bd (MQ, TB, PW)

Bd \~ day\*medium

Question: Does the amount of Bd in the aquatic environmental biofilm differ across the media tested and across the days, and do they interact with each other?

Model: 2-way ANOVA

**Summary of results**

Bd qty Day 1 \> Day 3 \> Day 5 \> Day 7 (all p \<0.005) in other words, Bd significantly reduced each day

MQ+AEbiofilm \> PW+AEBiofilm \> 1%TB+AEbiofilm (all p \<0.005) In other words, TB plus biofilm has most Bd inhibition power, followed by pond water, then by milliQ with the least inhibition power


## null

```{r}
null <- lm(log_adh ~ 1,
  data = ae_noday0)
AIC(null) #146.5865
```

## Bd \~ day\*medium

Note: Not perfectly homoskedstic but "good enough"

```{r}
# quick check: we want day as a FACTOR
ae_noday0 <- ae_noday0 %>% 
  mutate(day = as.factor(day)) %>% 
# column for medium
mutate(medium = sample_ID)
str(ae_noday0$day)

# set MQ as reference
ae_noday0$sample_ID <- factor(ae_noday0$sample_ID)
ae_noday0$sample_ID <- relevel(ae_noday0$sample_ID, ref = "MQ+AEbiofilm")

# build model
aov_3b <- aov(log_adh ~ day*medium,
  data = ae_noday0)

# diagnostic plot
par(mfrow = c(2,2))
plot(aov_3b) # kinda not homoskedastic

# look at results
summary(aov_3b)
anova(aov_3b) # all significant and interaction sig
AIC(aov_3b) # 37.78083 better than null

# posthoc
TukeyHSD(aov_3b)

# posthoc using emmeans
# use emmeans package to get the t value
# Perform pairwise comparisons for 'day'
em_day <- emmeans(aov_3b, ~ day)
tukey_day <- pairs(em_day, adjust = "tukey")
# Perform pairwise comparisons for 'medium'
em_medium <- emmeans(aov_3b, ~ medium)
tukey_medium <- pairs(em_medium, adjust = "tukey")

# Perform pairwise comparisons for 'day * medium' (interaction)
em_interaction <- emmeans(aov_3b, ~ day * medium)
tukey_interaction <- pairs(em_interaction, adjust = "tukey")
```

# Results write up

A two-way ANOVA revealed that there was a statistically significant difference in Bd load across days (F(3, 24) = 110.100, p = p <0.0001), across the media (F(2, 24) = 246.55, p <0.0001), and the interaction between the effects of day and medium were also significant (F(6, 24) = 10.145, p = p <0.0001). Bd was significantly lower with each day (Tukey test, p <0.005 for all) and TB plus biofilm has most Bd inhibition power, followed by pond water with no microbes, then by milliQ with the least inhibition power (Tukey test, p <0.05 for all).


# 4b NCOS Monolayer biofilm on Bd growth:

Note: only the ADHERENT Bd here!

### Renwei's figure

![](data/4b_monolayer.jpg){width="4in"}

### ggplot version: replicating Renwei's ML

```{r}
monolayer_summary <- monolayer %>% 
  group_by(day, sample_ID) %>% 
  reframe(mean_adh = mean(adh), # calculate the mean
            n = length(adh), # count the number of observations
            df = n - 1, # calculate the degrees of freedom
            sd = sd(adh), # calculate the standard deviation
            se = sd/sqrt(n), # calculate the standard error
          ) %>% 
  mutate(microbes = case_when(
    str_detect(sample_ID, "\\+microbes") ~ "y",TRUE ~ "n")) %>% 
  # add column for TB or no
  mutate(TB = case_when(str_detect(sample_ID, "TB") ~ "y", TRUE ~ "n")) %>% 
  # add column for PW or no
  mutate(PW = case_when(str_detect(sample_ID, "PW") ~ "y", TRUE ~ "n")) 

monolayer_summary %>% 
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID, 
                            levels = c("TB+PW+microbes","PW+microbes",
                                        "TB+PW-microbes", "PW-microbes"))) %>% 
  ggplot(aes(x = day, 
           y = mean_adh, 
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean_adh - se, # plot the standard error
                    ymax = mean_adh + se),
                width = 0.1) +
    geom_line(aes(linetype = microbes)) + 
  scale_y_log10(limits = c(1e4, 1e8), 
                breaks = c(1e4, 1e5, 1e6, 1e7, 1e8)) +
  # vibes
  labs(x = "Day",
       y = "Bd Quantity per sample (ZE/well)",
       title = "Monolayer",
       caption = "supernatant plus adherent visualized here") +
  scale_color_manual(values = c("TB+PW+microbes" = "palegreen4", 
                                "PW+microbes" = "magenta", 
                                "TB+PW-microbes" = "chocolate4", 
                                "PW-microbes" = "purple")) + # Assign specific colors to match RC's plot
  scale_linetype_manual(values = c("n" = "dashed", 
                                   "y" = "solid")) +
  theme_minimal() +
  theme(
    panel.grid.major.x = element_blank(), # Remove major vertical grid lines
    panel.grid.minor.x = element_blank()) + # Remove minor vertical grid lines
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7))
```

## Caitlin's version ML

```{r}
monolayer_summary %>% 
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID, 
                            levels = c("TB+PW+microbes","PW+microbes",
                                        "TB+PW-microbes", "PW-microbes"))) %>% 
  ggplot(aes(x = day, 
           y = mean_adh, 
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean_adh - se, # plot the standard error
                    ymax = mean_adh + se),
                width = 0.1) +
    geom_line(aes(linetype = microbes)) + 
  scale_y_log10(limits = c(1e4, 1e8), 
                breaks = c(1e4, 1e5, 1e6, 1e7, 1e8)) +
  
  # vibes
  labs(x = "Day",
       y = "Bd in mono-Bd biofilm (ZE/well)",
       color = "Medium",       # Title for color legend
       linetype = "Microbes Present") +
  scale_color_manual(values = c("TB+PW+microbes" = "#4477AA", 
                                "PW+microbes" = "#EE6677", 
                                "TB+PW-microbes" = "#66CCEE", 
                                "PW-microbes" = "#AA3377"), 
                    
                     labels = c("TB+PW+microbes" = "TB + PW + MO",
                               "PW+microbes" = "PW + MO",
                               "TB+PW-microbes" = "TB + PW - MO",
                                "PW-microbes" = "PW - MO")) + # Custom labels
 myCustomTheme()+
 scale_linetype_manual(values = c("n" = "dashed", 
                                   "y" = "solid"),
                        labels = c("n" = "N", "y" = "Y")) +  # Change labels to uppercase N and Y
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7),
                   labels = c("Initial\nBd", "1", "3", "5", "7"))
```

## 4b EDA

### visualize y var: bd load

Commented out to save space, log transformed is better

```{r}
# # untransformed
# ml_noday0 <- monolayer %>%
#   filter(day != 0) %>%
#   mutate(log_adh = log(adh)) # note: no zeroes so not log + 1
# ggqqplot(ml_noday0, "adh", title = "untransformed")
# shapiro.test(ml_noday0$adh) # nope
# hist(ml_noday0$adh) # note
# 
# # transformed
# ggqqplot(ml_noday0, "log_adh", title = "log transformed") # gorgeous
# hist(ml_noday0$log_adh) # better
```

## 4b Stats

y var: amount of Bd

x vars: day, treatment, microbes y/n, pw y/n, tb y/n

Best model: Bd \~ day\*microbes\*TB

Question: Does the amount of Bd in the sample differ across the treatments of presence of microbes, TB, and day?

Model: 3-way ANOVA

**results**

Results summary

-   day (p\<0.05)

    -   All differ from each other except 5 and 7 (Tukey)

        -   Day 1 \> Day 3 \> Day 5 = Day 7

-   microbes (p\<0.05)

    -   presence microbes has less Bd (Tukey)

-   TB (NOT SIG)

-   day:microbes (p\<0.05)

-   day:TB (NOT SIG)

-   microbes:TB (p\<0.05)

-   day:microbes:TB (NOT SIG)

```{r}
ml_noday0 <- monolayer %>%
  filter(day != 0) %>%
  mutate(log_adh = log(adh))

# quick check: we want day as a FACTOR
ml_noday0 <- ml_noday0 %>% 
  mutate(day = as.factor(day))
str(ml_noday0$day)

# set PW-microbes as reference (no milliQ here)
ml_noday0$sample_ID <- factor(ml_noday0$sample_ID)
ml_noday0$sample_ID <- relevel(ml_noday0$sample_ID, ref = "PW-microbes")

# change the names in microbes and tb so there arent 2 levels with y and n
ml_noday0 <- ml_noday0 %>% 
  mutate(
    microbes = case_when(
      microbes == "y" ~ "MO present",
      microbes == "n" ~ "MO absent"),
    TB = case_when(
      TB == "y" ~ "TB present",
      TB == "n" ~ "TB absent"))
```

## null

```{r}
null <- lm(log_adh ~ 1,
  data = ml_noday0)
AIC(null) #205.4965
```

## Bd \~ day\*microbes\*TB

```{r}
# build model
aov_4b <- aov(log_adh ~ day*microbes*TB,
  data = ml_noday0)

# diagnostic plot
par(mfrow = c(2,2))
plot(aov_4b) # looks good

# look at results
summary(aov_4b)
anova(aov_4b) # day, microbes, are significant, but TB alone is not. Interactions: day:microbes, microbes:TB are significant 
AIC(aov_4b) # 132.8989 better than null

TukeyHSD(aov_4b)

# posthoc using emmeans
# use emmeans package to get the t value
# Perform pairwise comparisons for 'day'
f4b_em_day <- emmeans(aov_4b, ~ day)
f4b_tukey_day <- pairs(f4b_em_day, adjust = "tukey")
f4b_tukey_day

# Perform pairwise comparisons for 'microbes'
f4b_em_microbes <- emmeans(aov_4b, ~ microbes)
f4b_tukey_microbes <- pairs(f4b_em_microbes, adjust = "tukey")
f4b_tukey_microbes

# Perform pairwise comparisons for microbes:TB (interaction)
f4b_em_int_microbe_TB <- emmeans(aov_4b, ~ microbes * TB)
f4b_tukey_int_microbe_TB <- pairs(f4b_em_int_microbe_TB, adjust = "tukey")
f4b_tukey_int_microbe_TB 

f4b_em_int_microbe_day <- emmeans(aov_4b, ~ microbes * day)
f4b_tukey_int_microbe_day <- pairs(f4b_em_int_microbe_day, adjust = "tukey")
f4b_tukey_int_microbe_day 

# Generate pairwise comparisons for 'day', 'TB', and 'water_treatment' by extracting the contrasts
pairwise_day_2b <- emmeans(mod3_glm, pairwise ~ day, adjust = "tukey")$contrasts %>%
  as.data.frame() %>%
  mutate(comparison = "day")

pairwise_TB_2b <- emmeans(mod3_glm, pairwise ~ TB, adjust = "tukey")$contrasts %>%
  as.data.frame() %>%
  mutate(comparison = "TB")

pairwise_water_treatment_2b <- emmeans(mod3_glm, pairwise ~ water_treatment, adjust = "tukey")$contrasts %>%
  as.data.frame() %>%
  mutate(comparison = "water_treatment")

# pairwise_day_TB_2b
pairwise_day_TB_2b <- emmeans(mod3_glm, pairwise ~ water_treatment * day, adjust = "tukey")$contrasts %>%
  as.data.frame() %>%
  mutate(comparison = "day x tb")

# pairwise_water_treatment_day_2b 
pairwise_water_treatment_day_2b <- emmeans(mod3_glm, pairwise ~ water_treatment * day, adjust = "tukey")$contrasts %>%
  as.data.frame() %>%
  mutate(comparison = "day x water treat")
```

# COMBINE PW AND AE FOR ALL

## Fig 5 Data wrangling

```{r}
# data wrangling for comparisons across experiments
pw_WITH_microbes <- eb_pw_total_diff %>%
  filter(filter != "0.22um_filter") %>% 
  mutate(treatment = "EB_PW_40um") %>% 
  rename(sample_ID = site) %>% 
  dplyr::select(sample_ID, treatment, rate_loss, Day_1)

## NCOS version fig 2 PW + MO
ncos_pw_WITH_microbes <- pw_noday0 %>% 
  filter(sample_ID == "PW+microorganism") %>% 
  filter(day != "3" & day != "5") %>%
  dplyr::select(day, sample_ID, replicate, adh_plus_sup) %>% 
  mutate(day = str_replace(as.character(day), "1", "Day_1"),
         day = str_replace(day, "7", "Day_7")) %>% 
 pivot_wider(names_from = day, values_from = adh_plus_sup) %>%
# calculate the rate loss by taking the log of each before subtracting
    mutate(treatment = "NCOS_PW_40um") %>% 
  mutate(rate_loss = log(Day_1) - log(Day_7)) %>% 
  dplyr::select(sample_ID, treatment, rate_loss, Day_1)

fieldbf_no_microbes <- eb_ae_bf_only %>%
   subset(select = -c(bd_location, log_qty)) %>% 
  filter(day != "Day_0") %>% 
# calculate the difference in raw amount of Bd
  pivot_wider(names_from = day, values_from = bd_qty) %>%
# calculate the rate loss by taking the log of each before subtracting
  mutate(rate_loss = log(Day_1) - log(Day_7)) %>% 
  mutate(treatment = "EB_biofilm") %>% 
  mutate(filter = "0.22um_filter") %>% 
  rename(sample_ID = site) %>% 
  dplyr::select(sample_ID, treatment, rate_loss, Day_1)

## NCOS version fig 3B ae bf with no microbes
ncos_ae_no_microbes <- ae_noday0 %>% 
  filter(sample_ID == "PW+AEBiofilm") %>% 
  filter(day != "3" & day != "5") %>%
  dplyr::select(day, sample_ID, replicate, adh) %>% 
  mutate(day = str_replace(as.character(day), "1", "Day_1"),
         day = str_replace(day, "7", "Day_7")) %>% 
 pivot_wider(names_from = day, values_from = adh) %>%
# calculate the rate loss by taking the log of each before subtracting
    mutate(treatment = "NCOS_biofilm") %>% 
  mutate(rate_loss = log(Day_1) - log(Day_7)) %>% 
  dplyr::select(sample_ID, treatment, rate_loss, Day_1)
  
all_parts<- bind_rows(pw_WITH_microbes, fieldbf_no_microbes, ncos_pw_WITH_microbes, ncos_ae_no_microbes)

# set PW 40 um as the intercept, comparing back to that one
all_parts$treatment <- factor(all_parts$treatment,
                          levels = c("EB_PW_40um", "NCOS_PW_40um", "EB_biofilm", "NCOS_biofilm")) 
```

## 5A: Biofilm vs pond water with sites combined

t-test

```{r}
# make a column for medium
all_parts <- all_parts %>% 
  mutate(medium = case_when(
    grepl("PW", treatment) ~ "PW",
    grepl("biofilm", treatment) ~ "Biofilm"
  ))

# assumptions testing
leveneTest(rate_loss ~ factor(medium), data = all_parts)

# assumptions testing
all_parts %>% 
 ggqqplot("rate_loss") # good
shapiro.test(all_parts$rate_loss) # normal, yay!
hist(all_parts$rate_loss)

t.test(rate_loss ~ medium, data = all_parts, var.equal = TRUE)
```

```{r}
f5a <- all_parts %>% 
  mutate(medium = fct_relevel(medium, "PW", "Biofilm")) %>% 
  ggplot(aes(y= rate_loss, x = medium, fill = medium)) + 
    geom_boxplot() +
  geom_jitter(alpha = 0.3, width = 0.05) +
    theme_classic() +
     scale_fill_manual(values = c("PW" = "white",
                                  "Biofilm" = "darkgrey")) +
   theme(legend.position = "none",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) +
    xlab("Treatment") +
    ylab("Rate of Loss of Bd over 6 Days") + 
   scale_x_discrete (labels= c("PW" = "Pond water + MO",
                              "Biofilm" = "AE Biofilm"))
f5a
```

## 5B pairwise comparisons across treatments

Stats and assumption testing

Exploratory viz:

```{r}
exploratory_viz <- all_parts %>% 
  ggplot(aes(y= rate_loss, x = treatment)) + 
    geom_boxplot() +
  geom_jitter(alpha = 0.5, width = 0.05) +
    theme_classic() +
   theme(legend.position = "bottom",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) +
    xlab("Treatment") +
    ylab("Rate of Loss of Bd over 7 Days") + 
  ggtitle("Exploratory visualization, not final plot")
```

Assumptions testing

```{r}
par(mfrow = c(2,2))
aov_5b <- aov(rate_loss~treatment, data=all_parts)
plot(aov_5b)
```

interpret

```{r}
# with microbe depleted
summary(aov_5b) # sig effect of treatment
TukeyHSD(aov_5b)

post_hoc_rateloss <- glht(aov_5b, # with your ANOVA model
                 linfct = mcp(treatment = "Tukey"))
summary(post_hoc_rateloss)
cld(post_hoc_rateloss) 

# export cld results as a dataframe
cld_results_rateloss <- cld(post_hoc_rateloss)
labels_rl <- cld_results_rateloss$mcletters$Letters
treatments_rl <- names(labels_rl)
labels_rl <- as.character(labels_rl)

sig_data_rl <- tibble(
  treatment = treatments_rl,
  y_position = c(7,4,6.5,4),
  label = labels_rl)

## emmeans for posthoc
f5b_em_treat <- emmeans(aov_5b, ~ treatment)
f5b_tukey_treat <- pairs(f5b_em_treat, adjust = "tukey")
f5b_tukey_treat
```


# \*PUBLICATION FIGURES



## Fig 3

3A: AE Biofilm 

```{r}
fig_3a_boxplot <- eb_ae_bf_only  %>%
ggplot(aes(y= bd_qty, x = day)) + 
    geom_boxplot(fill = no_microbes_.22_color) +
    geom_jitter(alpha = 0.3, width = 0.05) +
    myCustomTheme() +
  scale_y_log10() +
   theme(legend.position = "none",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) + 
    xlab("Day") +
    ylab("Bd Quantity (ZE)") +
  scale_x_discrete (labels= c("Day_1" = "1", "Day_7" = "7"))

# Let's add significance letters
significance_data <- tibble(
 day = factor(c("Day_1", "Day_7"), levels = c("Day_1", "Day_7")),
  y_position = c(1.6e+05, 1.4e+04),  # Adjust this depending on your plot's scale
  label = c("a", "b"))

fig_3a <- fig_3a_boxplot + 
geom_text(data = significance_data, aes(x = day, y = y_position, label = label),
            position = position_dodge(width = 0.75), vjust = 0) 

fig_3a
```


3B: AE Biofilm 

```{r}
# Convert factor day to numeric while preserving original values
ae_noday0$day <- as.numeric(as.character(ae_noday0$day))


# add column for microbes or no
fig_3b <- ae_summary %>%
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID,
                            levels = c("1%TB+AEbiofilm", "MQ+AEbiofilm",
                                       "PW+AEBiofilm",   "Added Bd"  ))) %>%

  ggplot(aes(x = day,
           y = mean,
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean - se, # plot the standard error
                    ymax = mean + se),
                width = 0.1) +
  geom_line() + 
  
  # Adding the raw data as a layer with jitter
  geom_point(data = ae_noday0, 
             aes(x = day, 
                 y = adh, 
                 color = sample_ID),  # Raw data points
             position = position_jitter(width = 0.1, seed = 1),
             alpha = 0.3) +
  
  # controls raw data
    geom_point(data = ae_control_data, 
             aes(x = day, 
                 y = adh, 
                 color = "#BBBBBB"),  # Raw data points
             position = position_jitter(width = 0.1, seed = 1),
             alpha = 0.3) +
  
  # Adding the raw data as a layer with jitter
  geom_point(data = ae_noday0,
             aes(x = day,
                 y = adh,
                 color = sample_ID),  # Raw data points
             position = position_jitter(width = 0.1, seed = 1),
             alpha = 0.3) +
  
  scale_y_log10(limits = c(1e3, 1e7),
                breaks = c(1e3, 1e4, 1e5, 1e6, 1e7)) +
  # vibes
  labs(x = "Day",
       y = "Bd Quantity (ZE)",
        color = "Medium with\nAE Biofilm")+ # Title for color legend
  
  scale_color_manual(values = c("1%TB+AEbiofilm"= "#4477AA",
                                "MQ+AEbiofilm" = "#228833",
                                #"Added Bd" = "darkgrey",
                                "PW+AEBiofilm" = "#AA3377"),
                    labels = c("1%TB+AEbiofilm" = "TB Broth",
                               "MQ+AEbiofilm" = "MQ Water",
                               "PW+AEBiofilm" = "Filtered\nPond Water",
                                "Added Bd" = "Initial Bd")) + # Custom labels

 myCustomTheme()+
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7),
                   labels = c("Initial\nBd", "1", "3", "5", "7"))
```

Fig 3 combined

```{r}
# Combine fig_2a and fig_2b side by side
fig3 <- fig_3a + fig_3b + 
  plot_layout(widths = c(1, 1)) +   # Ensure equal widths for both plots
  plot_annotation(tag_levels = 'A')  # Adds "A" and "B" to the upper corners

fig3
#ggsave("3a_3b.png", plot = fig3, width = 14, height = 5, dpi = 1000)
```

## Fig 4

```{r}
fig_4a <- eb_monolayer %>% 
  # plot it
  ggplot(aes(y= bd_qty, x = filter, fill = filter)) + 
    geom_boxplot() +
  geom_jitter(width = 0.2, alpha = 0.3) +
    scale_y_log10() +
    facet_wrap(~day, labeller = labeller(day = c("Day_1" = "Day 1",
                                                    "Day_7" = "Day 7")))+
  scale_fill_manual(values = c("40um_filter" = with_microbes_40_color, 
                                "0.22um_filter" = no_microbes_.22_color)) +
 myCustomTheme()+
   theme(legend.position = "none",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) + 
  scale_x_discrete (labels= c("40um_filter" = "With Microbes", "0.22um_filter" = "No Microbes")) +
    xlab("Presence of Microbes in PW with Monolayer") +
    ylab("Bd Quantity (ZE)") +

 # add controls ad x's
geom_point(data = eb_ml_controls, aes(x = filter, y = bd_qty), shape = 4, size = 2)
```


```{r}
# Convert factor day to numeric while preserving original values
ml_noday0$day <- as.numeric(as.character(ml_noday0$day))

fig_4b <- monolayer_summary %>% 
  # reorder to match Renwei's plot
  mutate(sample_ID = factor(sample_ID, 
                            levels = c("TB+PW+microbes","PW+microbes",
                                        "TB+PW-microbes", "PW-microbes"))) %>% 
  ggplot(aes(x = day, 
           y = mean_adh, 
           color = sample_ID)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = mean_adh - se, # plot the standard error
                    ymax = mean_adh + se),
                width = 0.1) +
    geom_line(aes(linetype = microbes)) + 
  
  # raw data
   geom_point(data = ml_noday0, 
             aes(x = day, 
                 y = adh_plus_sup, 
                 color = sample_ID),  # Raw data points
             position = position_jitter(width = 0.1, seed = 1),
             alpha = 0.3) +
  scale_y_log10(limits = c(1e4, 1e8), 
                breaks = c(1e4, 1e5, 1e6, 1e7, 1e8)) +
  
  # vibes
  labs(x = "Day",
       y = "Bd Quantity (ZE)",
       color = "Medium",       # Title for color legend
       linetype = "Microbes\nPresent") +
  scale_color_manual(values = c("TB+PW+microbes" = "#4477AA", 
                                "PW+microbes" = "#EE6677", 
                                "TB+PW-microbes" = "#66CCEE", 
                                "PW-microbes" = "#AA3377"), 
                    
                     labels = c("TB+PW+microbes" = "TB + PW + MO",
                               "PW+microbes" = "PW + MO",
                               "TB+PW-microbes" = "TB + PW - MO",
                                "PW-microbes" = "PW - MO")) + # Custom labels
 myCustomTheme()+
 scale_linetype_manual(values = c("n" = "dashed", 
                                   "y" = "solid"),
                        labels = c("n" = "N", "y" = "Y")) +  # Change labels to uppercase N and Y
  scale_x_continuous(breaks = c(0, 1, 3, 5, 7),
                   labels = c("Initial\nBd", "1", "3", "5", "7"))

fig_4b
```

Fig 4 combined

```{r}
# Combine fig_2a and fig_2b side by side
fig4 <- fig_4a + fig_4b + 
  plot_layout(widths = c(1, 1)) +   # Ensure equal widths for both plots
  plot_annotation(tag_levels = 'A')  # Adds "A" and "B" to the upper corners

fig4

#ggsave("4a_4b.png", plot = fig4, width = 14, height = 5, dpi = 1000)
```

## Fig 5

5a

```{r}
f5a <- all_parts %>% 
  mutate(medium = fct_relevel(medium, "PW", "Biofilm")) %>% 
  ggplot(aes(y= rate_loss, x = medium, fill = medium)) + 
    geom_boxplot() +
  geom_jitter(alpha = 0.3, width = 0.05) +
    myCustomTheme() +
     scale_fill_manual(values = c("PW" = "white",
                                  "Biofilm" = "darkgrey")) +
   theme(legend.position = "none",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) +
    xlab("Medium") +
    ylab("Rate of Loss of Bd over 6 Days") + 
   scale_x_discrete (labels= c("PW" = "Pond water + MO",
                              "Biofilm" = "AE Biofilm"))
f5a
```


5b

```{r}
all_parts$treatment <- factor(all_parts$treatment) 
  
fig5 <- all_parts %>% 
    mutate(site = case_when(
    grepl("NCOS", treatment) ~ "Santa Barbara",
    TRUE ~ "East Bay"  # Default to "east Bay"
  )) %>% 
   ggplot(aes(y= rate_loss, x = treatment, fill = medium)) +
    geom_boxplot() +
  geom_jitter(alpha = 0.3, width = 0.05) +
    myCustomTheme() +
  # biofilm and pond water colors, both from paul tol colorblind palette
   scale_fill_manual(values = c("PW" = "white",
                                  "Biofilm" = "darkgrey")) +
  #facet_wrap(~site, scales = "free_x") +
   theme(legend.position = "none",
         strip.text = element_text(face="bold"),
         axis.title = element_text(face = "bold")) +
  xlab("Treatment") +
  ylab("Rate loss of Bd over 6 Days") + 
  scale_x_discrete (limits = c("EB_PW_40um", "EB_biofilm", 
                               "NCOS_PW_40um", "NCOS_biofilm"),  # Specify the order
                        labels= c(
                              "EB_PW_40um" = "East Bay\nPW + MO",
                              "NCOS_PW_40um" = "SB \nPW + MO",
                              "EB_biofilm" = "East Bay\nBiofilm",
                              "NCOS_biofilm" = "SB \nBiofilm"))
sig_data_rl <- sig_data_rl %>% 
    mutate(site = case_when(
    grepl("NCOS", treatment) ~ "Santa Barbara",
    TRUE ~ "East Bay"  # Default to "east Bay"
  ))

f5b <- fig5 + geom_text(data = sig_data_rl, aes(x = treatment, y = y_position, label = label, group = site), inherit.aes = FALSE) 

f5b
```

Combine the figs

```{r}
# Combine fig_2a and fig_2b side by side
fig5ab <- f5a + f5b + 
  plot_layout(widths = c(1, 1)) +   # Ensure equal widths for both plots
  plot_annotation(tag_levels = 'A')  # Adds "A" and "B" to the upper corners

fig5ab

#ggsave("5a_5b.png", plot = fig5ab, width = 10, height = 5, dpi = 1000)
```

# * Stats tables

## 3B stats 2way anova

### anova table

```{r}
# anova table
anova_output <- tidy(aov_3b)

aov_3b_tbl <- anova_output %>%
  dplyr::select(term, df, sumsq, meansq, statistic, p.value) %>%
  gt() %>%
  tab_header(
    title = "ANOVA Table"
  ) %>%
  fmt_number(
    columns = c(sumsq, meansq, statistic),
    decimals = 2
  ) %>%
  cols_label(
    term = "Term",
    df = "Df",
    sumsq = "Sum Sq",
    meansq = "Mean Sq",
    statistic = "F value",
    p.value = "P-value"
  ) %>%  # scientific number format for values <0.001 in p values
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  # 3 decimals for p values >=0.001
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  )
aov_3b_tbl

# prettier, simplified
anova_output <- tidy(aov_3b)

# Modify term to include degrees of freedom in *italics*
anova_output <- anova_output %>%
  mutate(term = ifelse(grepl("day:medium", term), "day x medium", term)) %>% 
  mutate (term = paste0(term, " (*df = ", df, ", ", anova_output[df == max(df), "df"], "*)")) %>% 
  filter(term != "Residuals (*df = 24, 24*)")

# Create the gt table with selected columns
aov_3b_tbl_b <- anova_output %>%
  dplyr::select(term, statistic, p.value) %>%
  gt() %>%
  tab_header(
    title = "ANOVA Table"
  ) %>%
  fmt_markdown(
    columns = c(term)
  ) %>%
  fmt_number(
    columns = c(statistic),
    decimals = 2
  ) %>%
  cols_label(
    term = "",
    statistic = "F value",
    p.value = "P-value"
  ) %>%
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  )

aov_3b_tbl_b
```

### posthoc table

```{r}
# post hoc table
# Convert Tukey emmeans results to data frames
tukey_day_df <- as.data.frame(tukey_day)
tukey_medium_df <- as.data.frame(tukey_medium)
tukey_interaction_df <- as.data.frame(tukey_interaction)

# Add labels to indicate which factor the comparison refers to
tukey_day_df <- tukey_day_df %>% mutate(factor = "Day")
tukey_medium_df <- tukey_medium_df %>% mutate(factor = "Medium")
tukey_interaction_df <- tukey_interaction_df %>% mutate(factor = "Interaction")

all_tukey_df <- bind_rows(tukey_day_df, tukey_medium_df, tukey_interaction_df)
ph3b_table <- all_tukey_df %>%
  dplyr::select(factor, contrast, estimate, SE, df, t.ratio, p.value) %>%
  gt() %>%
  # change column names
  cols_label(
    factor = "Comparison",
    contrast = "Group Comparison",
    estimate = "Estimate",
    SE = "Standard Error",
    df = "Degrees of Freedom",
    t.ratio = "t-Ratio",
    p.value = "p-value"
  ) %>%
  # update header for table
  tab_header(
    title = "Emmeans Post-hoc Test Results"
  ) %>%
  # 3 decimal places
  fmt_number(
    columns = c(estimate, SE, t.ratio),
    decimals = 3
  ) %>%
  # scientific number format for values <0.001 in p values
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  # 3 decimals for p values >=0.001
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  ) %>%
  #make the headers bold
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_column_labels(everything()))
ph3b_table
```

Simplified anova table inspiration: https://link.springer.com/article/10.1007/s11356-015-4566-8/tables/1

## 4b stats 

anova table

```{r}
# anova table
anova_output4b <- tidy(aov_4b)

aov_4b_tbl <- anova_output4b %>%
  dplyr::select(term, df, sumsq, meansq, statistic, p.value) %>%
  gt() %>%
  tab_header(
    title = "4b ANOVA Table"
  ) %>%
  fmt_number(
    columns = c(sumsq, meansq, statistic),
    decimals = 2
  ) %>%
  cols_label(
    term = "Term",
    df = "Df",
    sumsq = "Sum Sq",
    meansq = "Mean Sq",
    statistic = "F value",
    p.value = "P-value"
  ) %>%  # scientific number format for values <0.001 in p values
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  # 3 decimals for p values >=0.001
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  )
aov_4b_tbl

# prettier, simplified
anova_output4b <- tidy(aov_4b)

# Modify term to include degrees of freedom in *italics*
anova_output4b <- anova_output4b %>%
  mutate(term = gsub(":", " x ", term)) %>% 
  mutate (term = paste0(term, " (*df = ", df, ", ", anova_output4b[df == max(df), "df"], "*)")) %>%
  filter(term != "Residuals (*df = 32, 32*)")

# Create the gt table with selected columns
aov_4b_tbl_b <- anova_output4b %>%
  dplyr::select(term, statistic, p.value) %>%
  gt() %>%
  tab_header(
    title = "4b ANOVA Table"
  ) %>%
  fmt_markdown(
    columns = c(term)
  ) %>%
  fmt_number(
    columns = c(statistic),
    decimals = 2
  ) %>%
  cols_label(
    term = "",
    statistic = "F value",
    p.value = "P-value"
  ) %>%
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  )

aov_4b_tbl_b
```


post hoc

```{r}
# post hoc table
# Convert Tukey emmeans results to data frames
f4b_tukey_day_df <- as.data.frame(f4b_tukey_day)
f4b_tukey_microbes_df <- as.data.frame(f4b_tukey_microbes)
f4b_tukey_int_microbe_day_df <- as.data.frame(f4b_tukey_int_microbe_day)
f4b_tukey_int_microbe_TB_df <- as.data.frame(f4b_tukey_int_microbe_TB)

# Add labels to indicate which factor the comparison refers to
f4b_tukey_day_df  <- f4b_tukey_day_df  %>% mutate(factor = "Day")
f4b_tukey_microbes_df <- f4b_tukey_microbes_df %>% mutate(factor = "Medium")
f4b_tukey_int_microbe_day_df <- f4b_tukey_int_microbe_day_df %>% mutate(factor = "Day x microbes")
f4b_tukey_int_microbe_TB_df <- f4b_tukey_int_microbe_TB_df %>% mutate(factor = "Microbes x TB")

f4b_all_tukey_df <- bind_rows(f4b_tukey_day_df, f4b_tukey_microbes_df, f4b_tukey_int_microbe_TB_df, f4b_tukey_int_microbe_day_df)

f4b_all_tukey_df <- f4b_all_tukey_df %>% 
  mutate(contrast = gsub("MO present TB absent", "microbes only", contrast),
         contrast = gsub("MO present TB present", "both microbes and TB", contrast),
         contrast = gsub("MO absent TB absent", "neither microbes nor TB", contrast),
         contrast = gsub("MO absent TB present", "TB only", contrast))


ph4b_table <- f4b_all_tukey_df %>%
  dplyr::select(factor, contrast, estimate, SE, df, t.ratio, p.value) %>%
  gt() %>%
  # change column names
  cols_label(
    factor = "Comparison",
    contrast = "Group Comparison",
    estimate = "Estimate",
    SE = "Standard Error",
    df = "Degrees of Freedom",
    t.ratio = "t-Ratio",
    p.value = "p-value"
  ) %>%
  # update header for table
  tab_header(
    title = "4b Emmeans Post-hoc Test Results"
  ) %>%
  # 3 decimal places
  fmt_number(
    columns = c(estimate, SE, t.ratio),
    decimals = 3
  ) %>%
  # scientific number format for values <0.001 in p values
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  # 3 decimals for p values >=0.001
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  ) %>%
  #make the headers bold
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_column_labels(everything()))

ph4b_table
```

## 5B stats

anova table

```{r}
# anova table
anova_output <- tidy(aov_5b)

aov_5b_tbl <- anova_output %>%
  dplyr::select(term, df, sumsq, meansq, statistic, p.value) %>%
  gt() %>%
  tab_header(
    title = "5b ANOVA Table"
  ) %>%
  fmt_number(
    columns = c(sumsq, meansq, statistic),
    decimals = 2
  ) %>%
  cols_label(
    term = "Term",
    df = "Df",
    sumsq = "Sum Sq",
    meansq = "Mean Sq",
    statistic = "F value",
    p.value = "P-value"
  ) %>%  # scientific number format for values <0.001 in p values
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  # 3 decimals for p values >=0.001
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  )
aov_5b_tbl

# prettier, simplified
anova_output <- tidy(aov_5b)

# Modify term to include degrees of freedom in *italics*
anova_output <- anova_output %>%
  mutate(term = ifelse(grepl("day:medium", term), "day x medium", term)) %>% 
  mutate (term = paste0(term, " (*df = ", df, ", ", anova_output[df == max(df), "df"], "*)")) %>% 
  filter(term != "Residuals (*df = 26, 26*)")

# Create the gt table with selected columns
aov_5b_tbl_b <- anova_output %>%
  dplyr::select(term, statistic, p.value) %>%
  gt() %>%
  tab_header(
    title = "5b ANOVA Table"
  ) %>%
  fmt_markdown(
    columns = c(term)
  ) %>%
  fmt_number(
    columns = c(statistic),
    decimals = 2
  ) %>%
  cols_label(
    term = "",
    statistic = "F value",
    p.value = "P-value"
  ) %>%
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  )

aov_5b_tbl_b
```

pairwise

```{r}
f5b_tukey_df <-as.data.frame(f5b_tukey_treat)
f5b_tukey_df <- f5b_tukey_df %>% 
  mutate(factor = "Treatment")

unique(f5b_tukey_df$contrast)

f5b_tukey_df <- f5b_tukey_df %>% 
  mutate(contrast = gsub("NCOS_PW_40um", "SB PW Microbes", contrast),
         contrast = gsub("NCOS_biofilm", "SB Biofilm", contrast),
         contrast = gsub("EB_PW_40um", "EB PW Microbes", contrast),
         contrast = gsub("EB_biofilm", "EB Biofilm", contrast))

ph5b_table <- f5b_tukey_df %>%
  dplyr::select(contrast, estimate, SE, df, t.ratio, p.value) %>%
  gt() %>%
  # change column names
  cols_label(
    contrast = "Comparison",
    estimate = "Estimate",
    SE = "Standard Error",
    df = "Degrees of Freedom",
    t.ratio = "t-Ratio",
    p.value = "p-value"
  ) %>%
  # update header for table
  tab_header(
    title = "5b Emmeans Post-hoc Test Results"
  ) %>%
  # 3 decimal places
  fmt_number(
    columns = c(estimate, SE, t.ratio),
    decimals = 3
  ) %>%
  # scientific number format for values <0.001 in p values
  fmt_scientific(
    columns = c(p.value),
    decimals = 1,
    rows = p.value < 0.001
  ) %>%
  # 3 decimals for p values >=0.001
  fmt_number(
    columns = c(p.value),
    decimals = 3,
    rows = p.value >= 0.001
  ) %>%
  #make the headers bold
  tab_style(
    style = list(
      cell_text(weight = "bold")
    ),
    locations = cells_column_labels(everything()))
ph5b_table
```



